{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-stellar/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-stellar/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/fcircle.js","path":"js/plugins/fcircle.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/friends.js","path":"js/plugins/friends.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/ghinfo.js","path":"js/plugins/ghinfo.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/linkcard.js","path":"js/plugins/linkcard.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/sites.js","path":"js/plugins/sites.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/timeline.js","path":"js/plugins/timeline.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"9320272ccd3b82d51bd0b9e36f68789952047666","modified":1667700229415},{"_id":"source/about/index.md","hash":"49c4b488767a891ea24b752478e0db6955c6907f","modified":1667426762441},{"_id":"source/_data/widgets.yml","hash":"e32da11c05d9b0b025d3d36aa59f80d10bed0900","modified":1667362604114},{"_id":"source/_posts/2022-07-06-C语言学习记录_day.md","hash":"7ef4575855d96edce3add41e13630c70119fcc0a","modified":1667357323473},{"_id":"source/_posts/2022-07-06_Linux常用命令.md","hash":"30fa7cfa602f4f958405aab3c29ce0836aa75e07","modified":1667357331403},{"_id":"source/_posts/.DS_Store","hash":"e14fd53eb323633fa70ca29a9a1d56c8264b2545","modified":1667700870370},{"_id":"source/_posts/2022-07-06_初识Linux .md","hash":"bc42da1a61fe439447868e14ea85481880357fb0","modified":1667357341221},{"_id":"source/_posts/2022-09-15_Hexo-Linux搭建博客.md","hash":"f6fce684bd8c915e8575cdda2980513011c3db87","modified":1667357319876},{"_id":"source/_posts/2022-10-28_C语言笔记简化版.md","hash":"b6dc23156e945b2bdb6858885ece6a503e2b1733","modified":1667357306607},{"_id":"source/_posts/2022-10-19_学生成绩管理系统.md","hash":"25d8525de704e229b02c1ee3fbff880e4e402407","modified":1667361418146},{"_id":"source/_posts/2022-11-1_链表实现学生成绩管理系统.md","hash":"14a07169ca3dcc6c04f2987fbd33c716cc80ea2a","modified":1667361406293},{"_id":"source/_posts/2022-11-3_二叉树学习笔记.md","hash":"57cb014f43c89ffefcf0a1c771271905593ad7aa","modified":1667663255745},{"_id":"source/_posts/2022-11-5_python.md","hash":"a63e503ebe29fffea806d4505cb5559a3ca913db","modified":1667700776391},{"_id":"source/_posts/2022-12-9-lg2.md","hash":"9d5b09a5cf84908023ca3b6a10231f404ce241cc","modified":1670594250695},{"_id":"source/_posts/2022-12-9-lg1.md","hash":"85a8054e06a0cb55620079d16a59705e17a9d1f4","modified":1670593830523},{"_id":"source/_posts/ayst_2.md","hash":"15678c0dcbc3b018ab89dc3fb8819fcb3ceb12d7","modified":1670639772592},{"_id":"source/_posts/ayst.md","hash":"08bb18868ab49fb974bbfef014f996d821154f7f","modified":1670639779811},{"_id":"source/_posts/fm.md","hash":"470b18f1a5e524a66249b9c8342f5777a527d4f4","modified":1670639385629},{"_id":"source/_posts/bjj.md","hash":"6f86c1bcadab755d983836954bfc4496cf52f576","modified":1670639702488},{"_id":"source/_posts/lifenow.md","hash":"4aca909162630f41b3708cd85183f0eaa2d7068b","modified":1670639739333},{"_id":"source/_posts/lmcs.md","hash":"4a52904e0696bd4fcefe7b9a76f9820f3a3f556e","modified":1670639393840},{"_id":"source/_posts/jobs.md","hash":"76dcf6dc234f3ea4c61f6be81789f8217738f72f","modified":1670639747940},{"_id":"source/_posts/scanf.md","hash":"72e5f973599c389888ec20419edaa02abcf4c0aa","modified":1668639345676},{"_id":"source/_posts/two_tree.md","hash":"8971abc2f5557b80d963bdc2bf362d932972e367","modified":1670553854394},{"_id":"source/_posts/twofind.md","hash":"6e2b5f30f8ffd807d510d2b40d164da82b303e55","modified":1668779619628},{"_id":"source/_posts/python_student.md","hash":"078abdf81e3f56f3b48b021ac5a65571e534075a","modified":1670638862189},{"_id":"source/_posts/ywyjxz.md","hash":"f59ff24a6c92d1123a24fa1e647a5ee42857f18e","modified":1670639721262},{"_id":"source/_posts/zhailu.md","hash":"ad6e178e73e62adaeac05971dd7bee6bbc40271c","modified":1670638766562},{"_id":"source/index/index.md","hash":"d27c7a0ed2d178d1b04f4760ede25f5770c735d0","modified":1667426750841},{"_id":"source/more/index.md","hash":"6e68a54fef238ead554c0611a268e630795f5ce3","modified":1667362418151},{"_id":"source/friends/index.md","hash":"374db145a84c2cd39d14adda4d3de074089a8f07","modified":1667362252627},{"_id":"source/notes/index.md","hash":"504bcc809361ae1f8533c418c70eb47488da4657","modified":1667233064000},{"_id":"source/more/.DS_Store","hash":"c2e2da5c9ae298705cfe1db2e280f871acd77437","modified":1667375611652},{"_id":"source/notes/.DS_Store","hash":"a6eb912c06ffe07158961d721bfad18a73f39374","modified":1667361853723},{"_id":"source/post/index.md","hash":"4eb83e8ebc6a323db64e216d034d24f390dc4452","modified":1667233068319},{"_id":"source/wiki/学生成绩管理系统/index.md","hash":"a3c3716f5e32ad5556203bc44888312bb7dfd3bb","modified":1667361627182},{"_id":"node_modules/hexo-theme-stellar/README.md","hash":"37541a8c28ee6bb0906c225e0e41c31a1e73a086","modified":1667231184404},{"_id":"node_modules/hexo-theme-stellar/LICENSE","hash":"7fdfdb5dbc7d672fa28a2a3c9efa03ff8df5917d","modified":1667231184363},{"_id":"node_modules/hexo-theme-stellar/package.json","hash":"6e0d33c12998e686764f839351212abbab9e1022","modified":1667231184404},{"_id":"node_modules/hexo-theme-stellar/_config.yml","hash":"a085833bd7a6e7526d8ca07ba3cb32d31a4d50ff","modified":1667231184425},{"_id":"node_modules/hexo-theme-stellar/_data/links.yml","hash":"692b4bc59b86ab3e8c73f90e9bf4291b25561337","modified":1667231184426},{"_id":"node_modules/hexo-theme-stellar/languages/zh-CN.yml","hash":"67d18e4012aca45d8614d1d003fcc88093547145","modified":1667231184427},{"_id":"node_modules/hexo-theme-stellar/_data/widgets.yml","hash":"b27779e10db2680a4ba0cd2691e744ce70bf9ab0","modified":1667231184426},{"_id":"node_modules/hexo-theme-stellar/languages/zh-TW.yml","hash":"f4eb860539acc02a0934f790f61375537e5dd4a4","modified":1667231184427},{"_id":"node_modules/hexo-theme-stellar/languages/en.yml","hash":"786f420ce5a904622177fbb4ceb3bcd21d010fe4","modified":1667231184426},{"_id":"node_modules/hexo-theme-stellar/layout/404.ejs","hash":"de777c172dc35a27a09394d770f83c8c1e54a557","modified":1667231184364},{"_id":"node_modules/hexo-theme-stellar/layout/index.ejs","hash":"b349bb70bfc780e98bc334af9fe0419cd9047978","modified":1667231184372},{"_id":"node_modules/hexo-theme-stellar/layout/archive.ejs","hash":"ef91a073521dab22fcd191b1970982e7a836d698","modified":1667231184364},{"_id":"node_modules/hexo-theme-stellar/layout/layout.ejs","hash":"6ea432c18cdc9d19433bd9bc70380cc58f42f20a","modified":1667231184376},{"_id":"node_modules/hexo-theme-stellar/layout/mathjax.ejs","hash":"b43088ee89e5669e772cd464da2a89f9221e3a2d","modified":1667231184377},{"_id":"node_modules/hexo-theme-stellar/layout/post.ejs","hash":"c4f577a6153e1ef0de010ec6a1428f7e49017129","modified":1667231184380},{"_id":"node_modules/hexo-theme-stellar/layout/page.ejs","hash":"cd77248c07751b0bea92a52b2fab564415a58b93","modified":1667231184377},{"_id":"node_modules/hexo-theme-stellar/layout/tags.ejs","hash":"0307bf728c1f64e83808fcccd20336f83fb9dc28","modified":1667231184382},{"_id":"node_modules/hexo-theme-stellar/layout/wiki.ejs","hash":"6c3f88c3dbb8057cd363276400b777279056c3f0","modified":1667231184383},{"_id":"node_modules/hexo-theme-stellar/scripts/events/index.js","hash":"a3d83e2577ff159c3d70ff345b690faae6c3147d","modified":1667231184393},{"_id":"node_modules/hexo-theme-stellar/scripts/filters/index.js","hash":"5667f028990dd556133080090a5fcb00c64f05ac","modified":1667231184394},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/head.ejs","hash":"7a68b298679055637071ab2229f1147c3d02607a","modified":1667231184369},{"_id":"node_modules/hexo-theme-stellar/scripts/generators/categories.js","hash":"37a443389795bf9047ab530e6111a5dde8567db5","modified":1667231184385},{"_id":"node_modules/hexo-theme-stellar/scripts/generators/404.js","hash":"294c2e12ebc858cb47363626e5c6edcf4a5d67fa","modified":1667231184384},{"_id":"node_modules/hexo-theme-stellar/scripts/generators/tags.js","hash":"9f9421ec4dc85e2bb8c3a376d4eb1c7c59d3b211","modified":1667231184400},{"_id":"node_modules/hexo-theme-stellar/scripts/generators/wiki.js","hash":"7ced88545f9a857098e3ac28de3ff82f141228d1","modified":1667231184403},{"_id":"node_modules/hexo-theme-stellar/scripts/helpers/category_color.js","hash":"35f459e5dcd845eef3d9b7a6205f015b92399d24","modified":1667231184385},{"_id":"node_modules/hexo-theme-stellar/scripts/helpers/parse_config.js","hash":"c9712de293586ca529b9df8789b79e561acf85a9","modified":1667231184397},{"_id":"node_modules/hexo-theme-stellar/scripts/helpers/related_posts.js","hash":"f555e06b792cce805f17ebe51f4984d05ce11508","modified":1667231184398},{"_id":"node_modules/hexo-theme-stellar/scripts/helpers/scrollreveal.js","hash":"aecbaf28dfafe100bca014381e3f6e8f799da4d1","modified":1667231184398},{"_id":"node_modules/hexo-theme-stellar/scripts/helpers/stellar_info.js","hash":"5b7a10c8b09237a467767f5467749c7d9378c2c1","modified":1667231184399},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/menubtn.ejs","hash":"1ebd3fa9b1586078e8726e58b8ed1b096b8f0524","modified":1667231184377},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/about.js","hash":"8b8e85dd00f762124eaaa81e6ac8de6db53a62ec","modified":1667231184384},{"_id":"node_modules/hexo-theme-stellar/layout/categories.ejs","hash":"ce50c1d35dd2f5dfe190b5d70755cdb43e26c522","modified":1667231184366},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/checkbox.js","hash":"85a0f422a338cb5fa5c70ef30c93da95ef5ebbcf","modified":1667231184385},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/border.js","hash":"dd4bf03e6928d6f3cf1d70ec0fecc53f3a1405ce","modified":1667231184385},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/emoji.js","hash":"7bd4b538fe1aa622a9dc03047942cc024f9e0d69","modified":1667231184387},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/copy.js","hash":"4c57d903d724ccea72cf17293de08f297f0d6a86","modified":1667231184386},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/folders.js","hash":"e52148d6aab3cad0a1764af051bc6cb25b640cac","modified":1667231184388},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/folding.js","hash":"c3ea8c7271ade7522ef6c3f9b538a92972f51fde","modified":1667231184388},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/frame.js","hash":"6eba9dab0fde8908234df632b85efa6a312e7bf3","modified":1667231184388},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/friends.js","hash":"3f576599445aa9ac2e247bbea60e72b773de754a","modified":1667231184388},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/ghcard.js","hash":"d176c0c6d7d6dfe4309a03db9ddd2e63b07ef4a7","modified":1667231184391},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/image.js","hash":"22aafb984b796c3e3d120990529ebd5c9859de78","modified":1667231184392},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/index.js","hash":"9511825315e0031dcf546f7e245140f40f6b8b01","modified":1667231184394},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/inline-labels.js","hash":"a9805af165a1ee44fd7f9dbb89c9d0744a4a9543","modified":1667231184394},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/link.js","hash":"a7b52c465c688195c0f223a5d3c369c4d4bd583a","modified":1667231184394},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/mark.js","hash":"bf4c9d7af4ec1e72af0aa6c7214777af4366d6c2","modified":1667231184396},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/navbar.js","hash":"750339386bf9886ec8dcfdab116f9fd3d33d1fac","modified":1667231184396},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/note.js","hash":"e7e19449c887a6736d93be39ed9c46e4cdfd5a71","modified":1667231184397},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/poetry.js","hash":"21c44b888c8c110a3c879d904918f33e613ca33c","modified":1667231184397},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/quot.js","hash":"bc8349dbd2c6027c3abc38082e58a17872557522","modified":1667231184397},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/sites.js","hash":"0a975d0b153f4d758f08515c9c18c326c065180d","modified":1667231184398},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/split.js","hash":"e6d6d1370bfe7d727cfada3ce66af1dddb6f0508","modified":1667231184398},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/swiper.js","hash":"dcecff446269b9553d280778640ff434391bfe9b","modified":1667231184399},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/timeline.js","hash":"8bedcf409f4c99bb06e40cf539b3567344a23c85","modified":1667231184400},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/toc.js","hash":"3da29a1a2cfc2894a16d4081b771071afe1b44d7","modified":1667231184403},{"_id":"node_modules/hexo-theme-stellar/source/css/_custom.styl","hash":"5363d8304f90990022ffc8eb5d55e1702b2e951e","modified":1667231184404},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/cover/index.ejs","hash":"e9fbadca8e27b334f691d5fe79a377041609073a","modified":1667231184370},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/cover/post_cover.ejs","hash":"cbeab8ad4563eb21b621c9914d8865de9bf132e1","modified":1667231184380},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/cover/wiki_cover.ejs","hash":"936457597273e216b93bc60851d75fbbd1b0357f","modified":1667231184383},{"_id":"node_modules/hexo-theme-stellar/source/css/main.styl","hash":"28f7f6f69ed6aa3083784c0f4c1b17955dc5924e","modified":1667231184416},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/footer.ejs","hash":"11158ddbfc8a1aa2e897255b0afda3059ac6ef58","modified":1667231184367},{"_id":"node_modules/hexo-theme-stellar/source/js/main.js","hash":"53c3ebae815f4a828c78de3f7339aa9ea00ca44d","modified":1667231184396},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/scripts/index.ejs","hash":"50ad368582b99b0d2e43dd843f512458016c0117","modified":1667231184370},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/header.ejs","hash":"4c19cbca0d50f0bd0e087539b96512379f240099","modified":1667231184369},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/index.ejs","hash":"e865a65e8094dfa07987d1686a8eefe247e6c2ef","modified":1667231184371},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/logo.ejs","hash":"ef8b0577743d1cae2e673e27970d34d33a46da9d","modified":1667231184376},{"_id":"node_modules/hexo-theme-stellar/scripts/events/lib/config.js","hash":"cdf612dbbdfd93af990a6bc7e11eedf25eea92ab","modified":1667231184386},{"_id":"node_modules/hexo-theme-stellar/scripts/events/lib/doc_tree.js","hash":"b24549addfc6c99212bac1c4f6ca9841c4e3d21d","modified":1667231184386},{"_id":"node_modules/hexo-theme-stellar/scripts/events/lib/utils.js","hash":"2c342ae9ada7275beb6eaf51d010ee1cccf1033d","modified":1667231184403},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/menu.ejs","hash":"796646955e538246f95d19cdafccae17731052ac","modified":1667231184377},{"_id":"node_modules/hexo-theme-stellar/scripts/filters/lib/img_onerror.js","hash":"d44a8e20d4d537c0cf85b980e1fc3bc84865a2d3","modified":1667231184393},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/lib/tabs.js","hash":"9931f1f6a4ecc70fbbbc9f0aa74b07fbeeaf2779","modified":1667231184399},{"_id":"node_modules/hexo-theme-stellar/scripts/tags/lib/users.js","hash":"089515de4dee7f54525480232b9a9665904668c4","modified":1667231184403},{"_id":"node_modules/hexo-theme-stellar/scripts/filters/lib/img_lazyload.js","hash":"b3dedcc1fc4189589e63d4fa6f169a70e9d63cd1","modified":1667231184392},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/base.styl","hash":"8cc54f50e2fba99b39a1d79be4602423384635b4","modified":1667231184407},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/blur.styl","hash":"63af0026e4a36c99c20b34c590ed53483dffa4dc","modified":1667231184408},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/button.styl","hash":"b16288e5d0755e919f3413cc0617ff51d0ea1e09","modified":1667231184408},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/cap.styl","hash":"93b576cd69636f8e75a5ab59d47ad3b937a39d96","modified":1667231184408},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/control.styl","hash":"75081ca9d522a76ec4acffb8111c918b2297650a","modified":1667231184410},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/device.styl","hash":"3019d3ffe695b0bbf444527aac2e7accb089319e","modified":1667231184410},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/highlight.styl","hash":"bcd1af1f3757d4fb42a3518d63955b4088f6d570","modified":1667231184413},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/html.styl","hash":"9ba9b6d85dad3036a7b8172ef8317f51da3ca693","modified":1667231184414},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/image.styl","hash":"cca1103a9185202b13be49e16d77d259e9ffb482","modified":1667231184414},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/loading.styl","hash":"6962fd568ad9779146742b8b8928cec107972e8e","modified":1667231184416},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/input.styl","hash":"2a765355617dd96c5974e7872c34eabc0052ed6f","modified":1667231184415},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/pre.styl","hash":"86b2ef12a8012949171a3a53f9e241281e51af4e","modified":1667231184420},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/svg.styl","hash":"dd2fbe25de3e3cf475279d375e0d5e925f9058ea","modified":1667231184423},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/title.styl","hash":"1580935e7c36ff83569e62be523293fd3cc62484","modified":1667231184423},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/span.styl","hash":"78cf1b0b82fd60234e1f352501c3a27d1fe3be6b","modified":1667231184422},{"_id":"node_modules/hexo-theme-stellar/source/css/_defines/const.styl","hash":"f3670f705b34a54d4664c425023a18383c255d72","modified":1667231184409},{"_id":"node_modules/hexo-theme-stellar/source/css/_common/toast.styl","hash":"61ca6b42ded511bcc99fd684800bf84c5ab9454a","modified":1667231184424},{"_id":"node_modules/hexo-theme-stellar/source/css/_defines/func.styl","hash":"2f4a239ec8c57957d766c0eb06e23de690f9fd78","modified":1667231184413},{"_id":"node_modules/hexo-theme-stellar/source/css/_defines/theme.styl","hash":"9f73704bd129b7865103a9d39b8ae5aa49b06cc8","modified":1667231184423},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/index.styl","hash":"388efb67ba82dc257f142281759519c69aba86ce","modified":1667231184414},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/layout.styl","hash":"c091bb4b287f4fdb206ed80c1bd7260229bfd523","modified":1667231184415},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/list.styl","hash":"1e951806da01bf4c625ab8fea1c840d4e3bfd505","modified":1667231184416},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/main.styl","hash":"403c1dbbbb38281496ca81c5690aa10ca86ad920","modified":1667231184416},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/md.styl","hash":"a7864c67ab780f5f27543943caa174c046ce6932","modified":1667231184416},{"_id":"node_modules/hexo-theme-stellar/source/css/_plugins/fancybox.styl","hash":"21fabc8af9fe193d8376ecc8bd9125207f51e927","modified":1667231184411},{"_id":"node_modules/hexo-theme-stellar/source/css/_plugins/index.styl","hash":"04855aa1fb557c55da1e0db354d5fce9d0d84df9","modified":1667231184415},{"_id":"node_modules/hexo-theme-stellar/source/css/_plugins/lazyload.styl","hash":"44f231219c10397af1aa353c4d7b7e0e34323b40","modified":1667231184415},{"_id":"node_modules/hexo-theme-stellar/source/css/_plugins/scrollreveal.styl","hash":"bfeabad9cdaaa77ea0fa1fc0f20dc91520356a6f","modified":1667231184421},{"_id":"node_modules/hexo-theme-stellar/source/css/_plugins/swiper.styl","hash":"4cda902a8a3855d5aa0e644aa674e053db824023","modified":1667231184423},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/friends.js","hash":"200932adef60298f6a0d03d1d15199a195ffbd77","modified":1667231184389},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/ghinfo.js","hash":"103dc7c2fa35aebde8d560d6473a7b03d10951ec","modified":1667231184391},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/fcircle.js","hash":"8854834b08eaa0751fe362df4b2b67744648b149","modified":1667231184387},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/sites.js","hash":"75e32787f380558119b1665fd9a9f6c6430c0b31","modified":1667231184398},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/linkcard.js","hash":"45fc4f1b856c2125c633bfec6be627ec3957d3c0","modified":1667231184394},{"_id":"node_modules/hexo-theme-stellar/source/js/plugins/timeline.js","hash":"88a0fca3b50560c55e883ce8ecc3f38b930f45b4","modified":1667231184403},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/article/article_footer.ejs","hash":"a6465110dc54eb2a94981042e1f0cc29406ba765","modified":1667231184365},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/article/read_next.ejs","hash":"d4df437e362df8b3a8af9dd4c21ce395e5333f97","modified":1667231184381},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/article/related_posts.ejs","hash":"3dc3edaaa099ffaf8d2f099f76441d6a7a0931de","modified":1667231184381},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/header/index.ejs","hash":"7256167dc6a76fe4b0725dac3c803e1b26b1f696","modified":1667231184370},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/navbar/list_post.ejs","hash":"edf29679483f8d12f9795751a4576b27d92cf008","modified":1667231184376},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/navbar/breadcrumb.ejs","hash":"59e6a27fb0f1bc9a3f41aadcba8d5b0dc4ca635b","modified":1667231184366},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/navbar/list_wiki.ejs","hash":"a6e53d22caa72809e34b664a32293a4ca289825f","modified":1667231184376},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/post_list/paginator.ejs","hash":"4b86b8ea1781a93f1091dfcb438078e19b65ce6c","modified":1667231184380},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/post_list/post_card.ejs","hash":"05d5d62d07026c114101056137bbecbfb77706d5","modified":1667231184380},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/main/post_list/wiki_card.ejs","hash":"8cf9145ec6a189ee0de725fc264378168e1ff09a","modified":1667231184383},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/layout.ejs","hash":"a7c2d6f58ea2db666bf1626b9f253ed990a3fa19","modified":1667231184374},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/script.ejs","hash":"a9dce8066723ada71d91960d5dd07ab194cc3b05","modified":1667231184382},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/widgets/ghissues.ejs","hash":"5db4259893fbc55d699da3d6088e433622eb7a41","modified":1667231184368},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/widgets/ghrepo.ejs","hash":"b4fb5027c587b796b144d8d7996124921ed3f16d","modified":1667231184368},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/widgets/ghuser.ejs","hash":"b3c6ce9aab7012d9905cafdb3e5822232779c685","modified":1667231184368},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/widgets/markdown.ejs","hash":"4d4a269c7005e993aabbc95ccc705e23b31a2ad6","modified":1667231184377},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/widgets/recent.ejs","hash":"e928d25a50feb3565dc9abdb839288e2e06b0c4a","modified":1667231184381},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/widgets/related.ejs","hash":"3322f6faa9ee2d5f560aea93727eda9ddfee3f12","modified":1667231184381},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/widgets/tagcloud.ejs","hash":"bcec8da6e5f6fe7479370c36901cee9c094ccf5e","modified":1667231184382},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/widgets/timeline.ejs","hash":"c8f97af0b64dfed658b18318cd285214717226f0","modified":1667231184383},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/sidebar/widgets/toc.ejs","hash":"4b5143ddb9242094a8687e00093949806f146de0","modified":1667231184383},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/pages/archives.styl","hash":"6a2ed5fd75e41499ca539269361b8bd8a2c541be","modified":1667231184406},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/pages/error.styl","hash":"4c93c760b22d0e21800c45d7dc6f9e50c50da590","modified":1667231184411},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/partial/article-footer.styl","hash":"60bb25b35e1cd61516169d9ba0ab1a0962af0673","modified":1667231184406},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/partial/bread-nav.styl","hash":"478d2f568f42a4fdf3cc7b43157070d1d2897d4b","modified":1667231184408},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/partial/cover.styl","hash":"0c1376d953d9b43b8beb67e8f0ebd884ebf50f9d","modified":1667231184410},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/partial/footer.styl","hash":"e423562d8a628d0c934a4ae1361dc63ff5b4fa57","modified":1667231184412},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/partial/navbar.styl","hash":"4ba2dd179a5419f27ad4c67b1633b5c33e7ea1a0","modified":1667231184417},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/partial/paginator.styl","hash":"5edf5b0a9eb95710918e4d1da20cc6d21bfacabe","modified":1667231184419},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/partial/related.styl","hash":"1fc20729c232fb2f9ea1357decc5d630f889ed0c","modified":1667231184421},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/sidebar/footer.styl","hash":"5a4492a160f8acdf3783f4df169d4b87ac85efca","modified":1667231184412},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/sidebar/ghrepo.styl","hash":"7d3d6634d865ab1edea724f135d0ee9d24c6609d","modified":1667231184413},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/sidebar/ghuser.styl","hash":"ea5553dc409b07613a82c14d14fa3ee8aa7fafee","modified":1667231184413},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/sidebar/sidebar.styl","hash":"30dc153c5fd2d188ac7276d30c41baec9d2d6ba1","modified":1667231184421},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/sidebar/toc_blog.styl","hash":"0a2f1ada9130329fdc793603a9dfbc167303483f","modified":1667231184424},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/sidebar/toc_common.styl","hash":"8463462dbf077372479b5ca63c7a248483a7b9dd","modified":1667231184424},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/sidebar/toc_wiki.styl","hash":"861d75f3df735eb2dacdc376536394b8dffd40a7","modified":1667231184424},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/sidebar/widgets.styl","hash":"d2bc5011999dcbf10064d13f275e2e04bda9cbfe","modified":1667231184425},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/about.styl","hash":"46e5be0c7c3de1d6c3156577c9436d80f195b3b7","modified":1667231184405},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/checkbox.styl","hash":"c96080ea7d6149a2324d413b155ff9e984ffdad4","modified":1667231184408},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/common.styl","hash":"4297bff28620ea7c646e1379497112b92a30f976","modified":1667231184409},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/copy.styl","hash":"55dbbb171f3c4dd1a039c98914a8ed8820b5bf00","modified":1667231184410},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/emoji.styl","hash":"e51673f777d08ec3860f603de49a5d5aa51c06c0","modified":1667231184410},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/folders.styl","hash":"335804379831ad6185ecafd7bea4d639ca803862","modified":1667231184411},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/folding.styl","hash":"dc3239b47511813b1e5163df7833e579fe89e3a5","modified":1667231184411},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/frame.styl","hash":"310b0577c19f2810af58ff0a77c5d8c0361bc552","modified":1667231184412},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/friends.styl","hash":"90f84ec655794813fd39ff75df9ec0babd7ff654","modified":1667231184413},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/ghcard.styl","hash":"98a50d3fab79ce03dd7f161fe3442d803712c284","modified":1667231184413},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/image.styl","hash":"f6edd2c71ac736332166a8240b6952629bf67ce5","modified":1667231184414},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/inline-labels.styl","hash":"2f83b3c0b69e275a95ec526ad0e6b7c6030eb031","modified":1667231184415},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/link.styl","hash":"ae4e4602f9b56022728f35b6b0f01c2c94433c51","modified":1667231184416},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/mark.styl","hash":"9600c2d78b7044da545d1f9912587c2ad899c3fc","modified":1667231184416},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/navbar.styl","hash":"2c91af01cb587b8c751d4af88e62d068988794b9","modified":1667231184417},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/quot.styl","hash":"92a9d9112d6f5dd73d6b081d622110dcb2ffb821","modified":1667231184420},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/note.styl","hash":"8afc900dc688057809e76653eaccb972f3e6dd68","modified":1667231184419},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/poetry.styl","hash":"44313ce3be05a0bec3c7f8a69fea4f7c9cfebfbb","modified":1667231184420},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/sites.styl","hash":"922fff4c07d9c0ac22d422486220b3ffd34bd7bc","modified":1667231184421},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/split.styl","hash":"1c2081c78b3770025303c09fe2da492e31da4b6b","modified":1667231184422},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/tabs.styl","hash":"0b8dc93cd2a77692edd1d4daf7e9cea5bf75920b","modified":1667231184423},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/timeline.styl","hash":"3b0341b22b07262d7994e666dd2edef2c99d5a19","modified":1667231184423},{"_id":"node_modules/hexo-theme-stellar/source/css/_layout/tag-plugins/toc.styl","hash":"3efb739e8a59cb52e26a01190475be98bb0ac022","modified":1667231184424},{"_id":"node_modules/hexo-theme-stellar/source/css/_plugins/comments/beaudar.styl","hash":"e9800f67a650f1c022aee494768e05da76e6a6b7","modified":1667231184408},{"_id":"node_modules/hexo-theme-stellar/source/css/_plugins/comments/twikoo.styl","hash":"8fb3420158c1bda65ca195518b83baace333b348","modified":1667231184424},{"_id":"node_modules/hexo-theme-stellar/source/css/_plugins/comments/utterances.styl","hash":"6dbcf87eab273268bdd24d220d7da2ea89453151","modified":1667231184425},{"_id":"node_modules/hexo-theme-stellar/source/css/_plugins/comments/waline.styl","hash":"30eab08b9ba86ad2146bc913d415d39799d25d5c","modified":1667231184425},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/beaudar/layout.ejs","hash":"1a9b6f3e189d9f282e01fb758e6f39bf34ccc53c","modified":1667231184372},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/beaudar/script.ejs","hash":"94b21ec4854d5321693228fbe6edf6688d3e333b","modified":1667231184381},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/giscus/layout.ejs","hash":"e0a06db66b0e41f9de999444e508e98a4f23fbb7","modified":1667231184373},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/giscus/script.ejs","hash":"5ccda22fd29ff562c0435c849b5708056116fafa","modified":1667231184382},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/twikoo/script.ejs","hash":"3c6315837d18f9de20143afc45166a6a3fbb07b9","modified":1667231184382},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/twikoo/layout.ejs","hash":"e662b87a983ed2347b642bf2ef9f0250f7273b60","modified":1667231184374},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/utterances/layout.ejs","hash":"2310bdef7c57cbaede9f91c810e1db829bef6fb2","modified":1667231184375},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/utterances/script.ejs","hash":"5a01541e2bbad0538849fbbf13c74d2dafc19a67","modified":1667231184382},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/waline/layout.ejs","hash":"fba1af008b1ef7b33ac36506c79eec3253be1227","modified":1667231184376},{"_id":"node_modules/hexo-theme-stellar/layout/_partial/plugins/comments/waline/script.ejs","hash":"e825fe5c81ab74b48a55caca931c477736deef60","modified":1667231184382},{"_id":"public/404.html","hash":"d5b8dbbee364cc54c8d0a4a4b3497b565dc78b0f","modified":1670641591487},{"_id":"public/notes/index.html","hash":"566684713b31949e971fd4a04e158546cf05f10a","modified":1670641591487},{"_id":"public/more/index.html","hash":"cac5c38bbed71bcf3c5dbd2f82e5969736ce7261","modified":1670641591487},{"_id":"public/post/index.html","hash":"49068103c5717421690b960245ed60a40b27c255","modified":1670641591487},{"_id":"public/friends/index.html","hash":"96432c98c5abfa9bcaf6fd7b5505b0e6694ef5a6","modified":1670641591487},{"_id":"public/2022/12/10/ywyjxz/index.html","hash":"03f84e61e360b4e05977798b489a517ccdd653e5","modified":1670641591487},{"_id":"public/2022/12/10/lifenow/index.html","hash":"2bd299daf07ab1881437cbb81aa84422e058f174","modified":1670641591487},{"_id":"public/2022/12/10/bjj/index.html","hash":"4486e024e6b5585c09aace42d1418f2678739730","modified":1670641591487},{"_id":"public/2022/12/10/fm/index.html","hash":"e9974f35600b5294cf9a52ba5dc68b9157ba17a0","modified":1670641591487},{"_id":"public/2022/12/09/2022-12-9-lg1/index.html","hash":"b3724856befb1fbbd86095a7e5c1c772d003072a","modified":1670641591487},{"_id":"public/2022/12/09/2022-12-9-lg2/index.html","hash":"d8c9dd0e3d55e02372e17756deb364b1439064b7","modified":1670641591487},{"_id":"public/2022/11/18/zhailu/index.html","hash":"5e46edb700bae90ae7b3078cd8f8b3e7cbdaefd7","modified":1670641591487},{"_id":"public/2022/11/03/2022-11-3_二叉树学习笔记/index.html","hash":"f0f8d25a55f4d01f05608545128ffac6f79457b4","modified":1670641591487},{"_id":"public/categories/设计开发/网站搭建/index.html","hash":"00f4420798b35f9ac0c3851bb0596bd1bb1a05a8","modified":1670641591487},{"_id":"public/categories/设计开发/Linux/index.html","hash":"94fbd92a720d438103127a9268e457898fb19c71","modified":1670641591487},{"_id":"public/page/3/index.html","hash":"3cd88d80e6e48bcc00aaf1e91efdd115062377ca","modified":1670641591487},{"_id":"public/tags/Linux/index.html","hash":"fd1071ba279b521b054b0f5a9529507dcc455488","modified":1670641591487},{"_id":"public/tags/Python/index.html","hash":"b8fecb0c1acfc01960894e78963a20dc734a2d55","modified":1670641591487},{"_id":"public/tags/灵感/index.html","hash":"1242ddd19541a192a1211a5a7872f49ec4e80192","modified":1670641591487},{"_id":"public/categories/index.html","hash":"9dc5a64fcf9e6436d703cb03d4daeb6915098564","modified":1670641591487},{"_id":"public/wiki/index.html","hash":"f43bbf49e7646ff8dce057a4c64b6bd81528282f","modified":1670641591487},{"_id":"public/tags/index.html","hash":"ac511fa4f4de74d325ecfce8b3091fa03f1d6376","modified":1670641591487},{"_id":"public/about/index.html","hash":"30addf71fffef16400de66eb4b271c9be88155b2","modified":1670641591487},{"_id":"public/index/index.html","hash":"96434bbb906c642553178f1bb84d85ee0fb3fc99","modified":1670641591487},{"_id":"public/wiki/学生成绩管理系统/index.html","hash":"81a1ad8f5d8074ffdd1c5cd59bb73c9c5fa70912","modified":1670641591487},{"_id":"public/2022/12/10/jobs/index.html","hash":"dd7a8422493087d4d6ac727bc51fb13106e05ef2","modified":1670641591487},{"_id":"public/2022/12/10/lmcs/index.html","hash":"1d41824eba23771c2210fa0d11b1ac81b00ca997","modified":1670641591487},{"_id":"public/2022/12/10/ayst_2/index.html","hash":"2cc7743436d32830c48e8cd1142033210e666173","modified":1670641591487},{"_id":"public/2022/12/10/ayst/index.html","hash":"dd1d823047600e4422624f0b728609a9e33a7965","modified":1670641591487},{"_id":"public/2022/12/09/two_tree/index.html","hash":"5b36e05d6a3d3c61ed382ad312ec369c1c899eca","modified":1670641591487},{"_id":"public/2022/11/18/twofind/index.html","hash":"e849bc1a2035370805f74ebfd6269e6c1c7d4419","modified":1670641591487},{"_id":"public/2022/11/05/python_student/index.html","hash":"8a6db98b3e23d4b60ffe42de8b964e675f19434a","modified":1670641591487},{"_id":"public/2022/11/05/scanf/index.html","hash":"58d088afb7069fb6e5477fb41b612a675d405010","modified":1670641591487},{"_id":"public/2022/11/05/2022-11-5_python/index.html","hash":"c9e36affd20c20800ed45bdac0066bd96510ef6f","modified":1670641591487},{"_id":"public/2022/11/01/2022-11-1_链表实现学生成绩管理系统/index.html","hash":"20e1d9f81dffe21307314d0b56c1222f397936eb","modified":1670641591487},{"_id":"public/2022/09/15/2022-09-15_Hexo-Linux搭建博客/index.html","hash":"9bc34c868367d7a53b4d0c7a9d6a25d0d5fa7247","modified":1670641591487},{"_id":"public/2022/07/06/2022-07-06-C语言学习记录_day/index.html","hash":"f583b6da855e5c9d43e6ac81dcc53c86c2ea293a","modified":1670641591487},{"_id":"public/2022/10/28/2022-10-28_C语言笔记简化版/index.html","hash":"e1d6446c2942dfb506a49b249e17882ea50507c0","modified":1670641591487},{"_id":"public/2022/10/25/2022-10-19_学生成绩管理系统/index.html","hash":"e90192a5686ca6323066768f896d1f581e3e3180","modified":1670641591487},{"_id":"public/2022/07/06/2022-07-06_初识Linux /index.html","hash":"8b3a4363e65ae3df8836136c9dec26c2d3a379de","modified":1670641591487},{"_id":"public/2022/07/06/2022-07-06_Linux常用命令/index.html","hash":"64e55017a359eccfbac3b53d205856916ae4c888","modified":1670641591487},{"_id":"public/archives/index.html","hash":"fbbd49be33dc93076ef61736dad5234ff6890ddb","modified":1670641591487},{"_id":"public/archives/page/2/index.html","hash":"aff77afbe5b18da060cc430cf6db1c997549698a","modified":1670641591487},{"_id":"public/archives/2022/index.html","hash":"2f078c978ca7b0204d5e0f3835b506b63133c85d","modified":1670641591487},{"_id":"public/archives/page/3/index.html","hash":"81fab582afe6a01eeed4ffcba73d49157456950e","modified":1670641591487},{"_id":"public/archives/2022/page/2/index.html","hash":"fe435afec0046e9e346757f87035c1c1e1d45c47","modified":1670641591487},{"_id":"public/archives/2022/page/3/index.html","hash":"33e55fd56ba12e75aacf8dc8c0981e28aa789bb4","modified":1670641591487},{"_id":"public/archives/2022/07/index.html","hash":"6b7da154aa65303c8c73d00a05d961a84808837b","modified":1670641591487},{"_id":"public/archives/2022/09/index.html","hash":"a467134e278e95904e936de043ca0e2d95129a73","modified":1670641591487},{"_id":"public/archives/2022/11/index.html","hash":"85ab49e1b8526c13f1b82a8afba27381dd2c5df3","modified":1670641591487},{"_id":"public/archives/2022/10/index.html","hash":"247a9f7a46119696f595bca34dec2238cb575569","modified":1670641591487},{"_id":"public/archives/2022/12/index.html","hash":"478a3bf25abdf473c60d507818386aadfdfce357","modified":1670641591487},{"_id":"public/archives/2022/12/page/2/index.html","hash":"24c78d15618b89fd4212fa9fa91fab606b16769e","modified":1670641591487},{"_id":"public/categories/设计开发/index.html","hash":"f6f8627eb0d4f7dd6cb6fa72e4f90cfdfea425d9","modified":1670641591487},{"_id":"public/categories/设计开发/C语言/index.html","hash":"0e486184d0dbb5772df88cbd77548580b22f0bd7","modified":1670641591487},{"_id":"public/page/2/index.html","hash":"6cd5cce3222479d41590bec2487cd8023ad8ea13","modified":1670641591487},{"_id":"public/index.html","hash":"4b1bb97a0d1253edcc53978df942247f77306207","modified":1670641591487},{"_id":"public/tags/C/index.html","hash":"569f080d8323dced14d8eb520b81f2e9d3398d8e","modified":1670641591487},{"_id":"public/tags/摘录/index.html","hash":"710c8e1e5cb7adbeead17a4739c0b386ac2c709d","modified":1670641591487},{"_id":"public/js/plugins/friends.js","hash":"200932adef60298f6a0d03d1d15199a195ffbd77","modified":1670641591487},{"_id":"public/js/plugins/fcircle.js","hash":"8854834b08eaa0751fe362df4b2b67744648b149","modified":1670641591487},{"_id":"public/js/plugins/linkcard.js","hash":"45fc4f1b856c2125c633bfec6be627ec3957d3c0","modified":1670641591487},{"_id":"public/js/plugins/ghinfo.js","hash":"103dc7c2fa35aebde8d560d6473a7b03d10951ec","modified":1670641591487},{"_id":"public/js/main.js","hash":"53c3ebae815f4a828c78de3f7339aa9ea00ca44d","modified":1670641591487},{"_id":"public/js/plugins/sites.js","hash":"75e32787f380558119b1665fd9a9f6c6430c0b31","modified":1670641591487},{"_id":"public/js/plugins/timeline.js","hash":"88a0fca3b50560c55e883ce8ecc3f38b930f45b4","modified":1670641591487},{"_id":"public/css/main.css","hash":"13bce2e196ccbd8068e1ce7da0839f7ef5e71adc","modified":1670641591487}],"Category":[{"name":"设计开发","_id":"clbhcva8i0004u19k766lby81"},{"name":"C语言","parent":"clbhcva8i0004u19k766lby81","_id":"clbhcva8u000ou19k43cqhggx"},{"name":"Linux","parent":"clbhcva8i0004u19k766lby81","_id":"clbhcva8w000uu19k5s2jf36n"},{"name":"网站搭建","parent":"clbhcva8i0004u19k766lby81","_id":"clbhcva91001du19k24b311ww"}],"Data":[{"_id":"widgets","data":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}],"Page":[{"menu_id":"more","title":"","_content":"\n<img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/hello-alan.png\" width = \"296.23\" height = \"96\" />\n\n\n## 嗨！我是Alan👋\n\n一个 Java、C、Python 的开发者。\n\n------\n\n\n\n <img align=left src=\"https://img.shields.io/badge/iOS-000000?style=for-the-badge&logo=ios&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black\"><img align=left src=\"https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&logo=apple&logoColor=white\">\n\n <img align=left src=\"https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/C-00599C?style=for-the-badge&logo=c&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Markdown-000000?style=for-the-badge&logo=markdown&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=openjdk&logoColor=white\">\n \n <img align=left src=\"https://img.shields.io/badge/CLion-000000?style=for-the-badge&logo=clion&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/VIM-%2311AB00.svg?&style=for-the-badge&logo=vim&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Safari-FF1B2D?style=for-the-badge&logo=Safari&logoColor=white\">\n\n\n\n------\n\n\n\n## 📫-联系我\n如果你需要联系我，给我发送邮件是最高效的方法。我会每4到5个小时查看一次收件箱，所以，除非你的邮件被系统移动到垃圾邮件中（一般我会每周简单检查一下垃圾邮件箱然后直接清空，所以甚至有可能我根本不会看到你的邮件），你将会可以很快收到我的回复。\n<a href=\"mailto:alanos@aliyun.com\">\n<img align=left src=\"https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white\">\n</a>\n\n## ℹ️ 本页面使用以下技术制作\n\n{% ghcard Envoy-VC/awesome-badges theme:dark %}\n{% ghcard Ileriayo/markdown-badges theme:dark %}\n{% ghcard anuraghazra/github-readme-stats theme:dark %}\n\n## 👨🏻‍💻-我的-GitHub\n\n<a target=\"blank\" rel=\"noopener\" href=\"https://github.com/Alanosy\">\n <img align=left src=\"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white\">\n</a>\n\n------\n\n{% ghcard alanosy %}\n\n\n## 🗓-近期日程\n\n开源项目无任何盈利目的，所有项目均会在闲暇之余维护，开源项目如有任何问题建议提交 Issue，紧急问题（包括但不限于安全缺陷等问题）请发送私人邮件\n\n{% timeline %}\n<!-- node 2022 年 10 月 29 日 -->\n链\n<!-- node 2022 年 11 月 1 日 -->\n二叉树\n<!-- node 2022 年 11 月 2 日 -11月7日 -->\n确定发展方向\n<!-- node 2022 年 11 月 8 日-1 月 8 日 -->\n每个人完成一个软件著作权\n<!-- node 2023 年 1 月 9 日-3月9日 -->\n第二个软件著作权\n<!-- node 2023 年 3 月 10 日-9月1日 -->\n两个小型企业项目\n<!-- node 2023 年 9 月 2 日-12月2日 -->\n一个中型企业项目1个实用新型专利\n<!-- node 2023 年 12 月 3 日-2024年6月 -->\n提交1个发明专利1篇论文\n<!-- node 2024 年 6 月-12月-->\n备考研究生考试\n<!-- node 2025 年 1 月-5月  -->\n研究生复试\n{% endtimeline %}\n\n## 🤩-兴趣爱好\n\n| 名称     | 平台        | 推荐指数 | 游戏时间  |\n| -------- | ----------- | -------- | --------- |\n| 国际象棋 | chess.com   | ★★★★★    | 2018—2022 |\n| 围棋     | OGS         | ★★★★     | 2019—2021 |\n| 听小说   | 喜马拉雅    | ★★★★     | 2018—2022 |\n| 听音乐   | apple music | ★★★★     | 2018—2022 |\n| 跑步     | 线下        | ★★★★★    | 2018—2022 |\n| 动漫     | Biilibili   | ★★★★     | 2018—2022 |\n","source":"about/index.md","raw":"---\nmenu_id: more\ntitle: \n---\n\n<img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/hello-alan.png\" width = \"296.23\" height = \"96\" />\n\n\n## 嗨！我是Alan👋\n\n一个 Java、C、Python 的开发者。\n\n------\n\n\n\n <img align=left src=\"https://img.shields.io/badge/iOS-000000?style=for-the-badge&logo=ios&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black\"><img align=left src=\"https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&logo=apple&logoColor=white\">\n\n <img align=left src=\"https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/C-00599C?style=for-the-badge&logo=c&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Markdown-000000?style=for-the-badge&logo=markdown&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=openjdk&logoColor=white\">\n \n <img align=left src=\"https://img.shields.io/badge/CLion-000000?style=for-the-badge&logo=clion&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/VIM-%2311AB00.svg?&style=for-the-badge&logo=vim&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Safari-FF1B2D?style=for-the-badge&logo=Safari&logoColor=white\">\n\n\n\n------\n\n\n\n## 📫-联系我\n如果你需要联系我，给我发送邮件是最高效的方法。我会每4到5个小时查看一次收件箱，所以，除非你的邮件被系统移动到垃圾邮件中（一般我会每周简单检查一下垃圾邮件箱然后直接清空，所以甚至有可能我根本不会看到你的邮件），你将会可以很快收到我的回复。\n<a href=\"mailto:alanos@aliyun.com\">\n<img align=left src=\"https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white\">\n</a>\n\n## ℹ️ 本页面使用以下技术制作\n\n{% ghcard Envoy-VC/awesome-badges theme:dark %}\n{% ghcard Ileriayo/markdown-badges theme:dark %}\n{% ghcard anuraghazra/github-readme-stats theme:dark %}\n\n## 👨🏻‍💻-我的-GitHub\n\n<a target=\"blank\" rel=\"noopener\" href=\"https://github.com/Alanosy\">\n <img align=left src=\"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white\">\n</a>\n\n------\n\n{% ghcard alanosy %}\n\n\n## 🗓-近期日程\n\n开源项目无任何盈利目的，所有项目均会在闲暇之余维护，开源项目如有任何问题建议提交 Issue，紧急问题（包括但不限于安全缺陷等问题）请发送私人邮件\n\n{% timeline %}\n<!-- node 2022 年 10 月 29 日 -->\n链\n<!-- node 2022 年 11 月 1 日 -->\n二叉树\n<!-- node 2022 年 11 月 2 日 -11月7日 -->\n确定发展方向\n<!-- node 2022 年 11 月 8 日-1 月 8 日 -->\n每个人完成一个软件著作权\n<!-- node 2023 年 1 月 9 日-3月9日 -->\n第二个软件著作权\n<!-- node 2023 年 3 月 10 日-9月1日 -->\n两个小型企业项目\n<!-- node 2023 年 9 月 2 日-12月2日 -->\n一个中型企业项目1个实用新型专利\n<!-- node 2023 年 12 月 3 日-2024年6月 -->\n提交1个发明专利1篇论文\n<!-- node 2024 年 6 月-12月-->\n备考研究生考试\n<!-- node 2025 年 1 月-5月  -->\n研究生复试\n{% endtimeline %}\n\n## 🤩-兴趣爱好\n\n| 名称     | 平台        | 推荐指数 | 游戏时间  |\n| -------- | ----------- | -------- | --------- |\n| 国际象棋 | chess.com   | ★★★★★    | 2018—2022 |\n| 围棋     | OGS         | ★★★★     | 2019—2021 |\n| 听小说   | 喜马拉雅    | ★★★★     | 2018—2022 |\n| 听音乐   | apple music | ★★★★     | 2018—2022 |\n| 跑步     | 线下        | ★★★★★    | 2018—2022 |\n| 动漫     | Biilibili   | ★★★★     | 2018—2022 |\n","date":"2022-11-11T00:21:23.159Z","updated":"2022-11-02T22:06:02.441Z","path":"about/index.html","comments":1,"layout":"page","_id":"clbhcva890000u19kgwek2c6k","content":"<img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/hello-alan.png\" width = \"296.23\" height = \"96\" />\n\n\n<h2 id=\"嗨！我是Alan👋\"><a href=\"#嗨！我是Alan👋\" class=\"headerlink\" title=\"嗨！我是Alan👋\"></a>嗨！我是Alan👋</h2><p>一个 Java、C、Python 的开发者。</p>\n<hr>\n<p> <img align=left src=\"https://img.shields.io/badge/iOS-000000?style=for-the-badge&logo=ios&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black\"><img align=left src=\"https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&logo=apple&logoColor=white\"></p>\n<p> <img align=left src=\"https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/C-00599C?style=for-the-badge&logo=c&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Markdown-000000?style=for-the-badge&logo=markdown&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=openjdk&logoColor=white\"></p>\n<p> <img align=left src=\"https://img.shields.io/badge/CLion-000000?style=for-the-badge&logo=clion&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/VIM-%2311AB00.svg?&style=for-the-badge&logo=vim&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Safari-FF1B2D?style=for-the-badge&logo=Safari&logoColor=white\"></p>\n<hr>\n<h2 id=\"📫-联系我\"><a href=\"#📫-联系我\" class=\"headerlink\" title=\"📫-联系我\"></a>📫-联系我</h2><p>如果你需要联系我，给我发送邮件是最高效的方法。我会每4到5个小时查看一次收件箱，所以，除非你的邮件被系统移动到垃圾邮件中（一般我会每周简单检查一下垃圾邮件箱然后直接清空，所以甚至有可能我根本不会看到你的邮件），你将会可以很快收到我的回复。<br><a href=\"mailto:alanos@aliyun.com\"><br><img align=left src=\"https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white\"><br></a></p>\n<h2 id=\"ℹ️-本页面使用以下技术制作\"><a href=\"#ℹ️-本页面使用以下技术制作\" class=\"headerlink\" title=\"ℹ️ 本页面使用以下技术制作\"></a>ℹ️ 本页面使用以下技术制作</h2><div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/Envoy-VC/awesome-badges\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=Envoy-VC&repo=awesome-badges&theme=dark&show_owner=true\"/></a></div>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/Ileriayo/markdown-badges\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=Ileriayo&repo=markdown-badges&theme=dark&show_owner=true\"/></a></div>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/anuraghazra/github-readme-stats\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=anuraghazra&repo=github-readme-stats&theme=dark&show_owner=true\"/></a></div>\n\n<h2 id=\"👨🏻‍💻-我的-GitHub\"><a href=\"#👨🏻‍💻-我的-GitHub\" class=\"headerlink\" title=\"👨🏻‍💻-我的-GitHub\"></a>👨🏻‍💻-我的-GitHub</h2><a target=\"blank\" rel=\"noopener\" href=\"https://github.com/Alanosy\">\n <img align=left src=\"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white\">\n</a>\n\n<hr>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/alanosy\"><img src=\"https://github-readme-stats.xaoxuu.com/api/?username=alanosy&&show_owner=true\"/></a></div>\n\n\n<h2 id=\"🗓-近期日程\"><a href=\"#🗓-近期日程\" class=\"headerlink\" title=\"🗓-近期日程\"></a>🗓-近期日程</h2><p>开源项目无任何盈利目的，所有项目均会在闲暇之余维护，开源项目如有任何问题建议提交 Issue，紧急问题（包括但不限于安全缺陷等问题）请发送私人邮件</p>\n<div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\"><p>2022 年 10 月 29 日</p></div><div class=\"body fs14\"><p>链</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\"><p>2022 年 11 月 1 日</p></div><div class=\"body fs14\"><p>二叉树</p></div></div><div class=\"timenode\" index=\"2\"><div class=\"header\"><p>2022 年 11 月 2 日 -11月7日</p></div><div class=\"body fs14\"><p>确定发展方向</p></div></div><div class=\"timenode\" index=\"3\"><div class=\"header\"><p>2022 年 11 月 8 日-1 月 8 日</p></div><div class=\"body fs14\"><p>每个人完成一个软件著作权</p></div></div><div class=\"timenode\" index=\"4\"><div class=\"header\"><p>2023 年 1 月 9 日-3月9日</p></div><div class=\"body fs14\"><p>第二个软件著作权</p></div></div><div class=\"timenode\" index=\"5\"><div class=\"header\"><p>2023 年 3 月 10 日-9月1日</p></div><div class=\"body fs14\"><p>两个小型企业项目</p></div></div><div class=\"timenode\" index=\"6\"><div class=\"header\"><p>2023 年 9 月 2 日-12月2日</p></div><div class=\"body fs14\"><p>一个中型企业项目1个实用新型专利</p></div></div><div class=\"timenode\" index=\"7\"><div class=\"header\"><p>2023 年 12 月 3 日-2024年6月</p></div><div class=\"body fs14\"><p>提交1个发明专利1篇论文</p></div></div><div class=\"timenode\" index=\"8\"><div class=\"header\"><p>2024 年 6 月-12月</p></div><div class=\"body fs14\"><p>备考研究生考试</p></div></div><div class=\"timenode\" index=\"9\"><div class=\"header\"><p>2025 年 1 月-5月</p></div><div class=\"body fs14\"><p>研究生复试</p></div></div></div>\n\n<h2 id=\"🤩-兴趣爱好\"><a href=\"#🤩-兴趣爱好\" class=\"headerlink\" title=\"🤩-兴趣爱好\"></a>🤩-兴趣爱好</h2><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>平台</th>\n<th>推荐指数</th>\n<th>游戏时间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>国际象棋</td>\n<td>chess.com</td>\n<td>★★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>围棋</td>\n<td>OGS</td>\n<td>★★★★</td>\n<td>2019—2021</td>\n</tr>\n<tr>\n<td>听小说</td>\n<td>喜马拉雅</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>听音乐</td>\n<td>apple music</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>跑步</td>\n<td>线下</td>\n<td>★★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>动漫</td>\n<td>Biilibili</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n</tbody></table>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/hello-alan.png\" width = \"296.23\" height = \"96\" />\n\n\n<h2 id=\"嗨！我是Alan👋\"><a href=\"#嗨！我是Alan👋\" class=\"headerlink\" title=\"嗨！我是Alan👋\"></a>嗨！我是Alan👋</h2><p>一个 Java、C、Python 的开发者。</p>\n<hr>\n<p> <img align=left src=\"https://img.shields.io/badge/iOS-000000?style=for-the-badge&logo=ios&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black\"><img align=left src=\"https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&logo=apple&logoColor=white\"></p>\n<p> <img align=left src=\"https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/C-00599C?style=for-the-badge&logo=c&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Markdown-000000?style=for-the-badge&logo=markdown&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=openjdk&logoColor=white\"></p>\n<p> <img align=left src=\"https://img.shields.io/badge/CLion-000000?style=for-the-badge&logo=clion&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/VIM-%2311AB00.svg?&style=for-the-badge&logo=vim&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Safari-FF1B2D?style=for-the-badge&logo=Safari&logoColor=white\"></p>\n<hr>\n<h2 id=\"📫-联系我\"><a href=\"#📫-联系我\" class=\"headerlink\" title=\"📫-联系我\"></a>📫-联系我</h2><p>如果你需要联系我，给我发送邮件是最高效的方法。我会每4到5个小时查看一次收件箱，所以，除非你的邮件被系统移动到垃圾邮件中（一般我会每周简单检查一下垃圾邮件箱然后直接清空，所以甚至有可能我根本不会看到你的邮件），你将会可以很快收到我的回复。<br><a href=\"mailto:alanos@aliyun.com\"><br><img align=left src=\"https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white\"><br></a></p>\n<h2 id=\"ℹ️-本页面使用以下技术制作\"><a href=\"#ℹ️-本页面使用以下技术制作\" class=\"headerlink\" title=\"ℹ️ 本页面使用以下技术制作\"></a>ℹ️ 本页面使用以下技术制作</h2><div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/Envoy-VC/awesome-badges\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=Envoy-VC&repo=awesome-badges&theme=dark&show_owner=true\"/></a></div>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/Ileriayo/markdown-badges\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=Ileriayo&repo=markdown-badges&theme=dark&show_owner=true\"/></a></div>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/anuraghazra/github-readme-stats\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=anuraghazra&repo=github-readme-stats&theme=dark&show_owner=true\"/></a></div>\n\n<h2 id=\"👨🏻‍💻-我的-GitHub\"><a href=\"#👨🏻‍💻-我的-GitHub\" class=\"headerlink\" title=\"👨🏻‍💻-我的-GitHub\"></a>👨🏻‍💻-我的-GitHub</h2><a target=\"blank\" rel=\"noopener\" href=\"https://github.com/Alanosy\">\n <img align=left src=\"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white\">\n</a>\n\n<hr>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/alanosy\"><img src=\"https://github-readme-stats.xaoxuu.com/api/?username=alanosy&&show_owner=true\"/></a></div>\n\n\n<h2 id=\"🗓-近期日程\"><a href=\"#🗓-近期日程\" class=\"headerlink\" title=\"🗓-近期日程\"></a>🗓-近期日程</h2><p>开源项目无任何盈利目的，所有项目均会在闲暇之余维护，开源项目如有任何问题建议提交 Issue，紧急问题（包括但不限于安全缺陷等问题）请发送私人邮件</p>\n<div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\"><p>2022 年 10 月 29 日</p></div><div class=\"body fs14\"><p>链</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\"><p>2022 年 11 月 1 日</p></div><div class=\"body fs14\"><p>二叉树</p></div></div><div class=\"timenode\" index=\"2\"><div class=\"header\"><p>2022 年 11 月 2 日 -11月7日</p></div><div class=\"body fs14\"><p>确定发展方向</p></div></div><div class=\"timenode\" index=\"3\"><div class=\"header\"><p>2022 年 11 月 8 日-1 月 8 日</p></div><div class=\"body fs14\"><p>每个人完成一个软件著作权</p></div></div><div class=\"timenode\" index=\"4\"><div class=\"header\"><p>2023 年 1 月 9 日-3月9日</p></div><div class=\"body fs14\"><p>第二个软件著作权</p></div></div><div class=\"timenode\" index=\"5\"><div class=\"header\"><p>2023 年 3 月 10 日-9月1日</p></div><div class=\"body fs14\"><p>两个小型企业项目</p></div></div><div class=\"timenode\" index=\"6\"><div class=\"header\"><p>2023 年 9 月 2 日-12月2日</p></div><div class=\"body fs14\"><p>一个中型企业项目1个实用新型专利</p></div></div><div class=\"timenode\" index=\"7\"><div class=\"header\"><p>2023 年 12 月 3 日-2024年6月</p></div><div class=\"body fs14\"><p>提交1个发明专利1篇论文</p></div></div><div class=\"timenode\" index=\"8\"><div class=\"header\"><p>2024 年 6 月-12月</p></div><div class=\"body fs14\"><p>备考研究生考试</p></div></div><div class=\"timenode\" index=\"9\"><div class=\"header\"><p>2025 年 1 月-5月</p></div><div class=\"body fs14\"><p>研究生复试</p></div></div></div>\n\n<h2 id=\"🤩-兴趣爱好\"><a href=\"#🤩-兴趣爱好\" class=\"headerlink\" title=\"🤩-兴趣爱好\"></a>🤩-兴趣爱好</h2><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>平台</th>\n<th>推荐指数</th>\n<th>游戏时间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>国际象棋</td>\n<td>chess.com</td>\n<td>★★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>围棋</td>\n<td>OGS</td>\n<td>★★★★</td>\n<td>2019—2021</td>\n</tr>\n<tr>\n<td>听小说</td>\n<td>喜马拉雅</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>听音乐</td>\n<td>apple music</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>跑步</td>\n<td>线下</td>\n<td>★★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>动漫</td>\n<td>Biilibili</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n</tbody></table>\n"},{"title":"","date":"2022-10-31T16:00:51.000Z","_content":"","source":"notes/index.md","raw":"---\ntitle: \ndate: 2022-11-01 00:00:51\n---\n","updated":"2022-10-31T16:17:44.000Z","path":"notes/index.html","comments":1,"layout":"page","_id":"clbhcva8g0002u19kdbhq87z0","content":"","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":""},{"title":"","_content":"","source":"more/index.md","raw":"---\ntitle: \n---","date":"2022-11-11T00:21:23.161Z","updated":"2022-11-02T04:13:38.151Z","path":"more/index.html","comments":1,"layout":"page","_id":"clbhcva8k0006u19kav86b00a","content":"","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":""},{"title":"","date":"2022-10-31T16:03:12.000Z","_content":"<img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/hello-alan.png\" width = \"296.23\" height = \"96\" />\n\n\n## 嗨！我是Alan👋\n\n一个 Java、C、Python 的开发者。\n\n------\n\n\n\n <img align=left src=\"https://img.shields.io/badge/iOS-000000?style=for-the-badge&logo=ios&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black\"><img align=left src=\"https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&logo=apple&logoColor=white\">\n\n <img align=left src=\"https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/C-00599C?style=for-the-badge&logo=c&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Markdown-000000?style=for-the-badge&logo=markdown&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=openjdk&logoColor=white\">\n \n <img align=left src=\"https://img.shields.io/badge/CLion-000000?style=for-the-badge&logo=clion&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/VIM-%2311AB00.svg?&style=for-the-badge&logo=vim&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Safari-FF1B2D?style=for-the-badge&logo=Safari&logoColor=white\">\n\n\n\n------\n\n\n\n## 📫-联系我\n如果你需要联系我，给我发送邮件是最高效的方法。我会每4到5个小时查看一次收件箱，所以，除非你的邮件被系统移动到垃圾邮件中（一般我会每周简单检查一下垃圾邮件箱然后直接清空，所以甚至有可能我根本不会看到你的邮件），你将会可以很快收到我的回复。\n<a href=\"mailto:alanos@aliyun.com\">\n<img align=left src=\"https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white\">\n</a>\n\n## ℹ️ 本页面使用以下技术制作\n\n{% ghcard Envoy-VC/awesome-badges theme:dark %}\n{% ghcard Ileriayo/markdown-badges theme:dark %}\n{% ghcard anuraghazra/github-readme-stats theme:dark %}\n\n## 👨🏻‍💻-我的-GitHub\n\n<a target=\"blank\" rel=\"noopener\" href=\"https://github.com/Alanosy\">\n <img align=left src=\"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white\">\n</a>\n\n------\n\n{% ghcard alanosy %}\n\n\n## 🗓-近期日程\n\n开源项目无任何盈利目的，所有项目均会在闲暇之余维护，开源项目如有任何问题建议提交 Issue，紧急问题（包括但不限于安全缺陷等问题）请发送私人邮件\n\n{% timeline %}\n<!-- node 2022 年 10 月 29 日 -->\n链表\n<!-- node 2022 年 11 月 1 日 -->\n二叉树\n<!-- node 2022 年 11 月 2 日 -11月7日 -->\n确定发展方向\n<!-- node 2022 年 11 月 8 日-1 月 8 日 -->\n每个人完成一个软件著作权\n<!-- node 2023 年 1 月 9 日-3月9日 -->\n第二个软件著作权\n<!-- node 2023 年 3 月 10 日-9月1日 -->\n两个小型企业项目\n<!-- node 2023 年 9 月 2 日-12月2日 -->\n一个中型企业项目1个实用新型专利\n<!-- node 2023 年 12 月 3 日-2024年6月 -->\n提交1个发明专利1篇论文\n<!-- node 2024 年 6 月-12月-->\n备考研究生考试\n<!-- node 2025 年 1 月-5月  -->\n研究生复试\n{% endtimeline %}\n\n## 🤩-兴趣爱好\n\n| 名称     | 平台        | 推荐指数 | 游戏时间  |\n| -------- | ----------- | -------- | --------- |\n| 国际象棋 | chess.com   | ★★★★★    | 2018—2022 |\n| 围棋     | OGS         | ★★★★     | 2019—2021 |\n| 听小说   | 喜马拉雅    | ★★★★     | 2018—2022 |\n| 听音乐   | apple music | ★★★★     | 2018—2022 |\n| 跑步     | 线下        | ★★★★★    | 2018—2022 |\n| 动漫     | Biilibili   | ★★★★     | 2018—2022 |\n","source":"index/index.md","raw":"---\ntitle: \ndate: 2022-11-01 00:03:12\n---\n<img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/hello-alan.png\" width = \"296.23\" height = \"96\" />\n\n\n## 嗨！我是Alan👋\n\n一个 Java、C、Python 的开发者。\n\n------\n\n\n\n <img align=left src=\"https://img.shields.io/badge/iOS-000000?style=for-the-badge&logo=ios&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black\"><img align=left src=\"https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&logo=apple&logoColor=white\">\n\n <img align=left src=\"https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/C-00599C?style=for-the-badge&logo=c&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Markdown-000000?style=for-the-badge&logo=markdown&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=openjdk&logoColor=white\">\n \n <img align=left src=\"https://img.shields.io/badge/CLion-000000?style=for-the-badge&logo=clion&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/VIM-%2311AB00.svg?&style=for-the-badge&logo=vim&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Safari-FF1B2D?style=for-the-badge&logo=Safari&logoColor=white\">\n\n\n\n------\n\n\n\n## 📫-联系我\n如果你需要联系我，给我发送邮件是最高效的方法。我会每4到5个小时查看一次收件箱，所以，除非你的邮件被系统移动到垃圾邮件中（一般我会每周简单检查一下垃圾邮件箱然后直接清空，所以甚至有可能我根本不会看到你的邮件），你将会可以很快收到我的回复。\n<a href=\"mailto:alanos@aliyun.com\">\n<img align=left src=\"https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white\">\n</a>\n\n## ℹ️ 本页面使用以下技术制作\n\n{% ghcard Envoy-VC/awesome-badges theme:dark %}\n{% ghcard Ileriayo/markdown-badges theme:dark %}\n{% ghcard anuraghazra/github-readme-stats theme:dark %}\n\n## 👨🏻‍💻-我的-GitHub\n\n<a target=\"blank\" rel=\"noopener\" href=\"https://github.com/Alanosy\">\n <img align=left src=\"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white\">\n</a>\n\n------\n\n{% ghcard alanosy %}\n\n\n## 🗓-近期日程\n\n开源项目无任何盈利目的，所有项目均会在闲暇之余维护，开源项目如有任何问题建议提交 Issue，紧急问题（包括但不限于安全缺陷等问题）请发送私人邮件\n\n{% timeline %}\n<!-- node 2022 年 10 月 29 日 -->\n链表\n<!-- node 2022 年 11 月 1 日 -->\n二叉树\n<!-- node 2022 年 11 月 2 日 -11月7日 -->\n确定发展方向\n<!-- node 2022 年 11 月 8 日-1 月 8 日 -->\n每个人完成一个软件著作权\n<!-- node 2023 年 1 月 9 日-3月9日 -->\n第二个软件著作权\n<!-- node 2023 年 3 月 10 日-9月1日 -->\n两个小型企业项目\n<!-- node 2023 年 9 月 2 日-12月2日 -->\n一个中型企业项目1个实用新型专利\n<!-- node 2023 年 12 月 3 日-2024年6月 -->\n提交1个发明专利1篇论文\n<!-- node 2024 年 6 月-12月-->\n备考研究生考试\n<!-- node 2025 年 1 月-5月  -->\n研究生复试\n{% endtimeline %}\n\n## 🤩-兴趣爱好\n\n| 名称     | 平台        | 推荐指数 | 游戏时间  |\n| -------- | ----------- | -------- | --------- |\n| 国际象棋 | chess.com   | ★★★★★    | 2018—2022 |\n| 围棋     | OGS         | ★★★★     | 2019—2021 |\n| 听小说   | 喜马拉雅    | ★★★★     | 2018—2022 |\n| 听音乐   | apple music | ★★★★     | 2018—2022 |\n| 跑步     | 线下        | ★★★★★    | 2018—2022 |\n| 动漫     | Biilibili   | ★★★★     | 2018—2022 |\n","updated":"2022-11-02T22:05:50.841Z","path":"index/index.html","comments":1,"layout":"page","_id":"clbhcva8m0008u19khw3q7tq7","content":"<img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/hello-alan.png\" width = \"296.23\" height = \"96\" />\n\n\n<h2 id=\"嗨！我是Alan👋\"><a href=\"#嗨！我是Alan👋\" class=\"headerlink\" title=\"嗨！我是Alan👋\"></a>嗨！我是Alan👋</h2><p>一个 Java、C、Python 的开发者。</p>\n<hr>\n<p> <img align=left src=\"https://img.shields.io/badge/iOS-000000?style=for-the-badge&logo=ios&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black\"><img align=left src=\"https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&logo=apple&logoColor=white\"></p>\n<p> <img align=left src=\"https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/C-00599C?style=for-the-badge&logo=c&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Markdown-000000?style=for-the-badge&logo=markdown&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=openjdk&logoColor=white\"></p>\n<p> <img align=left src=\"https://img.shields.io/badge/CLion-000000?style=for-the-badge&logo=clion&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/VIM-%2311AB00.svg?&style=for-the-badge&logo=vim&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Safari-FF1B2D?style=for-the-badge&logo=Safari&logoColor=white\"></p>\n<hr>\n<h2 id=\"📫-联系我\"><a href=\"#📫-联系我\" class=\"headerlink\" title=\"📫-联系我\"></a>📫-联系我</h2><p>如果你需要联系我，给我发送邮件是最高效的方法。我会每4到5个小时查看一次收件箱，所以，除非你的邮件被系统移动到垃圾邮件中（一般我会每周简单检查一下垃圾邮件箱然后直接清空，所以甚至有可能我根本不会看到你的邮件），你将会可以很快收到我的回复。<br><a href=\"mailto:alanos@aliyun.com\"><br><img align=left src=\"https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white\"><br></a></p>\n<h2 id=\"ℹ️-本页面使用以下技术制作\"><a href=\"#ℹ️-本页面使用以下技术制作\" class=\"headerlink\" title=\"ℹ️ 本页面使用以下技术制作\"></a>ℹ️ 本页面使用以下技术制作</h2><div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/Envoy-VC/awesome-badges\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=Envoy-VC&repo=awesome-badges&theme=dark&show_owner=true\"/></a></div>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/Ileriayo/markdown-badges\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=Ileriayo&repo=markdown-badges&theme=dark&show_owner=true\"/></a></div>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/anuraghazra/github-readme-stats\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=anuraghazra&repo=github-readme-stats&theme=dark&show_owner=true\"/></a></div>\n\n<h2 id=\"👨🏻‍💻-我的-GitHub\"><a href=\"#👨🏻‍💻-我的-GitHub\" class=\"headerlink\" title=\"👨🏻‍💻-我的-GitHub\"></a>👨🏻‍💻-我的-GitHub</h2><a target=\"blank\" rel=\"noopener\" href=\"https://github.com/Alanosy\">\n <img align=left src=\"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white\">\n</a>\n\n<hr>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/alanosy\"><img src=\"https://github-readme-stats.xaoxuu.com/api/?username=alanosy&&show_owner=true\"/></a></div>\n\n\n<h2 id=\"🗓-近期日程\"><a href=\"#🗓-近期日程\" class=\"headerlink\" title=\"🗓-近期日程\"></a>🗓-近期日程</h2><p>开源项目无任何盈利目的，所有项目均会在闲暇之余维护，开源项目如有任何问题建议提交 Issue，紧急问题（包括但不限于安全缺陷等问题）请发送私人邮件</p>\n<div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\"><p>2022 年 10 月 29 日</p></div><div class=\"body fs14\"><p>链表</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\"><p>2022 年 11 月 1 日</p></div><div class=\"body fs14\"><p>二叉树</p></div></div><div class=\"timenode\" index=\"2\"><div class=\"header\"><p>2022 年 11 月 2 日 -11月7日</p></div><div class=\"body fs14\"><p>确定发展方向</p></div></div><div class=\"timenode\" index=\"3\"><div class=\"header\"><p>2022 年 11 月 8 日-1 月 8 日</p></div><div class=\"body fs14\"><p>每个人完成一个软件著作权</p></div></div><div class=\"timenode\" index=\"4\"><div class=\"header\"><p>2023 年 1 月 9 日-3月9日</p></div><div class=\"body fs14\"><p>第二个软件著作权</p></div></div><div class=\"timenode\" index=\"5\"><div class=\"header\"><p>2023 年 3 月 10 日-9月1日</p></div><div class=\"body fs14\"><p>两个小型企业项目</p></div></div><div class=\"timenode\" index=\"6\"><div class=\"header\"><p>2023 年 9 月 2 日-12月2日</p></div><div class=\"body fs14\"><p>一个中型企业项目1个实用新型专利</p></div></div><div class=\"timenode\" index=\"7\"><div class=\"header\"><p>2023 年 12 月 3 日-2024年6月</p></div><div class=\"body fs14\"><p>提交1个发明专利1篇论文</p></div></div><div class=\"timenode\" index=\"8\"><div class=\"header\"><p>2024 年 6 月-12月</p></div><div class=\"body fs14\"><p>备考研究生考试</p></div></div><div class=\"timenode\" index=\"9\"><div class=\"header\"><p>2025 年 1 月-5月</p></div><div class=\"body fs14\"><p>研究生复试</p></div></div></div>\n\n<h2 id=\"🤩-兴趣爱好\"><a href=\"#🤩-兴趣爱好\" class=\"headerlink\" title=\"🤩-兴趣爱好\"></a>🤩-兴趣爱好</h2><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>平台</th>\n<th>推荐指数</th>\n<th>游戏时间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>国际象棋</td>\n<td>chess.com</td>\n<td>★★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>围棋</td>\n<td>OGS</td>\n<td>★★★★</td>\n<td>2019—2021</td>\n</tr>\n<tr>\n<td>听小说</td>\n<td>喜马拉雅</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>听音乐</td>\n<td>apple music</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>跑步</td>\n<td>线下</td>\n<td>★★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>动漫</td>\n<td>Biilibili</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n</tbody></table>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/hello-alan.png\" width = \"296.23\" height = \"96\" />\n\n\n<h2 id=\"嗨！我是Alan👋\"><a href=\"#嗨！我是Alan👋\" class=\"headerlink\" title=\"嗨！我是Alan👋\"></a>嗨！我是Alan👋</h2><p>一个 Java、C、Python 的开发者。</p>\n<hr>\n<p> <img align=left src=\"https://img.shields.io/badge/iOS-000000?style=for-the-badge&logo=ios&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black\"><img align=left src=\"https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&logo=apple&logoColor=white\"></p>\n<p> <img align=left src=\"https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/C-00599C?style=for-the-badge&logo=c&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Markdown-000000?style=for-the-badge&logo=markdown&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=openjdk&logoColor=white\"></p>\n<p> <img align=left src=\"https://img.shields.io/badge/CLion-000000?style=for-the-badge&logo=clion&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/VIM-%2311AB00.svg?&style=for-the-badge&logo=vim&logoColor=white\"><img align=left src=\"https://img.shields.io/badge/Safari-FF1B2D?style=for-the-badge&logo=Safari&logoColor=white\"></p>\n<hr>\n<h2 id=\"📫-联系我\"><a href=\"#📫-联系我\" class=\"headerlink\" title=\"📫-联系我\"></a>📫-联系我</h2><p>如果你需要联系我，给我发送邮件是最高效的方法。我会每4到5个小时查看一次收件箱，所以，除非你的邮件被系统移动到垃圾邮件中（一般我会每周简单检查一下垃圾邮件箱然后直接清空，所以甚至有可能我根本不会看到你的邮件），你将会可以很快收到我的回复。<br><a href=\"mailto:alanos@aliyun.com\"><br><img align=left src=\"https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white\"><br></a></p>\n<h2 id=\"ℹ️-本页面使用以下技术制作\"><a href=\"#ℹ️-本页面使用以下技术制作\" class=\"headerlink\" title=\"ℹ️ 本页面使用以下技术制作\"></a>ℹ️ 本页面使用以下技术制作</h2><div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/Envoy-VC/awesome-badges\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=Envoy-VC&repo=awesome-badges&theme=dark&show_owner=true\"/></a></div>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/Ileriayo/markdown-badges\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=Ileriayo&repo=markdown-badges&theme=dark&show_owner=true\"/></a></div>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/anuraghazra/github-readme-stats\"><img src=\"https://github-readme-stats.xaoxuu.com/api/pin/?username=anuraghazra&repo=github-readme-stats&theme=dark&show_owner=true\"/></a></div>\n\n<h2 id=\"👨🏻‍💻-我的-GitHub\"><a href=\"#👨🏻‍💻-我的-GitHub\" class=\"headerlink\" title=\"👨🏻‍💻-我的-GitHub\"></a>👨🏻‍💻-我的-GitHub</h2><a target=\"blank\" rel=\"noopener\" href=\"https://github.com/Alanosy\">\n <img align=left src=\"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white\">\n</a>\n\n<hr>\n<div class=\"tag-plugin ghcard\"><a class=\"ghcard\" rel=\"external nofollow noopener noreferrer\" href=\"https://github.com/alanosy\"><img src=\"https://github-readme-stats.xaoxuu.com/api/?username=alanosy&&show_owner=true\"/></a></div>\n\n\n<h2 id=\"🗓-近期日程\"><a href=\"#🗓-近期日程\" class=\"headerlink\" title=\"🗓-近期日程\"></a>🗓-近期日程</h2><p>开源项目无任何盈利目的，所有项目均会在闲暇之余维护，开源项目如有任何问题建议提交 Issue，紧急问题（包括但不限于安全缺陷等问题）请发送私人邮件</p>\n<div class=\"tag-plugin timeline\"><div class=\"timenode\" index=\"0\"><div class=\"header\"><p>2022 年 10 月 29 日</p></div><div class=\"body fs14\"><p>链表</p></div></div><div class=\"timenode\" index=\"1\"><div class=\"header\"><p>2022 年 11 月 1 日</p></div><div class=\"body fs14\"><p>二叉树</p></div></div><div class=\"timenode\" index=\"2\"><div class=\"header\"><p>2022 年 11 月 2 日 -11月7日</p></div><div class=\"body fs14\"><p>确定发展方向</p></div></div><div class=\"timenode\" index=\"3\"><div class=\"header\"><p>2022 年 11 月 8 日-1 月 8 日</p></div><div class=\"body fs14\"><p>每个人完成一个软件著作权</p></div></div><div class=\"timenode\" index=\"4\"><div class=\"header\"><p>2023 年 1 月 9 日-3月9日</p></div><div class=\"body fs14\"><p>第二个软件著作权</p></div></div><div class=\"timenode\" index=\"5\"><div class=\"header\"><p>2023 年 3 月 10 日-9月1日</p></div><div class=\"body fs14\"><p>两个小型企业项目</p></div></div><div class=\"timenode\" index=\"6\"><div class=\"header\"><p>2023 年 9 月 2 日-12月2日</p></div><div class=\"body fs14\"><p>一个中型企业项目1个实用新型专利</p></div></div><div class=\"timenode\" index=\"7\"><div class=\"header\"><p>2023 年 12 月 3 日-2024年6月</p></div><div class=\"body fs14\"><p>提交1个发明专利1篇论文</p></div></div><div class=\"timenode\" index=\"8\"><div class=\"header\"><p>2024 年 6 月-12月</p></div><div class=\"body fs14\"><p>备考研究生考试</p></div></div><div class=\"timenode\" index=\"9\"><div class=\"header\"><p>2025 年 1 月-5月</p></div><div class=\"body fs14\"><p>研究生复试</p></div></div></div>\n\n<h2 id=\"🤩-兴趣爱好\"><a href=\"#🤩-兴趣爱好\" class=\"headerlink\" title=\"🤩-兴趣爱好\"></a>🤩-兴趣爱好</h2><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>平台</th>\n<th>推荐指数</th>\n<th>游戏时间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>国际象棋</td>\n<td>chess.com</td>\n<td>★★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>围棋</td>\n<td>OGS</td>\n<td>★★★★</td>\n<td>2019—2021</td>\n</tr>\n<tr>\n<td>听小说</td>\n<td>喜马拉雅</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>听音乐</td>\n<td>apple music</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>跑步</td>\n<td>线下</td>\n<td>★★★★★</td>\n<td>2018—2022</td>\n</tr>\n<tr>\n<td>动漫</td>\n<td>Biilibili</td>\n<td>★★★★</td>\n<td>2018—2022</td>\n</tr>\n</tbody></table>\n"},{"title":"","date":"2022-10-31T16:01:16.000Z","_content":"","source":"post/index.md","raw":"---\ntitle: \ndate: 2022-11-01 00:01:16\n---\n","updated":"2022-10-31T16:17:48.319Z","path":"post/index.html","comments":1,"layout":"page","_id":"clbhcva8o000au19k11rq5gfw","content":"","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":""},{"menu_id":"more","title":"友链","_content":"\n{% friends 开源大佬 %}\n{% friends 开源大佬 %}\n{% friends 开源大佬 %}","source":"friends/index.md","raw":"---\nmenu_id: more\ntitle: 友链\n---\n\n{% friends 开源大佬 %}\n{% friends 开源大佬 %}\n{% friends 开源大佬 %}","date":"2022-11-11T00:21:23.169Z","updated":"2022-11-02T04:10:52.627Z","path":"friends/index.html","comments":1,"layout":"page","_id":"clbhcva8q000fu19k54d9fnmb","content":"<div class=\"tag-plugin users-wrap\"><div class=\"group-body\"></div></div>\n<div class=\"tag-plugin users-wrap\"><div class=\"group-body\"></div></div>\n<div class=\"tag-plugin users-wrap\"><div class=\"group-body\"></div></div>","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<div class=\"tag-plugin users-wrap\"><div class=\"group-body\"></div></div>\n<div class=\"tag-plugin users-wrap\"><div class=\"group-body\"></div></div>\n<div class=\"tag-plugin users-wrap\"><div class=\"group-body\"></div></div>"},{"layout":"wiki","wiki":"学生成绩管理系统","title":"数组与链表学生成绩管理系统","_content":"## 引言\n因为学生管理系统类似数据库，需要实现增删改查，来管理其数据，所以该管理系统也应该实现这四个功能，这里使用数组实现，且具体实现如下。  \n## 源代码\n具体源代码存放在gitee仓库地址如下  \n\n{% copy https://gitee.com/thebyte/work.git %}\n\n## 学生成绩管理系统之目录  \n```\n//菜单\nvoid menu()\n{\n    printf(\"===============\\n\");\n    printf(\"1、学生成绩录入\\n\");\n    printf(\"2、学生成绩删除\\n\");\n    printf(\"3、学生成绩修改\\n\");\n    printf(\"4、学生成绩查询\\n\");\n    printf(\"5、学生成绩打印\\n\");\n    printf(\"6、排       序\\n\");\n    printf(\"0、退       出\\n\");\n    printf(\"===============\\n\");\n}\n```\n这里使用printf()函数直接输出  \n\n## 学生成绩管理系统之录入\n```\n//录入成绩\nvoid add()\n{\n\n    for (int i = 0; i < max - actual;i++)\n    {\n        int temp,k=0;//temp用来存放学号\n        //当数组有成绩时\n        if (actual>0) {\n            printf(\"请输入第%d位学生的学号为：\", actual+1);\n            scanf(\"%d\", &temp);\n            //判断是否有重复学号\n            while (temp!=student[k][0]&&k<actual)\n            {\n                k++;\n            }\n            if(temp==student[k][0])\n            {\n                //如果在数组中找到相同学号，则跳出本次循环重新输入\n                printf(\"学号重复请重新输入!\\n\");\n                continue;\n            }\n            else\n            {\n                student[actual][0]=temp;\n                printf(\"请输学号为%d的同学成绩：\", student[actual][0]);\n                scanf(\"%d\", &student[actual][1]);\n                actual++;\n\n            }\n            //判断是否继续\n            getchar();\n            printf(\"还有继续么(y/n):\");\n            char c = getchar();\n            if (c == 'y' || c == 'Y')\n            {\n                ;\n            }\n            else if (c == 'n' || c == 'N')\n            {\n                break;\n            }\n            else\n            {\n                printf(\"输入错误，即将退出录入系统!\\n\");\n                break;\n            }\n            }\n            //当数组没有成绩时\n            else if (actual==0) {\n            printf(\"请输入第%d位学生的学号为：\", i + 1);\n            scanf(\"%d\", &temp);\n            //查找并判断是否有重复的学号\n            while (temp!=student[k][0]&&k<actual)\n            {\n                k++;\n            }\n            if(temp==student[k][0])\n            {\n                //如果在数组中找到相同学号，则跳出本次循环重新输入\n                printf(\"学号重复请重新输入!\\n\");\n                continue;\n            }\n            else\n            {\n                student[i][0]=temp;\n                printf(\"请输学号为%d的同学成绩：\", student[i][0]);\n                scanf(\"%d\", &student[i][1]);\n                actual++;\n\n            }\n            getchar();\n            printf(\"还有继续么(y/n):\");\n            char c = getchar();\n            if (c == 'y' || c == 'Y') { ;\n            } else if (c == 'n' || c == 'N') {\n                break;\n            } else {\n                printf(\"输入错误，即将退出录入系统!\\n\");\n                break;\n            }\n        }\n\n\n    }\n}\n```\n这里需要定义一个二维数组，将学号放第一列，成绩放低0列，还需用到循环与条件判断来判断是否还要继续输入,并且定义一个存放实际人数变量actual，每次录入加1人  \n\n## 学习管理系统之修改\n```\n//修改成绩\nvoid alter() {\n    while (1) {\n        int number, i = 0;\n        //输入要修改成绩的学号\n        printf(\"请输入要修改的学号：\");\n        scanf(\"%d\", &number);\n        //开始查找与学号配对的成绩位置\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有该学号的成绩\n        if (number == student[i][0])\n        {\n            //有该学号则输入修改后的成绩\n            printf(\"请输入要修改的成绩：\");\n            scanf(\"%d\", &student[i][1]);\n        }\n        else\n        {\n            //没有则输出查无此人\n            printf(\"查无此人\\n\");\n        }\n        //判断是否继续修改\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出修改系统!\\n\");\n        }\n\n    }\n}\n\n```\n这里使用循环一个一个学号对比，找到后然后将修改成绩覆盖到要修改的成绩位置，没找到则输出查无此人  \n\n## 学生成绩管理系统之删除\n```\n//删除成绩\nvoid delete()\n{\n    while (1) {\n        int number, i = 0;\n        //输入要删除成绩的学号\n        printf(\"请输入要删除成绩的学号：\");\n        scanf(\"%d\", &number);\n        //查找学号\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有此学号\n        if (number == student[i][0])\n        {\n            //如果有，则后面的成绩覆盖要删除的成绩，后面依次往前挪\n            for(;i<actual;i++)\n            {\n                student[i][0]=student[i+1][0];\n                student[i][1]=student[i+1][1];\n\n            }\n            printf(\"删除成功!\\n\");\n        }\n        else\n        {\n            //如果没有，则输出查无此人\n            printf(\"查无此人!\\n\");\n        }\n        //删除一个成绩则实际人数减一\n        actual--;\n        //判断是否继续删除\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n\n    }\n}\n```\n删除类似修改，只是将成绩覆盖改成，下面的成绩全部往上移1格，这里每删除一个人则实际人数actual减1人  \n\n## 学生成绩管理系统之查找\n```\nvoid find()\n{\n    while (1) {\n\n        int number, i = 0;\n        //输入要查找成绩的学号\n        printf(\"请输入要查找的学号：\");\n        scanf(\"%d\", &number);\n        //查找学号对应的成绩位置\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有与之对应的学号\n        if (number == student[i][0])\n        {\n            //有则输出成绩\n            printf(\"学号为%d的成绩为：%d\\n\",number,student[i][1]);\n        }\n        else\n        {\n            //没有则输出查无此人\n            printf(\"查无此人\\n\");\n        }\n        //判断是否继续\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出查找系统\\n\");\n\n        }\n\n    }\n\n}\n```\n查找也是利用学号，一一对比找学号，然后打印该学号位置的成绩  \n\n## 学生成绩管理系统之打印\n```\nvoid print()\n{\n    //用for循环依次打印出实际人数的学号成绩对应表\n    int i;\n    printf(\"成绩表如下（学号-成绩）：\\n\");\n    for(i=0;i<actual;i++)\n    {\n        printf(\"%4d%4d\\n\",student[i][0],student[i][1]);\n    }\n    float average=0.0;\n    float sum=0.0;\n    for(int j=0;j<actual;j++)\n    {\n        sum=sum+student[j][1];\n    }\n    average=sum/actual;\n    printf(\"全班的平均成绩为%2f\\n\",average);\n}\n\n```\n这里使用for循环一一换行打印  \n\n## 学生成绩管理系统之排序\n### 冒泡排序\n```\nvoid maopao()\n{\n    int temp=0,num=0;                               //初始化存放成绩和学号的临时变量\n    for(int i=0;i<actual-1;i++)                     //遍历实际人数-1次\n    {\n        for(int j=0;j<actual-i-1;j++)               //遍历实际人数减-1-1次；2人一组对比所以比要再减1次\n        {\n            if(student[j][1]>student[j+1][1])       //判断前后两数的大小，如果前面的成绩比后面成绩大\n            {\n                //交换成绩\n                temp=student[j][1];\n                student[j][1]= student[j+1][1];\n                student[j+1][1]=temp;\n                //交换学号\n                num=student[j][0];\n                student[j][0]=student[j+1][0];\n                student[j+1][0]=num;\n            }\n        }\n    }\n    print();                           //打印成绩\n}\n```\n两两比对，交换位置，然后循环重新再比对，注意点是，外循环与内循环都比实际人数少1位  \n\n### 选择排序\n```\n//选择排序\nvoid choice()\n{\n    int a=0,b=0,min;\n    for(int i=0;i<actual-1;i++)\n    {\n        min=i;                          //假设最小值位置\n        for(int j=i+1;j<actual;j++)     //开始遍历找所有的值对比\n        {\n            if(student[j][1]<student[min][1])       //如果后面的数小于最小值，则记录最小值的位置\n            {\n                min=j;\n            }\n        }\n        if(min!=i)                      //如果最小值不等于最开始的位置，则\n        {\n            //交换学号\n            b=student[min][0];\n            student[min][0]=student[i][0];\n            student[i][0]=b;\n            //交换成绩\n            a=student[min][1];\n            student[min][1]=student[i][1];\n            student[i][1]=a;\n\n        }\n    }\n    print();                              //打印成绩\n}\n```\n选择排序是将最小的元素挑出来与没排序的第一位交换位置，它会不断的选择剩余元素中的最小者      \n\n### 插入排序\n```\n//插入排序\nvoid insert()\n{\n\n    int i,j;\n    int temp,id;\n    for(i=1;i<actual;i++)\n    {\n        if(student[i][1]<student[i-1][1])           //如果后面的数小于前面的数\n        {\n            temp=student[i][1];                     //保存后面的数到temp\n            id=student[i][0];                       //对应的学号保存到ou\n            for(j=i-1;student[j][1]>temp;j--)       //开始将前面到数移位，当前面的数大于temp就开始循环，直到有比temp大的数和最前面则跳出循环\n            {\n                student[j+1][1]=student[j][1];      //将成绩向后移\n                student[j+1][0]=student[j][0];      //学号向后移\n                if(j<0)                             //当最小到数移动到第一位后\n                {\n                    break;                          //退出循环\n                }\n            }\n            student[j+1][1]=temp;                     //将temp的值插入到比temp大的数的前面\n            student[j+1][0]=id;                       //将对应的学号插入到对应的位置\n\n        }\n    }\n    print();\n}\n```\n插入在比自己小的数的前面  \n首先将后面比前面小的数存放在另一个变量，然后前面比这个数大的数依次往后挪，直到比自己小的数，然后放入到其后面。  \n### 归并排序\n```\n//归并排序\n//分治  递归\nvoid merge_split(){\n    split(student,1,actual);\n    print();\n}\n//将数组用递归拆成单个元素\nvoid split(int arr[][2],int p,int q)\n{\n    int mid;\n    //确保拆成单个元素\n    if(arr== NULL ||p>q||p==q)\n    {\n        return ;\n    }\n    mid=(p+q)/2;\n    split(arr,p,mid);\n    split(arr,mid+1,q);\n    merge(arr,p,mid,q);\n}\n//排序归并在一起\nvoid merge(int arr[][2],int p,int mid,int q){\n    int i,j,k;\n    int L,R;\n    //定义临时存放左右数组的数组\n    int LL[max][2];\n    int RR[max][2];\n    //定义左右数组长度\n    L=mid-p+1;\n    R=q-mid;\n    //将左边数组存放到临时数组\n    for(i=0;i<L;i++)\n    {\n        LL[i][1]=arr[p-1+i][1];\n        LL[i][0]=arr[p-1+i][0];\n    }\n    //将右边数组存放到临时数组\n    for(i=0;i<R;i++)\n    {\n        RR[i][1]=arr[mid+i][1];\n        RR[i][0]=arr[mid+i][0];\n    }\n    i=0;\n    j=0;\n    for(k=p;k<=q;k++)\n    {\n        //当LL与RR没有元素时，放入原来数组\n        if(i==L)\n        {\n            arr[k-1][1]=RR[j][1];\n            arr[k-1][0]=RR[j][0];\n            j++;\n\n        }\n        else if(j==R)\n        {\n            arr[k-1][1]=LL[i][1];\n            arr[k-1][0]=LL[i][0];\n            i++;\n        }\n        else\n        {\n            //当LL与RR还有元素时，放入原来数组\n            if(LL[i][1]<RR[j][1])\n            {\n                arr[k-1][1]=LL[i][1];\n                arr[k-1][0]=LL[i][0];\n                i++;\n            }\n            else\n            {\n                arr[k-1][1]=RR[j][1];\n                arr[k-1][0]=RR[j][0];\n                j++;\n            }\n        }\n    }\n}\n```\n先用递归拆分数组，然后用循环归并并排序数组  \n递归是不断把数组拆成左右两部分，其中写的if判断是用来限制，分成一个元素后不可再分。\n归并是先记录左右素组的大小，然后分别放到另一个数组中，然后归并到原来的数组，分别对左右数组的第一个元素比较  \n当剩下元素没用完时会添加再数组后面\n\n## 功能选择\n### 功能选择\n```\nint select()\n{\n    while (1)\n    {\n        int i;\n        menu();\n        printf(\"请输入要选择的功能：\");\n        scanf(\"%d\",&i);\n        switch (i)\n        {\n            case 1: add();break;\n            case 2: delete();break;\n            case 3: alter();break;\n            case 4: find();break;\n            case 5: print();break;\n            case 6: short_1();break;\n            case 0: return 0;\n            default: printf(\"输入错误，请重新输入\");break;\n        }\n    }\n}\n```\n这里将多个函数封装到了功能选择函数中  \n用switch来实现多种功能的选择  \n\n### 排序选择\n```\n//排序算法目录\nint short_1()\n{\n        int i;\n        printf(\"===============\\n\");\n        printf(\"1、冒泡排序\\n\");\n        printf(\"2、选择排序\\n\");\n        printf(\"3、插入排序\\n\");\n        printf(\"4、归并排序\\n\");\n        printf(\"===============\\n\");\n        printf(\"请输入要使用的排序方法：\");\n        scanf(\"%d\",&i);\n        switch (i) {\n            case 1: maopao();break;\n            case 2: choice();break;\n            case 3: insert();break;\n            case 4: merge_split();break;\n            default: printf(\"输入错误，请重新输入\");break;\n\n        }\n\n}\n```\n与功能选择类似  \n\n## 函数的入口main\n```\nint main() {\n    select();\n}\n```\n所有内容都是在main函数中使用的，所以要在main中导入之前的函数\n\n## 源代码\n具体源代码存放在gitee仓库地址如下  \n\n{% copy https://gitee.com/thebyte/work.git %}\n\n## 目录\n目录就不用多说，用以前的打印就好了  \n```\nvoid menu()\n{\n    printf(\"===============\\n\");\n    printf(\"1、学生成绩录入\\n\");\n    printf(\"2、学生成绩删除\\n\");\n    printf(\"3、学生成绩修改\\n\");\n    printf(\"4、学生成绩查询\\n\");\n    printf(\"5、学生成绩打印\\n\");\n    printf(\"6、释 放 空 间\\n\");\n    printf(\"0、退       出\\n\");\n    printf(\"===============\\n\");\n}\n```\n## 链表录入\n先要定义结构体  \n```\ntypedef struct student\n{\n    //信息域\n    int num;\n    char name[10];\n    char sex;\n    float score;\n    //指针域\n    struct student *next;\n}stu;\n```\n然后需要定义头指针  \n```\nstu *head=NULL;\n```\n然后开始判断链表是否为空  \n```\nvoid add()\n{\n    //定义选择变量\n    int choose;\n    //定义尾指针\n    stu *last=NULL;\n    while (1)\n    {\n        //当链表为空时，head当next成员指向last，last为新节点，用来存放数据，last当next成员指向空\n        if(head==NULL)\n        {\n            //给第一个节点分配空间，当链表只有一个节点时，这个节点就是这个链表当last\n            last=(stu *)malloc(sizeof (stu));\n            last->next=NULL;\n            head=(stu *)malloc(sizeof (stu));\n            head->next=last;\n            //录入信息到信息域\n            printf(\"请输入学号：\");\n            scanf(\"%d\",&last->num);\n            printf(\"请输入姓名：\");\n            scanf(\"%s\",last->name);\n            getchar();\n            printf(\"请输入性别（男:M,女:F)：\");\n            scanf(\"%c\",&last->sex);\n            printf(\"请输入成绩：\");\n            scanf(\"%f\",&last->score);\n        }\n        //当链表不为空时，找到最后一个节点，last的next成员分配空间，然后最新的将last这个指针指向刚刚建立的空间为最新的last，然后最新的last的next成员指向null\n        else if(head!=NULL)\n        {\n            //查找链表的最后一个节点\n            last=head->next;\n            while(last->next!=NULL)\n            {\n                last=last->next;\n            }\n            //分配新节点空间\n            last->next=(stu *)malloc(sizeof (stu));\n            //标注新的last\n            last=last->next;\n            last->next=NULL;\n            //录入信息到信息域\n            printf(\"请输入学号：\");\n            scanf(\"%d\",&last->num);\n            printf(\"请输入姓名：\");\n            scanf(\"%s\",last->name);\n            getchar();\n            printf(\"请输入性别（男:M,女:F)：\");\n            scanf(\"%c\",&last->sex);\n            printf(\"请输入成绩：\");\n            scanf(\"%f\",&last->score);\n        }\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n其中也需要定义last尾指针，这个指针在录入时代表的意思是存放最后一个节点的地址  \n其中malloc()内存分配函数需要强行改变类型切需要引用头文件  \n```\n#include <stdlib.h>\n```\n\n## 删除成绩\n删除后面的都依照数组实现的学生管理系统逻辑推理写出，就不过多解释，有不懂的可以在联系我\n```\nvoid delete()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要删除成绩的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head;\n        while(temp->next!=NULL)\n        {\n            if(num==temp->next->num)\n            {\n                stu *del=temp->next;\n                temp->next=temp->next->next;\n                free(del);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 修改成绩\n```\n//修改成绩\nvoid alter()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要修改成绩的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head->next;\n        while(temp!=NULL)\n        {\n            if(num==temp->num)\n            {\n                printf(\"请输入要修改的成绩：\");\n                scanf(\"%f\",&temp->score);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 打印链表\n```\n//链表当输出\nvoid print()\n{\n    stu *temp;\n    temp=head->next;\n    printf(\"学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n\");\n    while(temp!=NULL)\n    {\n        printf(\"%-16d%-8s%-8c%-8.2f\\n\",temp->num,temp->name,temp->sex,temp->score);\n        temp=temp->next;\n    }\n    return;\n\n}\n```\n## 释放内存空间\n```\n//释放空间\nvoid release()\n{\n    stu *temp_2;\n    while(head!=NULL)\n    {\n        temp_2=head;\n        head=head->next;\n        free(temp_2);\n    }\n\n}\n```\n## 成绩查询\n```\n//查找成绩\nvoid find()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要查找的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head->next;\n        while(temp!=NULL)\n        {\n            if(num==temp->num)\n            {\n                printf(\"你要查找的学生信息如下：\\n\");\n                printf(\"学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n\");\n                printf(\"%-16d%-8s%-8c%-8.2f\\n\",temp->num,temp->name,temp->sex,temp->score);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 功能选择与程序入口\n```\n//选择功能\nint select()\n{\n    while (1)\n    {\n        int i;\n        menu();\n        printf(\"请输入要选择的功能：\");\n        scanf(\"%d\",&i);\n        switch (i)\n        {\n            case 1: add();break;\n            case 2: delete();break;\n            case 3: alter();break;\n            case 4: find();break;\n            case 5: print();break;\n            case 6: release();break;\n            case 0: return 0;\n            default: printf(\"输入错误，请重新输入\");break;\n        }\n    }\n}\nint main()\n{\n    select();\n}\n```","source":"wiki/学生成绩管理系统/index.md","raw":"---\nlayout: wiki  # 使用wiki布局模板\nwiki: 学生成绩管理系统 # 这是项目名\ntitle: 数组与链表学生成绩管理系统\n---\n## 引言\n因为学生管理系统类似数据库，需要实现增删改查，来管理其数据，所以该管理系统也应该实现这四个功能，这里使用数组实现，且具体实现如下。  \n## 源代码\n具体源代码存放在gitee仓库地址如下  \n\n{% copy https://gitee.com/thebyte/work.git %}\n\n## 学生成绩管理系统之目录  \n```\n//菜单\nvoid menu()\n{\n    printf(\"===============\\n\");\n    printf(\"1、学生成绩录入\\n\");\n    printf(\"2、学生成绩删除\\n\");\n    printf(\"3、学生成绩修改\\n\");\n    printf(\"4、学生成绩查询\\n\");\n    printf(\"5、学生成绩打印\\n\");\n    printf(\"6、排       序\\n\");\n    printf(\"0、退       出\\n\");\n    printf(\"===============\\n\");\n}\n```\n这里使用printf()函数直接输出  \n\n## 学生成绩管理系统之录入\n```\n//录入成绩\nvoid add()\n{\n\n    for (int i = 0; i < max - actual;i++)\n    {\n        int temp,k=0;//temp用来存放学号\n        //当数组有成绩时\n        if (actual>0) {\n            printf(\"请输入第%d位学生的学号为：\", actual+1);\n            scanf(\"%d\", &temp);\n            //判断是否有重复学号\n            while (temp!=student[k][0]&&k<actual)\n            {\n                k++;\n            }\n            if(temp==student[k][0])\n            {\n                //如果在数组中找到相同学号，则跳出本次循环重新输入\n                printf(\"学号重复请重新输入!\\n\");\n                continue;\n            }\n            else\n            {\n                student[actual][0]=temp;\n                printf(\"请输学号为%d的同学成绩：\", student[actual][0]);\n                scanf(\"%d\", &student[actual][1]);\n                actual++;\n\n            }\n            //判断是否继续\n            getchar();\n            printf(\"还有继续么(y/n):\");\n            char c = getchar();\n            if (c == 'y' || c == 'Y')\n            {\n                ;\n            }\n            else if (c == 'n' || c == 'N')\n            {\n                break;\n            }\n            else\n            {\n                printf(\"输入错误，即将退出录入系统!\\n\");\n                break;\n            }\n            }\n            //当数组没有成绩时\n            else if (actual==0) {\n            printf(\"请输入第%d位学生的学号为：\", i + 1);\n            scanf(\"%d\", &temp);\n            //查找并判断是否有重复的学号\n            while (temp!=student[k][0]&&k<actual)\n            {\n                k++;\n            }\n            if(temp==student[k][0])\n            {\n                //如果在数组中找到相同学号，则跳出本次循环重新输入\n                printf(\"学号重复请重新输入!\\n\");\n                continue;\n            }\n            else\n            {\n                student[i][0]=temp;\n                printf(\"请输学号为%d的同学成绩：\", student[i][0]);\n                scanf(\"%d\", &student[i][1]);\n                actual++;\n\n            }\n            getchar();\n            printf(\"还有继续么(y/n):\");\n            char c = getchar();\n            if (c == 'y' || c == 'Y') { ;\n            } else if (c == 'n' || c == 'N') {\n                break;\n            } else {\n                printf(\"输入错误，即将退出录入系统!\\n\");\n                break;\n            }\n        }\n\n\n    }\n}\n```\n这里需要定义一个二维数组，将学号放第一列，成绩放低0列，还需用到循环与条件判断来判断是否还要继续输入,并且定义一个存放实际人数变量actual，每次录入加1人  \n\n## 学习管理系统之修改\n```\n//修改成绩\nvoid alter() {\n    while (1) {\n        int number, i = 0;\n        //输入要修改成绩的学号\n        printf(\"请输入要修改的学号：\");\n        scanf(\"%d\", &number);\n        //开始查找与学号配对的成绩位置\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有该学号的成绩\n        if (number == student[i][0])\n        {\n            //有该学号则输入修改后的成绩\n            printf(\"请输入要修改的成绩：\");\n            scanf(\"%d\", &student[i][1]);\n        }\n        else\n        {\n            //没有则输出查无此人\n            printf(\"查无此人\\n\");\n        }\n        //判断是否继续修改\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出修改系统!\\n\");\n        }\n\n    }\n}\n\n```\n这里使用循环一个一个学号对比，找到后然后将修改成绩覆盖到要修改的成绩位置，没找到则输出查无此人  \n\n## 学生成绩管理系统之删除\n```\n//删除成绩\nvoid delete()\n{\n    while (1) {\n        int number, i = 0;\n        //输入要删除成绩的学号\n        printf(\"请输入要删除成绩的学号：\");\n        scanf(\"%d\", &number);\n        //查找学号\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有此学号\n        if (number == student[i][0])\n        {\n            //如果有，则后面的成绩覆盖要删除的成绩，后面依次往前挪\n            for(;i<actual;i++)\n            {\n                student[i][0]=student[i+1][0];\n                student[i][1]=student[i+1][1];\n\n            }\n            printf(\"删除成功!\\n\");\n        }\n        else\n        {\n            //如果没有，则输出查无此人\n            printf(\"查无此人!\\n\");\n        }\n        //删除一个成绩则实际人数减一\n        actual--;\n        //判断是否继续删除\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n\n    }\n}\n```\n删除类似修改，只是将成绩覆盖改成，下面的成绩全部往上移1格，这里每删除一个人则实际人数actual减1人  \n\n## 学生成绩管理系统之查找\n```\nvoid find()\n{\n    while (1) {\n\n        int number, i = 0;\n        //输入要查找成绩的学号\n        printf(\"请输入要查找的学号：\");\n        scanf(\"%d\", &number);\n        //查找学号对应的成绩位置\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有与之对应的学号\n        if (number == student[i][0])\n        {\n            //有则输出成绩\n            printf(\"学号为%d的成绩为：%d\\n\",number,student[i][1]);\n        }\n        else\n        {\n            //没有则输出查无此人\n            printf(\"查无此人\\n\");\n        }\n        //判断是否继续\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出查找系统\\n\");\n\n        }\n\n    }\n\n}\n```\n查找也是利用学号，一一对比找学号，然后打印该学号位置的成绩  \n\n## 学生成绩管理系统之打印\n```\nvoid print()\n{\n    //用for循环依次打印出实际人数的学号成绩对应表\n    int i;\n    printf(\"成绩表如下（学号-成绩）：\\n\");\n    for(i=0;i<actual;i++)\n    {\n        printf(\"%4d%4d\\n\",student[i][0],student[i][1]);\n    }\n    float average=0.0;\n    float sum=0.0;\n    for(int j=0;j<actual;j++)\n    {\n        sum=sum+student[j][1];\n    }\n    average=sum/actual;\n    printf(\"全班的平均成绩为%2f\\n\",average);\n}\n\n```\n这里使用for循环一一换行打印  \n\n## 学生成绩管理系统之排序\n### 冒泡排序\n```\nvoid maopao()\n{\n    int temp=0,num=0;                               //初始化存放成绩和学号的临时变量\n    for(int i=0;i<actual-1;i++)                     //遍历实际人数-1次\n    {\n        for(int j=0;j<actual-i-1;j++)               //遍历实际人数减-1-1次；2人一组对比所以比要再减1次\n        {\n            if(student[j][1]>student[j+1][1])       //判断前后两数的大小，如果前面的成绩比后面成绩大\n            {\n                //交换成绩\n                temp=student[j][1];\n                student[j][1]= student[j+1][1];\n                student[j+1][1]=temp;\n                //交换学号\n                num=student[j][0];\n                student[j][0]=student[j+1][0];\n                student[j+1][0]=num;\n            }\n        }\n    }\n    print();                           //打印成绩\n}\n```\n两两比对，交换位置，然后循环重新再比对，注意点是，外循环与内循环都比实际人数少1位  \n\n### 选择排序\n```\n//选择排序\nvoid choice()\n{\n    int a=0,b=0,min;\n    for(int i=0;i<actual-1;i++)\n    {\n        min=i;                          //假设最小值位置\n        for(int j=i+1;j<actual;j++)     //开始遍历找所有的值对比\n        {\n            if(student[j][1]<student[min][1])       //如果后面的数小于最小值，则记录最小值的位置\n            {\n                min=j;\n            }\n        }\n        if(min!=i)                      //如果最小值不等于最开始的位置，则\n        {\n            //交换学号\n            b=student[min][0];\n            student[min][0]=student[i][0];\n            student[i][0]=b;\n            //交换成绩\n            a=student[min][1];\n            student[min][1]=student[i][1];\n            student[i][1]=a;\n\n        }\n    }\n    print();                              //打印成绩\n}\n```\n选择排序是将最小的元素挑出来与没排序的第一位交换位置，它会不断的选择剩余元素中的最小者      \n\n### 插入排序\n```\n//插入排序\nvoid insert()\n{\n\n    int i,j;\n    int temp,id;\n    for(i=1;i<actual;i++)\n    {\n        if(student[i][1]<student[i-1][1])           //如果后面的数小于前面的数\n        {\n            temp=student[i][1];                     //保存后面的数到temp\n            id=student[i][0];                       //对应的学号保存到ou\n            for(j=i-1;student[j][1]>temp;j--)       //开始将前面到数移位，当前面的数大于temp就开始循环，直到有比temp大的数和最前面则跳出循环\n            {\n                student[j+1][1]=student[j][1];      //将成绩向后移\n                student[j+1][0]=student[j][0];      //学号向后移\n                if(j<0)                             //当最小到数移动到第一位后\n                {\n                    break;                          //退出循环\n                }\n            }\n            student[j+1][1]=temp;                     //将temp的值插入到比temp大的数的前面\n            student[j+1][0]=id;                       //将对应的学号插入到对应的位置\n\n        }\n    }\n    print();\n}\n```\n插入在比自己小的数的前面  \n首先将后面比前面小的数存放在另一个变量，然后前面比这个数大的数依次往后挪，直到比自己小的数，然后放入到其后面。  \n### 归并排序\n```\n//归并排序\n//分治  递归\nvoid merge_split(){\n    split(student,1,actual);\n    print();\n}\n//将数组用递归拆成单个元素\nvoid split(int arr[][2],int p,int q)\n{\n    int mid;\n    //确保拆成单个元素\n    if(arr== NULL ||p>q||p==q)\n    {\n        return ;\n    }\n    mid=(p+q)/2;\n    split(arr,p,mid);\n    split(arr,mid+1,q);\n    merge(arr,p,mid,q);\n}\n//排序归并在一起\nvoid merge(int arr[][2],int p,int mid,int q){\n    int i,j,k;\n    int L,R;\n    //定义临时存放左右数组的数组\n    int LL[max][2];\n    int RR[max][2];\n    //定义左右数组长度\n    L=mid-p+1;\n    R=q-mid;\n    //将左边数组存放到临时数组\n    for(i=0;i<L;i++)\n    {\n        LL[i][1]=arr[p-1+i][1];\n        LL[i][0]=arr[p-1+i][0];\n    }\n    //将右边数组存放到临时数组\n    for(i=0;i<R;i++)\n    {\n        RR[i][1]=arr[mid+i][1];\n        RR[i][0]=arr[mid+i][0];\n    }\n    i=0;\n    j=0;\n    for(k=p;k<=q;k++)\n    {\n        //当LL与RR没有元素时，放入原来数组\n        if(i==L)\n        {\n            arr[k-1][1]=RR[j][1];\n            arr[k-1][0]=RR[j][0];\n            j++;\n\n        }\n        else if(j==R)\n        {\n            arr[k-1][1]=LL[i][1];\n            arr[k-1][0]=LL[i][0];\n            i++;\n        }\n        else\n        {\n            //当LL与RR还有元素时，放入原来数组\n            if(LL[i][1]<RR[j][1])\n            {\n                arr[k-1][1]=LL[i][1];\n                arr[k-1][0]=LL[i][0];\n                i++;\n            }\n            else\n            {\n                arr[k-1][1]=RR[j][1];\n                arr[k-1][0]=RR[j][0];\n                j++;\n            }\n        }\n    }\n}\n```\n先用递归拆分数组，然后用循环归并并排序数组  \n递归是不断把数组拆成左右两部分，其中写的if判断是用来限制，分成一个元素后不可再分。\n归并是先记录左右素组的大小，然后分别放到另一个数组中，然后归并到原来的数组，分别对左右数组的第一个元素比较  \n当剩下元素没用完时会添加再数组后面\n\n## 功能选择\n### 功能选择\n```\nint select()\n{\n    while (1)\n    {\n        int i;\n        menu();\n        printf(\"请输入要选择的功能：\");\n        scanf(\"%d\",&i);\n        switch (i)\n        {\n            case 1: add();break;\n            case 2: delete();break;\n            case 3: alter();break;\n            case 4: find();break;\n            case 5: print();break;\n            case 6: short_1();break;\n            case 0: return 0;\n            default: printf(\"输入错误，请重新输入\");break;\n        }\n    }\n}\n```\n这里将多个函数封装到了功能选择函数中  \n用switch来实现多种功能的选择  \n\n### 排序选择\n```\n//排序算法目录\nint short_1()\n{\n        int i;\n        printf(\"===============\\n\");\n        printf(\"1、冒泡排序\\n\");\n        printf(\"2、选择排序\\n\");\n        printf(\"3、插入排序\\n\");\n        printf(\"4、归并排序\\n\");\n        printf(\"===============\\n\");\n        printf(\"请输入要使用的排序方法：\");\n        scanf(\"%d\",&i);\n        switch (i) {\n            case 1: maopao();break;\n            case 2: choice();break;\n            case 3: insert();break;\n            case 4: merge_split();break;\n            default: printf(\"输入错误，请重新输入\");break;\n\n        }\n\n}\n```\n与功能选择类似  \n\n## 函数的入口main\n```\nint main() {\n    select();\n}\n```\n所有内容都是在main函数中使用的，所以要在main中导入之前的函数\n\n## 源代码\n具体源代码存放在gitee仓库地址如下  \n\n{% copy https://gitee.com/thebyte/work.git %}\n\n## 目录\n目录就不用多说，用以前的打印就好了  \n```\nvoid menu()\n{\n    printf(\"===============\\n\");\n    printf(\"1、学生成绩录入\\n\");\n    printf(\"2、学生成绩删除\\n\");\n    printf(\"3、学生成绩修改\\n\");\n    printf(\"4、学生成绩查询\\n\");\n    printf(\"5、学生成绩打印\\n\");\n    printf(\"6、释 放 空 间\\n\");\n    printf(\"0、退       出\\n\");\n    printf(\"===============\\n\");\n}\n```\n## 链表录入\n先要定义结构体  \n```\ntypedef struct student\n{\n    //信息域\n    int num;\n    char name[10];\n    char sex;\n    float score;\n    //指针域\n    struct student *next;\n}stu;\n```\n然后需要定义头指针  \n```\nstu *head=NULL;\n```\n然后开始判断链表是否为空  \n```\nvoid add()\n{\n    //定义选择变量\n    int choose;\n    //定义尾指针\n    stu *last=NULL;\n    while (1)\n    {\n        //当链表为空时，head当next成员指向last，last为新节点，用来存放数据，last当next成员指向空\n        if(head==NULL)\n        {\n            //给第一个节点分配空间，当链表只有一个节点时，这个节点就是这个链表当last\n            last=(stu *)malloc(sizeof (stu));\n            last->next=NULL;\n            head=(stu *)malloc(sizeof (stu));\n            head->next=last;\n            //录入信息到信息域\n            printf(\"请输入学号：\");\n            scanf(\"%d\",&last->num);\n            printf(\"请输入姓名：\");\n            scanf(\"%s\",last->name);\n            getchar();\n            printf(\"请输入性别（男:M,女:F)：\");\n            scanf(\"%c\",&last->sex);\n            printf(\"请输入成绩：\");\n            scanf(\"%f\",&last->score);\n        }\n        //当链表不为空时，找到最后一个节点，last的next成员分配空间，然后最新的将last这个指针指向刚刚建立的空间为最新的last，然后最新的last的next成员指向null\n        else if(head!=NULL)\n        {\n            //查找链表的最后一个节点\n            last=head->next;\n            while(last->next!=NULL)\n            {\n                last=last->next;\n            }\n            //分配新节点空间\n            last->next=(stu *)malloc(sizeof (stu));\n            //标注新的last\n            last=last->next;\n            last->next=NULL;\n            //录入信息到信息域\n            printf(\"请输入学号：\");\n            scanf(\"%d\",&last->num);\n            printf(\"请输入姓名：\");\n            scanf(\"%s\",last->name);\n            getchar();\n            printf(\"请输入性别（男:M,女:F)：\");\n            scanf(\"%c\",&last->sex);\n            printf(\"请输入成绩：\");\n            scanf(\"%f\",&last->score);\n        }\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n其中也需要定义last尾指针，这个指针在录入时代表的意思是存放最后一个节点的地址  \n其中malloc()内存分配函数需要强行改变类型切需要引用头文件  \n```\n#include <stdlib.h>\n```\n\n## 删除成绩\n删除后面的都依照数组实现的学生管理系统逻辑推理写出，就不过多解释，有不懂的可以在联系我\n```\nvoid delete()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要删除成绩的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head;\n        while(temp->next!=NULL)\n        {\n            if(num==temp->next->num)\n            {\n                stu *del=temp->next;\n                temp->next=temp->next->next;\n                free(del);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 修改成绩\n```\n//修改成绩\nvoid alter()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要修改成绩的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head->next;\n        while(temp!=NULL)\n        {\n            if(num==temp->num)\n            {\n                printf(\"请输入要修改的成绩：\");\n                scanf(\"%f\",&temp->score);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 打印链表\n```\n//链表当输出\nvoid print()\n{\n    stu *temp;\n    temp=head->next;\n    printf(\"学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n\");\n    while(temp!=NULL)\n    {\n        printf(\"%-16d%-8s%-8c%-8.2f\\n\",temp->num,temp->name,temp->sex,temp->score);\n        temp=temp->next;\n    }\n    return;\n\n}\n```\n## 释放内存空间\n```\n//释放空间\nvoid release()\n{\n    stu *temp_2;\n    while(head!=NULL)\n    {\n        temp_2=head;\n        head=head->next;\n        free(temp_2);\n    }\n\n}\n```\n## 成绩查询\n```\n//查找成绩\nvoid find()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要查找的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head->next;\n        while(temp!=NULL)\n        {\n            if(num==temp->num)\n            {\n                printf(\"你要查找的学生信息如下：\\n\");\n                printf(\"学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n\");\n                printf(\"%-16d%-8s%-8c%-8.2f\\n\",temp->num,temp->name,temp->sex,temp->score);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 功能选择与程序入口\n```\n//选择功能\nint select()\n{\n    while (1)\n    {\n        int i;\n        menu();\n        printf(\"请输入要选择的功能：\");\n        scanf(\"%d\",&i);\n        switch (i)\n        {\n            case 1: add();break;\n            case 2: delete();break;\n            case 3: alter();break;\n            case 4: find();break;\n            case 5: print();break;\n            case 6: release();break;\n            case 0: return 0;\n            default: printf(\"输入错误，请重新输入\");break;\n        }\n    }\n}\nint main()\n{\n    select();\n}\n```","date":"2022-11-11T00:21:23.157Z","updated":"2022-11-02T04:00:27.182Z","path":"wiki/学生成绩管理系统/index.html","comments":1,"_id":"clbhcva8r000hu19kasfcc5ir","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>因为学生管理系统类似数据库，需要实现增删改查，来管理其数据，所以该管理系统也应该实现这四个功能，这里使用数组实现，且具体实现如下。  </p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>具体源代码存放在gitee仓库地址如下  </p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_6\" value=\"https://gitee.com/thebyte/work.git\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_6&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n\n<h2 id=\"学生成绩管理系统之目录\"><a href=\"#学生成绩管理系统之目录\" class=\"headerlink\" title=\"学生成绩管理系统之目录\"></a>学生成绩管理系统之目录</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//菜单</span><br><span class=\"line\">void menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">    printf(&quot;1、学生成绩录入\\n&quot;);</span><br><span class=\"line\">    printf(&quot;2、学生成绩删除\\n&quot;);</span><br><span class=\"line\">    printf(&quot;3、学生成绩修改\\n&quot;);</span><br><span class=\"line\">    printf(&quot;4、学生成绩查询\\n&quot;);</span><br><span class=\"line\">    printf(&quot;5、学生成绩打印\\n&quot;);</span><br><span class=\"line\">    printf(&quot;6、排       序\\n&quot;);</span><br><span class=\"line\">    printf(&quot;0、退       出\\n&quot;);</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里使用printf()函数直接输出  </p>\n<h2 id=\"学生成绩管理系统之录入\"><a href=\"#学生成绩管理系统之录入\" class=\"headerlink\" title=\"学生成绩管理系统之录入\"></a>学生成绩管理系统之录入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//录入成绩</span><br><span class=\"line\">void add()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    for (int i = 0; i &lt; max - actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int temp,k=0;//temp用来存放学号</span><br><span class=\"line\">        //当数组有成绩时</span><br><span class=\"line\">        if (actual&gt;0) &#123;</span><br><span class=\"line\">            printf(&quot;请输入第%d位学生的学号为：&quot;, actual+1);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;temp);</span><br><span class=\"line\">            //判断是否有重复学号</span><br><span class=\"line\">            while (temp!=student[k][0]&amp;&amp;k&lt;actual)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                k++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(temp==student[k][0])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //如果在数组中找到相同学号，则跳出本次循环重新输入</span><br><span class=\"line\">                printf(&quot;学号重复请重新输入!\\n&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[actual][0]=temp;</span><br><span class=\"line\">                printf(&quot;请输学号为%d的同学成绩：&quot;, student[actual][0]);</span><br><span class=\"line\">                scanf(&quot;%d&quot;, &amp;student[actual][1]);</span><br><span class=\"line\">                actual++;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //判断是否继续</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;还有继续么(y/n):&quot;);</span><br><span class=\"line\">            char c = getchar();</span><br><span class=\"line\">            if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;输入错误，即将退出录入系统!\\n&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //当数组没有成绩时</span><br><span class=\"line\">            else if (actual==0) &#123;</span><br><span class=\"line\">            printf(&quot;请输入第%d位学生的学号为：&quot;, i + 1);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;temp);</span><br><span class=\"line\">            //查找并判断是否有重复的学号</span><br><span class=\"line\">            while (temp!=student[k][0]&amp;&amp;k&lt;actual)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                k++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(temp==student[k][0])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //如果在数组中找到相同学号，则跳出本次循环重新输入</span><br><span class=\"line\">                printf(&quot;学号重复请重新输入!\\n&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[i][0]=temp;</span><br><span class=\"line\">                printf(&quot;请输学号为%d的同学成绩：&quot;, student[i][0]);</span><br><span class=\"line\">                scanf(&quot;%d&quot;, &amp;student[i][1]);</span><br><span class=\"line\">                actual++;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;还有继续么(y/n):&quot;);</span><br><span class=\"line\">            char c = getchar();</span><br><span class=\"line\">            if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;) &#123; ;</span><br><span class=\"line\">            &#125; else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;) &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                printf(&quot;输入错误，即将退出录入系统!\\n&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里需要定义一个二维数组，将学号放第一列，成绩放低0列，还需用到循环与条件判断来判断是否还要继续输入,并且定义一个存放实际人数变量actual，每次录入加1人  </p>\n<h2 id=\"学习管理系统之修改\"><a href=\"#学习管理系统之修改\" class=\"headerlink\" title=\"学习管理系统之修改\"></a>学习管理系统之修改</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//修改成绩</span><br><span class=\"line\">void alter() &#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要修改成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要修改的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //开始查找与学号配对的成绩位置</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有该学号的成绩</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //有该学号则输入修改后的成绩</span><br><span class=\"line\">            printf(&quot;请输入要修改的成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;student[i][1]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //没有则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否继续修改</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出修改系统!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里使用循环一个一个学号对比，找到后然后将修改成绩覆盖到要修改的成绩位置，没找到则输出查无此人  </p>\n<h2 id=\"学生成绩管理系统之删除\"><a href=\"#学生成绩管理系统之删除\" class=\"headerlink\" title=\"学生成绩管理系统之删除\"></a>学生成绩管理系统之删除</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//删除成绩</span><br><span class=\"line\">void delete()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要删除成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要删除成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //查找学号</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有此学号</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果有，则后面的成绩覆盖要删除的成绩，后面依次往前挪</span><br><span class=\"line\">            for(;i&lt;actual;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[i][0]=student[i+1][0];</span><br><span class=\"line\">                student[i][1]=student[i+1][1];</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            printf(&quot;删除成功!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果没有，则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //删除一个成绩则实际人数减一</span><br><span class=\"line\">        actual--;</span><br><span class=\"line\">        //判断是否继续删除</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>删除类似修改，只是将成绩覆盖改成，下面的成绩全部往上移1格，这里每删除一个人则实际人数actual减1人  </p>\n<h2 id=\"学生成绩管理系统之查找\"><a href=\"#学生成绩管理系统之查找\" class=\"headerlink\" title=\"学生成绩管理系统之查找\"></a>学生成绩管理系统之查找</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void find()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要查找成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要查找的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //查找学号对应的成绩位置</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有与之对应的学号</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //有则输出成绩</span><br><span class=\"line\">            printf(&quot;学号为%d的成绩为：%d\\n&quot;,number,student[i][1]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //没有则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否继续</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出查找系统\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查找也是利用学号，一一对比找学号，然后打印该学号位置的成绩  </p>\n<h2 id=\"学生成绩管理系统之打印\"><a href=\"#学生成绩管理系统之打印\" class=\"headerlink\" title=\"学生成绩管理系统之打印\"></a>学生成绩管理系统之打印</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void print()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //用for循环依次打印出实际人数的学号成绩对应表</span><br><span class=\"line\">    int i;</span><br><span class=\"line\">    printf(&quot;成绩表如下（学号-成绩）：\\n&quot;);</span><br><span class=\"line\">    for(i=0;i&lt;actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;%4d%4d\\n&quot;,student[i][0],student[i][1]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    float average=0.0;</span><br><span class=\"line\">    float sum=0.0;</span><br><span class=\"line\">    for(int j=0;j&lt;actual;j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum=sum+student[j][1];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    average=sum/actual;</span><br><span class=\"line\">    printf(&quot;全班的平均成绩为%2f\\n&quot;,average);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里使用for循环一一换行打印  </p>\n<h2 id=\"学生成绩管理系统之排序\"><a href=\"#学生成绩管理系统之排序\" class=\"headerlink\" title=\"学生成绩管理系统之排序\"></a>学生成绩管理系统之排序</h2><h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void maopao()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int temp=0,num=0;                               //初始化存放成绩和学号的临时变量</span><br><span class=\"line\">    for(int i=0;i&lt;actual-1;i++)                     //遍历实际人数-1次</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(int j=0;j&lt;actual-i-1;j++)               //遍历实际人数减-1-1次；2人一组对比所以比要再减1次</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(student[j][1]&gt;student[j+1][1])       //判断前后两数的大小，如果前面的成绩比后面成绩大</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //交换成绩</span><br><span class=\"line\">                temp=student[j][1];</span><br><span class=\"line\">                student[j][1]= student[j+1][1];</span><br><span class=\"line\">                student[j+1][1]=temp;</span><br><span class=\"line\">                //交换学号</span><br><span class=\"line\">                num=student[j][0];</span><br><span class=\"line\">                student[j][0]=student[j+1][0];</span><br><span class=\"line\">                student[j+1][0]=num;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();                           //打印成绩</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>两两比对，交换位置，然后循环重新再比对，注意点是，外循环与内循环都比实际人数少1位  </p>\n<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//选择排序</span><br><span class=\"line\">void choice()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int a=0,b=0,min;</span><br><span class=\"line\">    for(int i=0;i&lt;actual-1;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        min=i;                          //假设最小值位置</span><br><span class=\"line\">        for(int j=i+1;j&lt;actual;j++)     //开始遍历找所有的值对比</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(student[j][1]&lt;student[min][1])       //如果后面的数小于最小值，则记录最小值的位置</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                min=j;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(min!=i)                      //如果最小值不等于最开始的位置，则</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //交换学号</span><br><span class=\"line\">            b=student[min][0];</span><br><span class=\"line\">            student[min][0]=student[i][0];</span><br><span class=\"line\">            student[i][0]=b;</span><br><span class=\"line\">            //交换成绩</span><br><span class=\"line\">            a=student[min][1];</span><br><span class=\"line\">            student[min][1]=student[i][1];</span><br><span class=\"line\">            student[i][1]=a;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();                              //打印成绩</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>选择排序是将最小的元素挑出来与没排序的第一位交换位置，它会不断的选择剩余元素中的最小者      </p>\n<h3 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//插入排序</span><br><span class=\"line\">void insert()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    int i,j;</span><br><span class=\"line\">    int temp,id;</span><br><span class=\"line\">    for(i=1;i&lt;actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(student[i][1]&lt;student[i-1][1])           //如果后面的数小于前面的数</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            temp=student[i][1];                     //保存后面的数到temp</span><br><span class=\"line\">            id=student[i][0];                       //对应的学号保存到ou</span><br><span class=\"line\">            for(j=i-1;student[j][1]&gt;temp;j--)       //开始将前面到数移位，当前面的数大于temp就开始循环，直到有比temp大的数和最前面则跳出循环</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[j+1][1]=student[j][1];      //将成绩向后移</span><br><span class=\"line\">                student[j+1][0]=student[j][0];      //学号向后移</span><br><span class=\"line\">                if(j&lt;0)                             //当最小到数移动到第一位后</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    break;                          //退出循环</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            student[j+1][1]=temp;                     //将temp的值插入到比temp大的数的前面</span><br><span class=\"line\">            student[j+1][0]=id;                       //将对应的学号插入到对应的位置</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>插入在比自己小的数的前面<br>首先将后面比前面小的数存放在另一个变量，然后前面比这个数大的数依次往后挪，直到比自己小的数，然后放入到其后面。  </p>\n<h3 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//归并排序</span><br><span class=\"line\">//分治  递归</span><br><span class=\"line\">void merge_split()&#123;</span><br><span class=\"line\">    split(student,1,actual);</span><br><span class=\"line\">    print();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//将数组用递归拆成单个元素</span><br><span class=\"line\">void split(int arr[][2],int p,int q)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int mid;</span><br><span class=\"line\">    //确保拆成单个元素</span><br><span class=\"line\">    if(arr== NULL ||p&gt;q||p==q)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mid=(p+q)/2;</span><br><span class=\"line\">    split(arr,p,mid);</span><br><span class=\"line\">    split(arr,mid+1,q);</span><br><span class=\"line\">    merge(arr,p,mid,q);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//排序归并在一起</span><br><span class=\"line\">void merge(int arr[][2],int p,int mid,int q)&#123;</span><br><span class=\"line\">    int i,j,k;</span><br><span class=\"line\">    int L,R;</span><br><span class=\"line\">    //定义临时存放左右数组的数组</span><br><span class=\"line\">    int LL[max][2];</span><br><span class=\"line\">    int RR[max][2];</span><br><span class=\"line\">    //定义左右数组长度</span><br><span class=\"line\">    L=mid-p+1;</span><br><span class=\"line\">    R=q-mid;</span><br><span class=\"line\">    //将左边数组存放到临时数组</span><br><span class=\"line\">    for(i=0;i&lt;L;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        LL[i][1]=arr[p-1+i][1];</span><br><span class=\"line\">        LL[i][0]=arr[p-1+i][0];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //将右边数组存放到临时数组</span><br><span class=\"line\">    for(i=0;i&lt;R;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        RR[i][1]=arr[mid+i][1];</span><br><span class=\"line\">        RR[i][0]=arr[mid+i][0];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    i=0;</span><br><span class=\"line\">    j=0;</span><br><span class=\"line\">    for(k=p;k&lt;=q;k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //当LL与RR没有元素时，放入原来数组</span><br><span class=\"line\">        if(i==L)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            arr[k-1][1]=RR[j][1];</span><br><span class=\"line\">            arr[k-1][0]=RR[j][0];</span><br><span class=\"line\">            j++;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if(j==R)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            arr[k-1][1]=LL[i][1];</span><br><span class=\"line\">            arr[k-1][0]=LL[i][0];</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //当LL与RR还有元素时，放入原来数组</span><br><span class=\"line\">            if(LL[i][1]&lt;RR[j][1])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                arr[k-1][1]=LL[i][1];</span><br><span class=\"line\">                arr[k-1][0]=LL[i][0];</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                arr[k-1][1]=RR[j][1];</span><br><span class=\"line\">                arr[k-1][0]=RR[j][0];</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>先用递归拆分数组，然后用循环归并并排序数组<br>递归是不断把数组拆成左右两部分，其中写的if判断是用来限制，分成一个元素后不可再分。<br>归并是先记录左右素组的大小，然后分别放到另一个数组中，然后归并到原来的数组，分别对左右数组的第一个元素比较<br>当剩下元素没用完时会添加再数组后面</p>\n<h2 id=\"功能选择\"><a href=\"#功能选择\" class=\"headerlink\" title=\"功能选择\"></a>功能选择</h2><h3 id=\"功能选择-1\"><a href=\"#功能选择-1\" class=\"headerlink\" title=\"功能选择\"></a>功能选择</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int select()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        printf(&quot;请输入要选择的功能：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            case 1: add();break;</span><br><span class=\"line\">            case 2: delete();break;</span><br><span class=\"line\">            case 3: alter();break;</span><br><span class=\"line\">            case 4: find();break;</span><br><span class=\"line\">            case 5: print();break;</span><br><span class=\"line\">            case 6: short_1();break;</span><br><span class=\"line\">            case 0: return 0;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里将多个函数封装到了功能选择函数中<br>用switch来实现多种功能的选择  </p>\n<h3 id=\"排序选择\"><a href=\"#排序选择\" class=\"headerlink\" title=\"排序选择\"></a>排序选择</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//排序算法目录</span><br><span class=\"line\">int short_1()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">        printf(&quot;1、冒泡排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;2、选择排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;3、插入排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;4、归并排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">        printf(&quot;请输入要使用的排序方法：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i) &#123;</span><br><span class=\"line\">            case 1: maopao();break;</span><br><span class=\"line\">            case 2: choice();break;</span><br><span class=\"line\">            case 3: insert();break;</span><br><span class=\"line\">            case 4: merge_split();break;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>与功能选择类似  </p>\n<h2 id=\"函数的入口main\"><a href=\"#函数的入口main\" class=\"headerlink\" title=\"函数的入口main\"></a>函数的入口main</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    select();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所有内容都是在main函数中使用的，所以要在main中导入之前的函数</p>\n<h2 id=\"源代码-1\"><a href=\"#源代码-1\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>具体源代码存放在gitee仓库地址如下  </p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_7\" value=\"https://gitee.com/thebyte/work.git\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_7&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>目录就不用多说，用以前的打印就好了  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">    printf(&quot;1、学生成绩录入\\n&quot;);</span><br><span class=\"line\">    printf(&quot;2、学生成绩删除\\n&quot;);</span><br><span class=\"line\">    printf(&quot;3、学生成绩修改\\n&quot;);</span><br><span class=\"line\">    printf(&quot;4、学生成绩查询\\n&quot;);</span><br><span class=\"line\">    printf(&quot;5、学生成绩打印\\n&quot;);</span><br><span class=\"line\">    printf(&quot;6、释 放 空 间\\n&quot;);</span><br><span class=\"line\">    printf(&quot;0、退       出\\n&quot;);</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"链表录入\"><a href=\"#链表录入\" class=\"headerlink\" title=\"链表录入\"></a>链表录入</h2><p>先要定义结构体  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef struct student</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //信息域</span><br><span class=\"line\">    int num;</span><br><span class=\"line\">    char name[10];</span><br><span class=\"line\">    char sex;</span><br><span class=\"line\">    float score;</span><br><span class=\"line\">    //指针域</span><br><span class=\"line\">    struct student *next;</span><br><span class=\"line\">&#125;stu;</span><br></pre></td></tr></table></figure>\n<p>然后需要定义头指针  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stu *head=NULL;</span><br></pre></td></tr></table></figure>\n<p>然后开始判断链表是否为空  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void add()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //定义选择变量</span><br><span class=\"line\">    int choose;</span><br><span class=\"line\">    //定义尾指针</span><br><span class=\"line\">    stu *last=NULL;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //当链表为空时，head当next成员指向last，last为新节点，用来存放数据，last当next成员指向空</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //给第一个节点分配空间，当链表只有一个节点时，这个节点就是这个链表当last</span><br><span class=\"line\">            last=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            last-&gt;next=NULL;</span><br><span class=\"line\">            head=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            head-&gt;next=last;</span><br><span class=\"line\">            //录入信息到信息域</span><br><span class=\"line\">            printf(&quot;请输入学号：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;,&amp;last-&gt;num);</span><br><span class=\"line\">            printf(&quot;请输入姓名：&quot;);</span><br><span class=\"line\">            scanf(&quot;%s&quot;,last-&gt;name);</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;请输入性别（男:M,女:F)：&quot;);</span><br><span class=\"line\">            scanf(&quot;%c&quot;,&amp;last-&gt;sex);</span><br><span class=\"line\">            printf(&quot;请输入成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%f&quot;,&amp;last-&gt;score);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //当链表不为空时，找到最后一个节点，last的next成员分配空间，然后最新的将last这个指针指向刚刚建立的空间为最新的last，然后最新的last的next成员指向null</span><br><span class=\"line\">        else if(head!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //查找链表的最后一个节点</span><br><span class=\"line\">            last=head-&gt;next;</span><br><span class=\"line\">            while(last-&gt;next!=NULL)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                last=last-&gt;next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //分配新节点空间</span><br><span class=\"line\">            last-&gt;next=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            //标注新的last</span><br><span class=\"line\">            last=last-&gt;next;</span><br><span class=\"line\">            last-&gt;next=NULL;</span><br><span class=\"line\">            //录入信息到信息域</span><br><span class=\"line\">            printf(&quot;请输入学号：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;,&amp;last-&gt;num);</span><br><span class=\"line\">            printf(&quot;请输入姓名：&quot;);</span><br><span class=\"line\">            scanf(&quot;%s&quot;,last-&gt;name);</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;请输入性别（男:M,女:F)：&quot;);</span><br><span class=\"line\">            scanf(&quot;%c&quot;,&amp;last-&gt;sex);</span><br><span class=\"line\">            printf(&quot;请输入成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%f&quot;,&amp;last-&gt;score);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中也需要定义last尾指针，这个指针在录入时代表的意思是存放最后一个节点的地址<br>其中malloc()内存分配函数需要强行改变类型切需要引用头文件  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdlib.h&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除成绩\"><a href=\"#删除成绩\" class=\"headerlink\" title=\"删除成绩\"></a>删除成绩</h2><p>删除后面的都依照数组实现的学生管理系统逻辑推理写出，就不过多解释，有不懂的可以在联系我</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void delete()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要删除成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head;</span><br><span class=\"line\">        while(temp-&gt;next!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;next-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                stu *del=temp-&gt;next;</span><br><span class=\"line\">                temp-&gt;next=temp-&gt;next-&gt;next;</span><br><span class=\"line\">                free(del);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改成绩\"><a href=\"#修改成绩\" class=\"headerlink\" title=\"修改成绩\"></a>修改成绩</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//修改成绩</span><br><span class=\"line\">void alter()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要修改成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head-&gt;next;</span><br><span class=\"line\">        while(temp!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;请输入要修改的成绩：&quot;);</span><br><span class=\"line\">                scanf(&quot;%f&quot;,&amp;temp-&gt;score);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"打印链表\"><a href=\"#打印链表\" class=\"headerlink\" title=\"打印链表\"></a>打印链表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//链表当输出</span><br><span class=\"line\">void print()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    stu *temp;</span><br><span class=\"line\">    temp=head-&gt;next;</span><br><span class=\"line\">    printf(&quot;学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n&quot;);</span><br><span class=\"line\">    while(temp!=NULL)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;%-16d%-8s%-8c%-8.2f\\n&quot;,temp-&gt;num,temp-&gt;name,temp-&gt;sex,temp-&gt;score);</span><br><span class=\"line\">        temp=temp-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"释放内存空间\"><a href=\"#释放内存空间\" class=\"headerlink\" title=\"释放内存空间\"></a>释放内存空间</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//释放空间</span><br><span class=\"line\">void release()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    stu *temp_2;</span><br><span class=\"line\">    while(head!=NULL)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        temp_2=head;</span><br><span class=\"line\">        head=head-&gt;next;</span><br><span class=\"line\">        free(temp_2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"成绩查询\"><a href=\"#成绩查询\" class=\"headerlink\" title=\"成绩查询\"></a>成绩查询</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查找成绩</span><br><span class=\"line\">void find()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要查找的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head-&gt;next;</span><br><span class=\"line\">        while(temp!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;你要查找的学生信息如下：\\n&quot;);</span><br><span class=\"line\">                printf(&quot;学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n&quot;);</span><br><span class=\"line\">                printf(&quot;%-16d%-8s%-8c%-8.2f\\n&quot;,temp-&gt;num,temp-&gt;name,temp-&gt;sex,temp-&gt;score);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"功能选择与程序入口\"><a href=\"#功能选择与程序入口\" class=\"headerlink\" title=\"功能选择与程序入口\"></a>功能选择与程序入口</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//选择功能</span><br><span class=\"line\">int select()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        printf(&quot;请输入要选择的功能：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            case 1: add();break;</span><br><span class=\"line\">            case 2: delete();break;</span><br><span class=\"line\">            case 3: alter();break;</span><br><span class=\"line\">            case 4: find();break;</span><br><span class=\"line\">            case 5: print();break;</span><br><span class=\"line\">            case 6: release();break;</span><br><span class=\"line\">            case 0: return 0;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    select();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>因为学生管理系统类似数据库，需要实现增删改查，来管理其数据，所以该管理系统也应该实现这四个功能，这里使用数组实现，且具体实现如下。  </p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>具体源代码存放在gitee仓库地址如下  </p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_6\" value=\"https://gitee.com/thebyte/work.git\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_6&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n\n<h2 id=\"学生成绩管理系统之目录\"><a href=\"#学生成绩管理系统之目录\" class=\"headerlink\" title=\"学生成绩管理系统之目录\"></a>学生成绩管理系统之目录</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//菜单</span><br><span class=\"line\">void menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">    printf(&quot;1、学生成绩录入\\n&quot;);</span><br><span class=\"line\">    printf(&quot;2、学生成绩删除\\n&quot;);</span><br><span class=\"line\">    printf(&quot;3、学生成绩修改\\n&quot;);</span><br><span class=\"line\">    printf(&quot;4、学生成绩查询\\n&quot;);</span><br><span class=\"line\">    printf(&quot;5、学生成绩打印\\n&quot;);</span><br><span class=\"line\">    printf(&quot;6、排       序\\n&quot;);</span><br><span class=\"line\">    printf(&quot;0、退       出\\n&quot;);</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里使用printf()函数直接输出  </p>\n<h2 id=\"学生成绩管理系统之录入\"><a href=\"#学生成绩管理系统之录入\" class=\"headerlink\" title=\"学生成绩管理系统之录入\"></a>学生成绩管理系统之录入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//录入成绩</span><br><span class=\"line\">void add()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    for (int i = 0; i &lt; max - actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int temp,k=0;//temp用来存放学号</span><br><span class=\"line\">        //当数组有成绩时</span><br><span class=\"line\">        if (actual&gt;0) &#123;</span><br><span class=\"line\">            printf(&quot;请输入第%d位学生的学号为：&quot;, actual+1);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;temp);</span><br><span class=\"line\">            //判断是否有重复学号</span><br><span class=\"line\">            while (temp!=student[k][0]&amp;&amp;k&lt;actual)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                k++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(temp==student[k][0])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //如果在数组中找到相同学号，则跳出本次循环重新输入</span><br><span class=\"line\">                printf(&quot;学号重复请重新输入!\\n&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[actual][0]=temp;</span><br><span class=\"line\">                printf(&quot;请输学号为%d的同学成绩：&quot;, student[actual][0]);</span><br><span class=\"line\">                scanf(&quot;%d&quot;, &amp;student[actual][1]);</span><br><span class=\"line\">                actual++;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //判断是否继续</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;还有继续么(y/n):&quot;);</span><br><span class=\"line\">            char c = getchar();</span><br><span class=\"line\">            if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;输入错误，即将退出录入系统!\\n&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //当数组没有成绩时</span><br><span class=\"line\">            else if (actual==0) &#123;</span><br><span class=\"line\">            printf(&quot;请输入第%d位学生的学号为：&quot;, i + 1);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;temp);</span><br><span class=\"line\">            //查找并判断是否有重复的学号</span><br><span class=\"line\">            while (temp!=student[k][0]&amp;&amp;k&lt;actual)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                k++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(temp==student[k][0])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //如果在数组中找到相同学号，则跳出本次循环重新输入</span><br><span class=\"line\">                printf(&quot;学号重复请重新输入!\\n&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[i][0]=temp;</span><br><span class=\"line\">                printf(&quot;请输学号为%d的同学成绩：&quot;, student[i][0]);</span><br><span class=\"line\">                scanf(&quot;%d&quot;, &amp;student[i][1]);</span><br><span class=\"line\">                actual++;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;还有继续么(y/n):&quot;);</span><br><span class=\"line\">            char c = getchar();</span><br><span class=\"line\">            if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;) &#123; ;</span><br><span class=\"line\">            &#125; else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;) &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                printf(&quot;输入错误，即将退出录入系统!\\n&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里需要定义一个二维数组，将学号放第一列，成绩放低0列，还需用到循环与条件判断来判断是否还要继续输入,并且定义一个存放实际人数变量actual，每次录入加1人  </p>\n<h2 id=\"学习管理系统之修改\"><a href=\"#学习管理系统之修改\" class=\"headerlink\" title=\"学习管理系统之修改\"></a>学习管理系统之修改</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//修改成绩</span><br><span class=\"line\">void alter() &#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要修改成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要修改的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //开始查找与学号配对的成绩位置</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有该学号的成绩</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //有该学号则输入修改后的成绩</span><br><span class=\"line\">            printf(&quot;请输入要修改的成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;student[i][1]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //没有则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否继续修改</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出修改系统!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里使用循环一个一个学号对比，找到后然后将修改成绩覆盖到要修改的成绩位置，没找到则输出查无此人  </p>\n<h2 id=\"学生成绩管理系统之删除\"><a href=\"#学生成绩管理系统之删除\" class=\"headerlink\" title=\"学生成绩管理系统之删除\"></a>学生成绩管理系统之删除</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//删除成绩</span><br><span class=\"line\">void delete()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要删除成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要删除成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //查找学号</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有此学号</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果有，则后面的成绩覆盖要删除的成绩，后面依次往前挪</span><br><span class=\"line\">            for(;i&lt;actual;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[i][0]=student[i+1][0];</span><br><span class=\"line\">                student[i][1]=student[i+1][1];</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            printf(&quot;删除成功!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果没有，则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //删除一个成绩则实际人数减一</span><br><span class=\"line\">        actual--;</span><br><span class=\"line\">        //判断是否继续删除</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>删除类似修改，只是将成绩覆盖改成，下面的成绩全部往上移1格，这里每删除一个人则实际人数actual减1人  </p>\n<h2 id=\"学生成绩管理系统之查找\"><a href=\"#学生成绩管理系统之查找\" class=\"headerlink\" title=\"学生成绩管理系统之查找\"></a>学生成绩管理系统之查找</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void find()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要查找成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要查找的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //查找学号对应的成绩位置</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有与之对应的学号</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //有则输出成绩</span><br><span class=\"line\">            printf(&quot;学号为%d的成绩为：%d\\n&quot;,number,student[i][1]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //没有则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否继续</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出查找系统\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查找也是利用学号，一一对比找学号，然后打印该学号位置的成绩  </p>\n<h2 id=\"学生成绩管理系统之打印\"><a href=\"#学生成绩管理系统之打印\" class=\"headerlink\" title=\"学生成绩管理系统之打印\"></a>学生成绩管理系统之打印</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void print()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //用for循环依次打印出实际人数的学号成绩对应表</span><br><span class=\"line\">    int i;</span><br><span class=\"line\">    printf(&quot;成绩表如下（学号-成绩）：\\n&quot;);</span><br><span class=\"line\">    for(i=0;i&lt;actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;%4d%4d\\n&quot;,student[i][0],student[i][1]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    float average=0.0;</span><br><span class=\"line\">    float sum=0.0;</span><br><span class=\"line\">    for(int j=0;j&lt;actual;j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum=sum+student[j][1];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    average=sum/actual;</span><br><span class=\"line\">    printf(&quot;全班的平均成绩为%2f\\n&quot;,average);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里使用for循环一一换行打印  </p>\n<h2 id=\"学生成绩管理系统之排序\"><a href=\"#学生成绩管理系统之排序\" class=\"headerlink\" title=\"学生成绩管理系统之排序\"></a>学生成绩管理系统之排序</h2><h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void maopao()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int temp=0,num=0;                               //初始化存放成绩和学号的临时变量</span><br><span class=\"line\">    for(int i=0;i&lt;actual-1;i++)                     //遍历实际人数-1次</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(int j=0;j&lt;actual-i-1;j++)               //遍历实际人数减-1-1次；2人一组对比所以比要再减1次</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(student[j][1]&gt;student[j+1][1])       //判断前后两数的大小，如果前面的成绩比后面成绩大</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //交换成绩</span><br><span class=\"line\">                temp=student[j][1];</span><br><span class=\"line\">                student[j][1]= student[j+1][1];</span><br><span class=\"line\">                student[j+1][1]=temp;</span><br><span class=\"line\">                //交换学号</span><br><span class=\"line\">                num=student[j][0];</span><br><span class=\"line\">                student[j][0]=student[j+1][0];</span><br><span class=\"line\">                student[j+1][0]=num;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();                           //打印成绩</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>两两比对，交换位置，然后循环重新再比对，注意点是，外循环与内循环都比实际人数少1位  </p>\n<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//选择排序</span><br><span class=\"line\">void choice()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int a=0,b=0,min;</span><br><span class=\"line\">    for(int i=0;i&lt;actual-1;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        min=i;                          //假设最小值位置</span><br><span class=\"line\">        for(int j=i+1;j&lt;actual;j++)     //开始遍历找所有的值对比</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(student[j][1]&lt;student[min][1])       //如果后面的数小于最小值，则记录最小值的位置</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                min=j;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(min!=i)                      //如果最小值不等于最开始的位置，则</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //交换学号</span><br><span class=\"line\">            b=student[min][0];</span><br><span class=\"line\">            student[min][0]=student[i][0];</span><br><span class=\"line\">            student[i][0]=b;</span><br><span class=\"line\">            //交换成绩</span><br><span class=\"line\">            a=student[min][1];</span><br><span class=\"line\">            student[min][1]=student[i][1];</span><br><span class=\"line\">            student[i][1]=a;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();                              //打印成绩</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>选择排序是将最小的元素挑出来与没排序的第一位交换位置，它会不断的选择剩余元素中的最小者      </p>\n<h3 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//插入排序</span><br><span class=\"line\">void insert()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    int i,j;</span><br><span class=\"line\">    int temp,id;</span><br><span class=\"line\">    for(i=1;i&lt;actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(student[i][1]&lt;student[i-1][1])           //如果后面的数小于前面的数</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            temp=student[i][1];                     //保存后面的数到temp</span><br><span class=\"line\">            id=student[i][0];                       //对应的学号保存到ou</span><br><span class=\"line\">            for(j=i-1;student[j][1]&gt;temp;j--)       //开始将前面到数移位，当前面的数大于temp就开始循环，直到有比temp大的数和最前面则跳出循环</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[j+1][1]=student[j][1];      //将成绩向后移</span><br><span class=\"line\">                student[j+1][0]=student[j][0];      //学号向后移</span><br><span class=\"line\">                if(j&lt;0)                             //当最小到数移动到第一位后</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    break;                          //退出循环</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            student[j+1][1]=temp;                     //将temp的值插入到比temp大的数的前面</span><br><span class=\"line\">            student[j+1][0]=id;                       //将对应的学号插入到对应的位置</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>插入在比自己小的数的前面<br>首先将后面比前面小的数存放在另一个变量，然后前面比这个数大的数依次往后挪，直到比自己小的数，然后放入到其后面。  </p>\n<h3 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//归并排序</span><br><span class=\"line\">//分治  递归</span><br><span class=\"line\">void merge_split()&#123;</span><br><span class=\"line\">    split(student,1,actual);</span><br><span class=\"line\">    print();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//将数组用递归拆成单个元素</span><br><span class=\"line\">void split(int arr[][2],int p,int q)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int mid;</span><br><span class=\"line\">    //确保拆成单个元素</span><br><span class=\"line\">    if(arr== NULL ||p&gt;q||p==q)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mid=(p+q)/2;</span><br><span class=\"line\">    split(arr,p,mid);</span><br><span class=\"line\">    split(arr,mid+1,q);</span><br><span class=\"line\">    merge(arr,p,mid,q);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//排序归并在一起</span><br><span class=\"line\">void merge(int arr[][2],int p,int mid,int q)&#123;</span><br><span class=\"line\">    int i,j,k;</span><br><span class=\"line\">    int L,R;</span><br><span class=\"line\">    //定义临时存放左右数组的数组</span><br><span class=\"line\">    int LL[max][2];</span><br><span class=\"line\">    int RR[max][2];</span><br><span class=\"line\">    //定义左右数组长度</span><br><span class=\"line\">    L=mid-p+1;</span><br><span class=\"line\">    R=q-mid;</span><br><span class=\"line\">    //将左边数组存放到临时数组</span><br><span class=\"line\">    for(i=0;i&lt;L;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        LL[i][1]=arr[p-1+i][1];</span><br><span class=\"line\">        LL[i][0]=arr[p-1+i][0];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //将右边数组存放到临时数组</span><br><span class=\"line\">    for(i=0;i&lt;R;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        RR[i][1]=arr[mid+i][1];</span><br><span class=\"line\">        RR[i][0]=arr[mid+i][0];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    i=0;</span><br><span class=\"line\">    j=0;</span><br><span class=\"line\">    for(k=p;k&lt;=q;k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //当LL与RR没有元素时，放入原来数组</span><br><span class=\"line\">        if(i==L)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            arr[k-1][1]=RR[j][1];</span><br><span class=\"line\">            arr[k-1][0]=RR[j][0];</span><br><span class=\"line\">            j++;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if(j==R)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            arr[k-1][1]=LL[i][1];</span><br><span class=\"line\">            arr[k-1][0]=LL[i][0];</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //当LL与RR还有元素时，放入原来数组</span><br><span class=\"line\">            if(LL[i][1]&lt;RR[j][1])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                arr[k-1][1]=LL[i][1];</span><br><span class=\"line\">                arr[k-1][0]=LL[i][0];</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                arr[k-1][1]=RR[j][1];</span><br><span class=\"line\">                arr[k-1][0]=RR[j][0];</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>先用递归拆分数组，然后用循环归并并排序数组<br>递归是不断把数组拆成左右两部分，其中写的if判断是用来限制，分成一个元素后不可再分。<br>归并是先记录左右素组的大小，然后分别放到另一个数组中，然后归并到原来的数组，分别对左右数组的第一个元素比较<br>当剩下元素没用完时会添加再数组后面</p>\n<h2 id=\"功能选择\"><a href=\"#功能选择\" class=\"headerlink\" title=\"功能选择\"></a>功能选择</h2><h3 id=\"功能选择-1\"><a href=\"#功能选择-1\" class=\"headerlink\" title=\"功能选择\"></a>功能选择</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int select()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        printf(&quot;请输入要选择的功能：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            case 1: add();break;</span><br><span class=\"line\">            case 2: delete();break;</span><br><span class=\"line\">            case 3: alter();break;</span><br><span class=\"line\">            case 4: find();break;</span><br><span class=\"line\">            case 5: print();break;</span><br><span class=\"line\">            case 6: short_1();break;</span><br><span class=\"line\">            case 0: return 0;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里将多个函数封装到了功能选择函数中<br>用switch来实现多种功能的选择  </p>\n<h3 id=\"排序选择\"><a href=\"#排序选择\" class=\"headerlink\" title=\"排序选择\"></a>排序选择</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//排序算法目录</span><br><span class=\"line\">int short_1()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">        printf(&quot;1、冒泡排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;2、选择排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;3、插入排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;4、归并排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">        printf(&quot;请输入要使用的排序方法：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i) &#123;</span><br><span class=\"line\">            case 1: maopao();break;</span><br><span class=\"line\">            case 2: choice();break;</span><br><span class=\"line\">            case 3: insert();break;</span><br><span class=\"line\">            case 4: merge_split();break;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>与功能选择类似  </p>\n<h2 id=\"函数的入口main\"><a href=\"#函数的入口main\" class=\"headerlink\" title=\"函数的入口main\"></a>函数的入口main</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    select();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所有内容都是在main函数中使用的，所以要在main中导入之前的函数</p>\n<h2 id=\"源代码-1\"><a href=\"#源代码-1\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>具体源代码存放在gitee仓库地址如下  </p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_7\" value=\"https://gitee.com/thebyte/work.git\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_7&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>目录就不用多说，用以前的打印就好了  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">    printf(&quot;1、学生成绩录入\\n&quot;);</span><br><span class=\"line\">    printf(&quot;2、学生成绩删除\\n&quot;);</span><br><span class=\"line\">    printf(&quot;3、学生成绩修改\\n&quot;);</span><br><span class=\"line\">    printf(&quot;4、学生成绩查询\\n&quot;);</span><br><span class=\"line\">    printf(&quot;5、学生成绩打印\\n&quot;);</span><br><span class=\"line\">    printf(&quot;6、释 放 空 间\\n&quot;);</span><br><span class=\"line\">    printf(&quot;0、退       出\\n&quot;);</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"链表录入\"><a href=\"#链表录入\" class=\"headerlink\" title=\"链表录入\"></a>链表录入</h2><p>先要定义结构体  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef struct student</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //信息域</span><br><span class=\"line\">    int num;</span><br><span class=\"line\">    char name[10];</span><br><span class=\"line\">    char sex;</span><br><span class=\"line\">    float score;</span><br><span class=\"line\">    //指针域</span><br><span class=\"line\">    struct student *next;</span><br><span class=\"line\">&#125;stu;</span><br></pre></td></tr></table></figure>\n<p>然后需要定义头指针  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stu *head=NULL;</span><br></pre></td></tr></table></figure>\n<p>然后开始判断链表是否为空  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void add()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //定义选择变量</span><br><span class=\"line\">    int choose;</span><br><span class=\"line\">    //定义尾指针</span><br><span class=\"line\">    stu *last=NULL;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //当链表为空时，head当next成员指向last，last为新节点，用来存放数据，last当next成员指向空</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //给第一个节点分配空间，当链表只有一个节点时，这个节点就是这个链表当last</span><br><span class=\"line\">            last=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            last-&gt;next=NULL;</span><br><span class=\"line\">            head=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            head-&gt;next=last;</span><br><span class=\"line\">            //录入信息到信息域</span><br><span class=\"line\">            printf(&quot;请输入学号：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;,&amp;last-&gt;num);</span><br><span class=\"line\">            printf(&quot;请输入姓名：&quot;);</span><br><span class=\"line\">            scanf(&quot;%s&quot;,last-&gt;name);</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;请输入性别（男:M,女:F)：&quot;);</span><br><span class=\"line\">            scanf(&quot;%c&quot;,&amp;last-&gt;sex);</span><br><span class=\"line\">            printf(&quot;请输入成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%f&quot;,&amp;last-&gt;score);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //当链表不为空时，找到最后一个节点，last的next成员分配空间，然后最新的将last这个指针指向刚刚建立的空间为最新的last，然后最新的last的next成员指向null</span><br><span class=\"line\">        else if(head!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //查找链表的最后一个节点</span><br><span class=\"line\">            last=head-&gt;next;</span><br><span class=\"line\">            while(last-&gt;next!=NULL)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                last=last-&gt;next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //分配新节点空间</span><br><span class=\"line\">            last-&gt;next=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            //标注新的last</span><br><span class=\"line\">            last=last-&gt;next;</span><br><span class=\"line\">            last-&gt;next=NULL;</span><br><span class=\"line\">            //录入信息到信息域</span><br><span class=\"line\">            printf(&quot;请输入学号：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;,&amp;last-&gt;num);</span><br><span class=\"line\">            printf(&quot;请输入姓名：&quot;);</span><br><span class=\"line\">            scanf(&quot;%s&quot;,last-&gt;name);</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;请输入性别（男:M,女:F)：&quot;);</span><br><span class=\"line\">            scanf(&quot;%c&quot;,&amp;last-&gt;sex);</span><br><span class=\"line\">            printf(&quot;请输入成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%f&quot;,&amp;last-&gt;score);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中也需要定义last尾指针，这个指针在录入时代表的意思是存放最后一个节点的地址<br>其中malloc()内存分配函数需要强行改变类型切需要引用头文件  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdlib.h&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除成绩\"><a href=\"#删除成绩\" class=\"headerlink\" title=\"删除成绩\"></a>删除成绩</h2><p>删除后面的都依照数组实现的学生管理系统逻辑推理写出，就不过多解释，有不懂的可以在联系我</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void delete()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要删除成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head;</span><br><span class=\"line\">        while(temp-&gt;next!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;next-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                stu *del=temp-&gt;next;</span><br><span class=\"line\">                temp-&gt;next=temp-&gt;next-&gt;next;</span><br><span class=\"line\">                free(del);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改成绩\"><a href=\"#修改成绩\" class=\"headerlink\" title=\"修改成绩\"></a>修改成绩</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//修改成绩</span><br><span class=\"line\">void alter()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要修改成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head-&gt;next;</span><br><span class=\"line\">        while(temp!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;请输入要修改的成绩：&quot;);</span><br><span class=\"line\">                scanf(&quot;%f&quot;,&amp;temp-&gt;score);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"打印链表\"><a href=\"#打印链表\" class=\"headerlink\" title=\"打印链表\"></a>打印链表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//链表当输出</span><br><span class=\"line\">void print()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    stu *temp;</span><br><span class=\"line\">    temp=head-&gt;next;</span><br><span class=\"line\">    printf(&quot;学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n&quot;);</span><br><span class=\"line\">    while(temp!=NULL)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;%-16d%-8s%-8c%-8.2f\\n&quot;,temp-&gt;num,temp-&gt;name,temp-&gt;sex,temp-&gt;score);</span><br><span class=\"line\">        temp=temp-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"释放内存空间\"><a href=\"#释放内存空间\" class=\"headerlink\" title=\"释放内存空间\"></a>释放内存空间</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//释放空间</span><br><span class=\"line\">void release()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    stu *temp_2;</span><br><span class=\"line\">    while(head!=NULL)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        temp_2=head;</span><br><span class=\"line\">        head=head-&gt;next;</span><br><span class=\"line\">        free(temp_2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"成绩查询\"><a href=\"#成绩查询\" class=\"headerlink\" title=\"成绩查询\"></a>成绩查询</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查找成绩</span><br><span class=\"line\">void find()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要查找的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head-&gt;next;</span><br><span class=\"line\">        while(temp!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;你要查找的学生信息如下：\\n&quot;);</span><br><span class=\"line\">                printf(&quot;学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n&quot;);</span><br><span class=\"line\">                printf(&quot;%-16d%-8s%-8c%-8.2f\\n&quot;,temp-&gt;num,temp-&gt;name,temp-&gt;sex,temp-&gt;score);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"功能选择与程序入口\"><a href=\"#功能选择与程序入口\" class=\"headerlink\" title=\"功能选择与程序入口\"></a>功能选择与程序入口</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//选择功能</span><br><span class=\"line\">int select()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        printf(&quot;请输入要选择的功能：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            case 1: add();break;</span><br><span class=\"line\">            case 2: delete();break;</span><br><span class=\"line\">            case 3: alter();break;</span><br><span class=\"line\">            case 4: find();break;</span><br><span class=\"line\">            case 5: print();break;</span><br><span class=\"line\">            case 6: release();break;</span><br><span class=\"line\">            case 0: return 0;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    select();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"Post":[{"title":"Linux常用命令","date":"2022-07-06T12:22:22.000Z","_content":"\n## Linux命令格式\n命令 [选项] [参数]\n\n## 系统管理与维护篇\n1.pwd命令  \n用于显示当前目录  \n\n2.cd命令  \n切换当前目录  \n```\n~或空格    切换到当前登陆用户的主目录\n~用户名    切换到指定用户的主目录\n-切换到之前的工作目录\n.代表当前目录\n..代表上一级目录\n```\n\n3.ls命令  \n用于列出当前目录或指定目录中的内容  \n\n4.date和cal命令  \n用于显示当前系统时间和日期  \n\n5.su和passwd命令    \nsu用户切换用户  \npasswd用于修改用户密码  \n\n6.man命令  \n用于显示命令帮助手册  \n\n7.who命令和w命令  \nwho用于查看当前系统的用户有哪些  \nw命令与who类似，但是主要用于显示登陆到系统的用户情况  \n\n8.uname命令  \n用于显示操作系统信息  \n\n9.last命令  \n用于查看当前和过去登陆系统用户的相关信息  \n\n10.uptime和free命令  \nuptime用于显示系统已经运行的时间、当前用户登陆的用户数量和系统评价负载。  \nfree用于显示系统内存的状态，包括系统的物理内存、虚拟内存（swap）和系统缓存的使用情况  \n\n11.dmesg命令  \n用于显示开机信息，常用语查看系统的硬件信息。  \n\n12.ps和top命令  \nps用于监控进程  \ntop用于动态地察看进程的运行状态。  \n\n## 文件管理篇\n1.mkdir和touch命令  \n分别用于新建文件夹和新建文件  \n\n2.rm和rmdir命令  \nrm用于永久删除文件或目录  \nrmdir用户删除空目录  \n\n3.cat命令  \n用来查看文件中的内容  \n\n4.grep命令  \n能够在一个或多个文件中搜索某一特定的字符模式，也称为正则表达式  \n\n5.more命令  \n可以使文件中的内容分页显示  \n\n6.file命令  \n可以通过查看文件的头部信息来识别文件的类型，同时还可以用来辨别文件的编码格式  \n\n7.cp命令  \n用来复制文件或目录  \n \n8.mv命令  \n用于在不同目录之间移动文件或目录  \n \n9.find命令  \n用来查找文件和目录  \n\n## 压缩与解压缩篇\n\n1.zip/unzip  \n\n2.gzip/gunzip  \n\n3.bzip2/bunzip2  \n\n4.tar  \n\n## 磁盘管理与维护命令篇\n\n1.df命令  \n用于显示Linux系统中各文件系统的硬盘使用情况  \n\n2.du命令  \n用于显示某个特定目录的磁盘使用情况，同时还可以片段系统上某个目录下是否有超大文件。  \n\n3.fsck命令  \n用于检查文件系统并尝试修复出现的错误  \n\n","source":"_posts/2022-07-06_Linux常用命令.md","raw":"---\ntitle: Linux常用命令\ndate: 2022-07-06 20:22:22\ntags: [Linux]\ncategories: [设计开发, Linux]\n---\n\n## Linux命令格式\n命令 [选项] [参数]\n\n## 系统管理与维护篇\n1.pwd命令  \n用于显示当前目录  \n\n2.cd命令  \n切换当前目录  \n```\n~或空格    切换到当前登陆用户的主目录\n~用户名    切换到指定用户的主目录\n-切换到之前的工作目录\n.代表当前目录\n..代表上一级目录\n```\n\n3.ls命令  \n用于列出当前目录或指定目录中的内容  \n\n4.date和cal命令  \n用于显示当前系统时间和日期  \n\n5.su和passwd命令    \nsu用户切换用户  \npasswd用于修改用户密码  \n\n6.man命令  \n用于显示命令帮助手册  \n\n7.who命令和w命令  \nwho用于查看当前系统的用户有哪些  \nw命令与who类似，但是主要用于显示登陆到系统的用户情况  \n\n8.uname命令  \n用于显示操作系统信息  \n\n9.last命令  \n用于查看当前和过去登陆系统用户的相关信息  \n\n10.uptime和free命令  \nuptime用于显示系统已经运行的时间、当前用户登陆的用户数量和系统评价负载。  \nfree用于显示系统内存的状态，包括系统的物理内存、虚拟内存（swap）和系统缓存的使用情况  \n\n11.dmesg命令  \n用于显示开机信息，常用语查看系统的硬件信息。  \n\n12.ps和top命令  \nps用于监控进程  \ntop用于动态地察看进程的运行状态。  \n\n## 文件管理篇\n1.mkdir和touch命令  \n分别用于新建文件夹和新建文件  \n\n2.rm和rmdir命令  \nrm用于永久删除文件或目录  \nrmdir用户删除空目录  \n\n3.cat命令  \n用来查看文件中的内容  \n\n4.grep命令  \n能够在一个或多个文件中搜索某一特定的字符模式，也称为正则表达式  \n\n5.more命令  \n可以使文件中的内容分页显示  \n\n6.file命令  \n可以通过查看文件的头部信息来识别文件的类型，同时还可以用来辨别文件的编码格式  \n\n7.cp命令  \n用来复制文件或目录  \n \n8.mv命令  \n用于在不同目录之间移动文件或目录  \n \n9.find命令  \n用来查找文件和目录  \n\n## 压缩与解压缩篇\n\n1.zip/unzip  \n\n2.gzip/gunzip  \n\n3.bzip2/bunzip2  \n\n4.tar  \n\n## 磁盘管理与维护命令篇\n\n1.df命令  \n用于显示Linux系统中各文件系统的硬盘使用情况  \n\n2.du命令  \n用于显示某个特定目录的磁盘使用情况，同时还可以片段系统上某个目录下是否有超大文件。  \n\n3.fsck命令  \n用于检查文件系统并尝试修复出现的错误  \n\n","slug":"2022-07-06_Linux常用命令","published":1,"updated":"2022-11-02T02:48:51.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8d0001u19k0c816joo","content":"<h2 id=\"Linux命令格式\"><a href=\"#Linux命令格式\" class=\"headerlink\" title=\"Linux命令格式\"></a>Linux命令格式</h2><p>命令 [选项] [参数]</p>\n<h2 id=\"系统管理与维护篇\"><a href=\"#系统管理与维护篇\" class=\"headerlink\" title=\"系统管理与维护篇\"></a>系统管理与维护篇</h2><p>1.pwd命令<br>用于显示当前目录  </p>\n<p>2.cd命令<br>切换当前目录  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~或空格    切换到当前登陆用户的主目录</span><br><span class=\"line\">~用户名    切换到指定用户的主目录</span><br><span class=\"line\">-切换到之前的工作目录</span><br><span class=\"line\">.代表当前目录</span><br><span class=\"line\">..代表上一级目录</span><br></pre></td></tr></table></figure>\n\n<p>3.ls命令<br>用于列出当前目录或指定目录中的内容  </p>\n<p>4.date和cal命令<br>用于显示当前系统时间和日期  </p>\n<p>5.su和passwd命令<br>su用户切换用户<br>passwd用于修改用户密码  </p>\n<p>6.man命令<br>用于显示命令帮助手册  </p>\n<p>7.who命令和w命令<br>who用于查看当前系统的用户有哪些<br>w命令与who类似，但是主要用于显示登陆到系统的用户情况  </p>\n<p>8.uname命令<br>用于显示操作系统信息  </p>\n<p>9.last命令<br>用于查看当前和过去登陆系统用户的相关信息  </p>\n<p>10.uptime和free命令<br>uptime用于显示系统已经运行的时间、当前用户登陆的用户数量和系统评价负载。<br>free用于显示系统内存的状态，包括系统的物理内存、虚拟内存（swap）和系统缓存的使用情况  </p>\n<p>11.dmesg命令<br>用于显示开机信息，常用语查看系统的硬件信息。  </p>\n<p>12.ps和top命令<br>ps用于监控进程<br>top用于动态地察看进程的运行状态。  </p>\n<h2 id=\"文件管理篇\"><a href=\"#文件管理篇\" class=\"headerlink\" title=\"文件管理篇\"></a>文件管理篇</h2><p>1.mkdir和touch命令<br>分别用于新建文件夹和新建文件  </p>\n<p>2.rm和rmdir命令<br>rm用于永久删除文件或目录<br>rmdir用户删除空目录  </p>\n<p>3.cat命令<br>用来查看文件中的内容  </p>\n<p>4.grep命令<br>能够在一个或多个文件中搜索某一特定的字符模式，也称为正则表达式  </p>\n<p>5.more命令<br>可以使文件中的内容分页显示  </p>\n<p>6.file命令<br>可以通过查看文件的头部信息来识别文件的类型，同时还可以用来辨别文件的编码格式  </p>\n<p>7.cp命令<br>用来复制文件或目录  </p>\n<p>8.mv命令<br>用于在不同目录之间移动文件或目录  </p>\n<p>9.find命令<br>用来查找文件和目录  </p>\n<h2 id=\"压缩与解压缩篇\"><a href=\"#压缩与解压缩篇\" class=\"headerlink\" title=\"压缩与解压缩篇\"></a>压缩与解压缩篇</h2><p>1.zip/unzip  </p>\n<p>2.gzip/gunzip  </p>\n<p>3.bzip2/bunzip2  </p>\n<p>4.tar  </p>\n<h2 id=\"磁盘管理与维护命令篇\"><a href=\"#磁盘管理与维护命令篇\" class=\"headerlink\" title=\"磁盘管理与维护命令篇\"></a>磁盘管理与维护命令篇</h2><p>1.df命令<br>用于显示Linux系统中各文件系统的硬盘使用情况  </p>\n<p>2.du命令<br>用于显示某个特定目录的磁盘使用情况，同时还可以片段系统上某个目录下是否有超大文件。  </p>\n<p>3.fsck命令<br>用于检查文件系统并尝试修复出现的错误  </p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"Linux命令格式\"><a href=\"#Linux命令格式\" class=\"headerlink\" title=\"Linux命令格式\"></a>Linux命令格式</h2><p>命令 [选项] [参数]</p>\n<h2 id=\"系统管理与维护篇\"><a href=\"#系统管理与维护篇\" class=\"headerlink\" title=\"系统管理与维护篇\"></a>系统管理与维护篇</h2><p>1.pwd命令<br>用于显示当前目录  </p>\n<p>2.cd命令<br>切换当前目录  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~或空格    切换到当前登陆用户的主目录</span><br><span class=\"line\">~用户名    切换到指定用户的主目录</span><br><span class=\"line\">-切换到之前的工作目录</span><br><span class=\"line\">.代表当前目录</span><br><span class=\"line\">..代表上一级目录</span><br></pre></td></tr></table></figure>\n\n<p>3.ls命令<br>用于列出当前目录或指定目录中的内容  </p>\n<p>4.date和cal命令<br>用于显示当前系统时间和日期  </p>\n<p>5.su和passwd命令<br>su用户切换用户<br>passwd用于修改用户密码  </p>\n<p>6.man命令<br>用于显示命令帮助手册  </p>\n<p>7.who命令和w命令<br>who用于查看当前系统的用户有哪些<br>w命令与who类似，但是主要用于显示登陆到系统的用户情况  </p>\n<p>8.uname命令<br>用于显示操作系统信息  </p>\n<p>9.last命令<br>用于查看当前和过去登陆系统用户的相关信息  </p>\n<p>10.uptime和free命令<br>uptime用于显示系统已经运行的时间、当前用户登陆的用户数量和系统评价负载。<br>free用于显示系统内存的状态，包括系统的物理内存、虚拟内存（swap）和系统缓存的使用情况  </p>\n<p>11.dmesg命令<br>用于显示开机信息，常用语查看系统的硬件信息。  </p>\n<p>12.ps和top命令<br>ps用于监控进程<br>top用于动态地察看进程的运行状态。  </p>\n<h2 id=\"文件管理篇\"><a href=\"#文件管理篇\" class=\"headerlink\" title=\"文件管理篇\"></a>文件管理篇</h2><p>1.mkdir和touch命令<br>分别用于新建文件夹和新建文件  </p>\n<p>2.rm和rmdir命令<br>rm用于永久删除文件或目录<br>rmdir用户删除空目录  </p>\n<p>3.cat命令<br>用来查看文件中的内容  </p>\n<p>4.grep命令<br>能够在一个或多个文件中搜索某一特定的字符模式，也称为正则表达式  </p>\n<p>5.more命令<br>可以使文件中的内容分页显示  </p>\n<p>6.file命令<br>可以通过查看文件的头部信息来识别文件的类型，同时还可以用来辨别文件的编码格式  </p>\n<p>7.cp命令<br>用来复制文件或目录  </p>\n<p>8.mv命令<br>用于在不同目录之间移动文件或目录  </p>\n<p>9.find命令<br>用来查找文件和目录  </p>\n<h2 id=\"压缩与解压缩篇\"><a href=\"#压缩与解压缩篇\" class=\"headerlink\" title=\"压缩与解压缩篇\"></a>压缩与解压缩篇</h2><p>1.zip/unzip  </p>\n<p>2.gzip/gunzip  </p>\n<p>3.bzip2/bunzip2  </p>\n<p>4.tar  </p>\n<h2 id=\"磁盘管理与维护命令篇\"><a href=\"#磁盘管理与维护命令篇\" class=\"headerlink\" title=\"磁盘管理与维护命令篇\"></a>磁盘管理与维护命令篇</h2><p>1.df命令<br>用于显示Linux系统中各文件系统的硬盘使用情况  </p>\n<p>2.du命令<br>用于显示某个特定目录的磁盘使用情况，同时还可以片段系统上某个目录下是否有超大文件。  </p>\n<p>3.fsck命令<br>用于检查文件系统并尝试修复出现的错误  </p>\n"},{"title":"Hexo-Linux搭建博客","date":"2022-09-15T13:07:32.000Z","_content":"\n## Hexo简介\n\nHexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Gitee上，是搭建博客的首选框架。大家可以进入hexo官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看  \n\n## 安装Git\n\nGit是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理  \n\n```\napt-get install git -y\n```\n\n## 安装nodejs\n\nHexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具\n\n```\napt-get install nodejs npm -y\n```\n安装完后，输入命令\n\n```\nnode -v\n```\n```\nnpm -v\n```\n检查是否安装成功\n\n更换npm源为淘宝源\n\n```\nnpm config set registry https://registry.npm.taobao.org  \n```\n## 安装hexo\n\n前面git和nodejs安装好后，就可以安装hexo了，先创建一个文件夹filename，然后cd到这个文件夹下\n\n输入命令\n\n```\nnpm install -g hexo-cli\n```\n输入命令\n\n```\nhexo -v\n```\n查看版本信息\n\n\n初始化hexo\n\n```\nhexo init filename(文件名随意定义)\n```\n```\ncd filename //进入这个文件夹\n```\n```\nnpm install\n```\ncd <folder> #说明：将操作位置转移到将要存放项目的文件夹目录（便于区分，我的项目文件夹名为hexo,~/root/hexo以下将使用这个文件夹）\nhexo init #说明：自动在文件夹（hexo1）中创建项目所需的文件\nnpm install #说明：安装依赖包\nhexo generate #说明：构建，会在hexo1中创建public文件夹\n执行完以上命令后，会多出以下文件和文件夹\n例如\n\n\n新建完成后，指定文件夹目录下有：\n\n_config.yml：站点的配置文件，需要备份\nthemes：主题文件夹，需要备份\nsource：博客文章的 .md 文件，需要备份\nscaffolds：文章的模板，需要备份\npackage.json：安装包的名称，需要备份\n.gitignore：限定在 push 时哪些文件可以忽略，需要备份\n.git：主题和站点都有，标志这是一个 git 项目，不需要备份\nnode_modules：是安装包的目录，在执行 npm install 的时候会重新生成，不需要备份\npublic：是 hexo g 生成的静态网页，不需要备份\n.deploy_git：同上，hexo g 也会生成，不需要备份\ndb.json：文件，不需要备份\n\n输入命令\n\n```\nhexo g\n```\n\n输入命令\n\n```\nhexo s\n```\n\n打开hexo的服务\n\n在浏览器输入\n\nhttp://localhost:4000\n\n就可以看到你生成的博客\n\n\n使用ctrl+c停止服务\n\nHexo+Github\n\nGitHub创建个人仓库\n\n注册登录github官网，点击右上角加号，点击New repository，新建仓库\n\n\n创建一个和用户名相同的仓库,即http://xxxx.github.io，其中xxx是github的用户名\n\n\n点击create repository\n\nGit初始化设置\n\n输入命令\n\n```\ngit config --global user.name \"yourname\"   \ngit config --global user.email \"youremail\"  \n(yourname是github用户名，youremail是注册github的邮箱)  \ngit config user.name\ngit config user.email\n```\n检查是否正确，输入命令\n\n生成SSH添加到GitHub\n\n输入命令，创建SSH,一路回车\n\nwp-block-code\nssh-keygen -t rsa -C \"youremail\"\n\n查看SSH KEY，输入命令\n\n```\ncat ~/.ssh/id_rsa.pub\n```\n复制id_rsa.pub里面的全部内容\n\n\n在github的setting中，找到SSH keys的设置选项，点击New SSH key，粘贴id_rsa.pub里面的全部内容\n\n\n输入命令\n\n```\nssh -T git@github.com\n```\n查看是否连接成功\n\n\n打开站点配置文件 _config.yml，修改添加以下内容\n\n```\ndeploy:\n  type: git\n  repo:\ngit@github.com:yourgithubname/yourgithubname.github.io.git  \n  branch: master\n```\n安装deploy-git ，也就是部署的命令,这样才能用命令部署到github\n\n```\nnpm install hexo-deployer-git --save\n```\n输入命令\n```\nhexo clean 第一次安装不用清缓存\n\nhexo clean &&　hexo g -d 　缩写\n\nhexo g = hexo generate 生成静态文件\n\nhexo generate -deploy 生成静态文件后立即部署网站  \n```\n打开下面的网址\n\nhttp://yourname.github.io\n\n就可看到和\n\nhttp://localhost:4000\n\n一样的了！\n\n关联Git仓库\n\n```\ngit clone https://github.com/你的用户名/你的用户名.github.io.git  \n```\n执行之后会在当前目录生成'你的用户名.github.io'的文件夹，这是关联github仓库的文件夹，需要上传的文件都会移动到这里\n\n更多精彩内容请点击hexo官网\n\n(附上我的博客链接)\n\nHexo+Gitee\n\nGitee创建个人仓库\n\n打开码云官网，注册登陆，创建项目，点击右上角加号，新建仓库\n\n\n\n开启 Gitee Pages\n\n\n\n点击启动\n\n\n启动后，点击蓝色链接打开网址\n\n初始化Git设置\n\n输入命令\n\n```\ngit config --global user.name \"这里输入你的Gitee注册名\"// 按回车  \ngit config --global user.email \"这里输你的Gitee邮箱\"  \n```\n生成SSH密钥文件\n\n```\nssh-keygen -t rsa -C \"你的Gitee注册邮箱\"  \n// 可不输入，三个回车\n```\n复制粘贴到码云\n\n\n\n配置 _config.yml\n\n\n点击复制克隆/下载里面的https的内容\n\n修改添加_config.yml以下内容\n\n```\nurl: Gitee Pages 服务，网站地址： https://空间名.gitee.io/仓库名(粘贴)  \nroot: /仓库名/\nwp-block-code\ndeploy:\n  type: git\n  repo: https://gitee.com/空间名/仓库名(粘贴)  \n  branch: master\n```\n基础配置可以参考官方文档的配置说明\n\n```\nhexo clean &&　hexo g -d 　缩写 清缓存\n\nhexo g = hexo generate 生成静态文件\n\nhexo generate -deploy 生成静态文件后立即部署网站自动上传到gitee  \n打开Gitee Pages 服务 ，每次上传或改动，都要点击“更新”打开网址访问  \n```\n","source":"_posts/2022-09-15_Hexo-Linux搭建博客.md","raw":"---\ntitle: Hexo-Linux搭建博客\ndate: 2022-09-15 21:07:32\ncategories: [设计开发, 网站搭建]\n---\n\n## Hexo简介\n\nHexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Gitee上，是搭建博客的首选框架。大家可以进入hexo官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看  \n\n## 安装Git\n\nGit是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理  \n\n```\napt-get install git -y\n```\n\n## 安装nodejs\n\nHexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具\n\n```\napt-get install nodejs npm -y\n```\n安装完后，输入命令\n\n```\nnode -v\n```\n```\nnpm -v\n```\n检查是否安装成功\n\n更换npm源为淘宝源\n\n```\nnpm config set registry https://registry.npm.taobao.org  \n```\n## 安装hexo\n\n前面git和nodejs安装好后，就可以安装hexo了，先创建一个文件夹filename，然后cd到这个文件夹下\n\n输入命令\n\n```\nnpm install -g hexo-cli\n```\n输入命令\n\n```\nhexo -v\n```\n查看版本信息\n\n\n初始化hexo\n\n```\nhexo init filename(文件名随意定义)\n```\n```\ncd filename //进入这个文件夹\n```\n```\nnpm install\n```\ncd <folder> #说明：将操作位置转移到将要存放项目的文件夹目录（便于区分，我的项目文件夹名为hexo,~/root/hexo以下将使用这个文件夹）\nhexo init #说明：自动在文件夹（hexo1）中创建项目所需的文件\nnpm install #说明：安装依赖包\nhexo generate #说明：构建，会在hexo1中创建public文件夹\n执行完以上命令后，会多出以下文件和文件夹\n例如\n\n\n新建完成后，指定文件夹目录下有：\n\n_config.yml：站点的配置文件，需要备份\nthemes：主题文件夹，需要备份\nsource：博客文章的 .md 文件，需要备份\nscaffolds：文章的模板，需要备份\npackage.json：安装包的名称，需要备份\n.gitignore：限定在 push 时哪些文件可以忽略，需要备份\n.git：主题和站点都有，标志这是一个 git 项目，不需要备份\nnode_modules：是安装包的目录，在执行 npm install 的时候会重新生成，不需要备份\npublic：是 hexo g 生成的静态网页，不需要备份\n.deploy_git：同上，hexo g 也会生成，不需要备份\ndb.json：文件，不需要备份\n\n输入命令\n\n```\nhexo g\n```\n\n输入命令\n\n```\nhexo s\n```\n\n打开hexo的服务\n\n在浏览器输入\n\nhttp://localhost:4000\n\n就可以看到你生成的博客\n\n\n使用ctrl+c停止服务\n\nHexo+Github\n\nGitHub创建个人仓库\n\n注册登录github官网，点击右上角加号，点击New repository，新建仓库\n\n\n创建一个和用户名相同的仓库,即http://xxxx.github.io，其中xxx是github的用户名\n\n\n点击create repository\n\nGit初始化设置\n\n输入命令\n\n```\ngit config --global user.name \"yourname\"   \ngit config --global user.email \"youremail\"  \n(yourname是github用户名，youremail是注册github的邮箱)  \ngit config user.name\ngit config user.email\n```\n检查是否正确，输入命令\n\n生成SSH添加到GitHub\n\n输入命令，创建SSH,一路回车\n\nwp-block-code\nssh-keygen -t rsa -C \"youremail\"\n\n查看SSH KEY，输入命令\n\n```\ncat ~/.ssh/id_rsa.pub\n```\n复制id_rsa.pub里面的全部内容\n\n\n在github的setting中，找到SSH keys的设置选项，点击New SSH key，粘贴id_rsa.pub里面的全部内容\n\n\n输入命令\n\n```\nssh -T git@github.com\n```\n查看是否连接成功\n\n\n打开站点配置文件 _config.yml，修改添加以下内容\n\n```\ndeploy:\n  type: git\n  repo:\ngit@github.com:yourgithubname/yourgithubname.github.io.git  \n  branch: master\n```\n安装deploy-git ，也就是部署的命令,这样才能用命令部署到github\n\n```\nnpm install hexo-deployer-git --save\n```\n输入命令\n```\nhexo clean 第一次安装不用清缓存\n\nhexo clean &&　hexo g -d 　缩写\n\nhexo g = hexo generate 生成静态文件\n\nhexo generate -deploy 生成静态文件后立即部署网站  \n```\n打开下面的网址\n\nhttp://yourname.github.io\n\n就可看到和\n\nhttp://localhost:4000\n\n一样的了！\n\n关联Git仓库\n\n```\ngit clone https://github.com/你的用户名/你的用户名.github.io.git  \n```\n执行之后会在当前目录生成'你的用户名.github.io'的文件夹，这是关联github仓库的文件夹，需要上传的文件都会移动到这里\n\n更多精彩内容请点击hexo官网\n\n(附上我的博客链接)\n\nHexo+Gitee\n\nGitee创建个人仓库\n\n打开码云官网，注册登陆，创建项目，点击右上角加号，新建仓库\n\n\n\n开启 Gitee Pages\n\n\n\n点击启动\n\n\n启动后，点击蓝色链接打开网址\n\n初始化Git设置\n\n输入命令\n\n```\ngit config --global user.name \"这里输入你的Gitee注册名\"// 按回车  \ngit config --global user.email \"这里输你的Gitee邮箱\"  \n```\n生成SSH密钥文件\n\n```\nssh-keygen -t rsa -C \"你的Gitee注册邮箱\"  \n// 可不输入，三个回车\n```\n复制粘贴到码云\n\n\n\n配置 _config.yml\n\n\n点击复制克隆/下载里面的https的内容\n\n修改添加_config.yml以下内容\n\n```\nurl: Gitee Pages 服务，网站地址： https://空间名.gitee.io/仓库名(粘贴)  \nroot: /仓库名/\nwp-block-code\ndeploy:\n  type: git\n  repo: https://gitee.com/空间名/仓库名(粘贴)  \n  branch: master\n```\n基础配置可以参考官方文档的配置说明\n\n```\nhexo clean &&　hexo g -d 　缩写 清缓存\n\nhexo g = hexo generate 生成静态文件\n\nhexo generate -deploy 生成静态文件后立即部署网站自动上传到gitee  \n打开Gitee Pages 服务 ，每次上传或改动，都要点击“更新”打开网址访问  \n```\n","slug":"2022-09-15_Hexo-Linux搭建博客","published":1,"updated":"2022-11-02T02:48:39.876Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8h0003u19ka7daf7z9","content":"<h2 id=\"Hexo简介\"><a href=\"#Hexo简介\" class=\"headerlink\" title=\"Hexo简介\"></a>Hexo简介</h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Gitee上，是搭建博客的首选框架。大家可以进入hexo官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看  </p>\n<h2 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h2><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install git -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装nodejs\"><a href=\"#安装nodejs\" class=\"headerlink\" title=\"安装nodejs\"></a>安装nodejs</h2><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install nodejs npm -y</span><br></pre></td></tr></table></figure>\n<p>安装完后，输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<p>检查是否安装成功</p>\n<p>更换npm源为淘宝源</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set registry https://registry.npm.taobao.org  </span><br></pre></td></tr></table></figure>\n<h2 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h2><p>前面git和nodejs安装好后，就可以安装hexo了，先创建一个文件夹filename，然后cd到这个文件夹下</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<p>查看版本信息</p>\n<p>初始化hexo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init filename(文件名随意定义)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd filename //进入这个文件夹</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>cd <folder> #说明：将操作位置转移到将要存放项目的文件夹目录（便于区分，我的项目文件夹名为hexo,~/root/hexo以下将使用这个文件夹）<br>hexo init #说明：自动在文件夹（hexo1）中创建项目所需的文件<br>npm install #说明：安装依赖包<br>hexo generate #说明：构建，会在hexo1中创建public文件夹<br>执行完以上命令后，会多出以下文件和文件夹<br>例如</p>\n<p>新建完成后，指定文件夹目录下有：</p>\n<p>_config.yml：站点的配置文件，需要备份<br>themes：主题文件夹，需要备份<br>source：博客文章的 .md 文件，需要备份<br>scaffolds：文章的模板，需要备份<br>package.json：安装包的名称，需要备份<br>.gitignore：限定在 push 时哪些文件可以忽略，需要备份<br>.git：主题和站点都有，标志这是一个 git 项目，不需要备份<br>node_modules：是安装包的目录，在执行 npm install 的时候会重新生成，不需要备份<br>public：是 hexo g 生成的静态网页，不需要备份<br>.deploy_git：同上，hexo g 也会生成，不需要备份<br>db.json：文件，不需要备份</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>打开hexo的服务</p>\n<p>在浏览器输入</p>\n<p><a href=\"http://localhost:4000/\">http://localhost:4000</a></p>\n<p>就可以看到你生成的博客</p>\n<p>使用ctrl+c停止服务</p>\n<p>Hexo+Github</p>\n<p>GitHub创建个人仓库</p>\n<p>注册登录github官网，点击右上角加号，点击New repository，新建仓库</p>\n<p>创建一个和用户名相同的仓库,即<a href=\"http://xxxx.github.io,其中xxx是github的用户名/\">http://xxxx.github.io，其中xxx是github的用户名</a></p>\n<p>点击create repository</p>\n<p>Git初始化设置</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;yourname&quot;   </span><br><span class=\"line\">git config --global user.email &quot;youremail&quot;  </span><br><span class=\"line\">(yourname是github用户名，youremail是注册github的邮箱)  </span><br><span class=\"line\">git config user.name</span><br><span class=\"line\">git config user.email</span><br></pre></td></tr></table></figure>\n<p>检查是否正确，输入命令</p>\n<p>生成SSH添加到GitHub</p>\n<p>输入命令，创建SSH,一路回车</p>\n<p>wp-block-code<br>ssh-keygen -t rsa -C “youremail”</p>\n<p>查看SSH KEY，输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>复制id_rsa.pub里面的全部内容</p>\n<p>在github的setting中，找到SSH keys的设置选项，点击New SSH key，粘贴id_rsa.pub里面的全部内容</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>查看是否连接成功</p>\n<p>打开站点配置文件 _config.yml，修改添加以下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo:</span><br><span class=\"line\">git@github.com:yourgithubname/yourgithubname.github.io.git  </span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>安装deploy-git ，也就是部署的命令,这样才能用命令部署到github</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean 第一次安装不用清缓存</span><br><span class=\"line\"></span><br><span class=\"line\">hexo clean &amp;&amp;　hexo g -d 　缩写</span><br><span class=\"line\"></span><br><span class=\"line\">hexo g = hexo generate 生成静态文件</span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate -deploy 生成静态文件后立即部署网站  </span><br></pre></td></tr></table></figure>\n<p>打开下面的网址</p>\n<p><a href=\"http://yourname.github.io/\">http://yourname.github.io</a></p>\n<p>就可看到和</p>\n<p><a href=\"http://localhost:4000/\">http://localhost:4000</a></p>\n<p>一样的了！</p>\n<p>关联Git仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/你的用户名/你的用户名.github.io.git  </span><br></pre></td></tr></table></figure>\n<p>执行之后会在当前目录生成’你的用户名.github.io’的文件夹，这是关联github仓库的文件夹，需要上传的文件都会移动到这里</p>\n<p>更多精彩内容请点击hexo官网</p>\n<p>(附上我的博客链接)</p>\n<p>Hexo+Gitee</p>\n<p>Gitee创建个人仓库</p>\n<p>打开码云官网，注册登陆，创建项目，点击右上角加号，新建仓库</p>\n<p>开启 Gitee Pages</p>\n<p>点击启动</p>\n<p>启动后，点击蓝色链接打开网址</p>\n<p>初始化Git设置</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;这里输入你的Gitee注册名&quot;// 按回车  </span><br><span class=\"line\">git config --global user.email &quot;这里输你的Gitee邮箱&quot;  </span><br></pre></td></tr></table></figure>\n<p>生成SSH密钥文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;你的Gitee注册邮箱&quot;  </span><br><span class=\"line\">// 可不输入，三个回车</span><br></pre></td></tr></table></figure>\n<p>复制粘贴到码云</p>\n<p>配置 _config.yml</p>\n<p>点击复制克隆/下载里面的https的内容</p>\n<p>修改添加_config.yml以下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: Gitee Pages 服务，网站地址： https://空间名.gitee.io/仓库名(粘贴)  </span><br><span class=\"line\">root: /仓库名/</span><br><span class=\"line\">wp-block-code</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://gitee.com/空间名/仓库名(粘贴)  </span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>基础配置可以参考官方文档的配置说明</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp;　hexo g -d 　缩写 清缓存</span><br><span class=\"line\"></span><br><span class=\"line\">hexo g = hexo generate 生成静态文件</span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate -deploy 生成静态文件后立即部署网站自动上传到gitee  </span><br><span class=\"line\">打开Gitee Pages 服务 ，每次上传或改动，都要点击“更新”打开网址访问  </span><br></pre></td></tr></table></figure>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"Hexo简介\"><a href=\"#Hexo简介\" class=\"headerlink\" title=\"Hexo简介\"></a>Hexo简介</h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Gitee上，是搭建博客的首选框架。大家可以进入hexo官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看  </p>\n<h2 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h2><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install git -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装nodejs\"><a href=\"#安装nodejs\" class=\"headerlink\" title=\"安装nodejs\"></a>安装nodejs</h2><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install nodejs npm -y</span><br></pre></td></tr></table></figure>\n<p>安装完后，输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<p>检查是否安装成功</p>\n<p>更换npm源为淘宝源</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set registry https://registry.npm.taobao.org  </span><br></pre></td></tr></table></figure>\n<h2 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h2><p>前面git和nodejs安装好后，就可以安装hexo了，先创建一个文件夹filename，然后cd到这个文件夹下</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<p>查看版本信息</p>\n<p>初始化hexo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init filename(文件名随意定义)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd filename //进入这个文件夹</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>cd <folder> #说明：将操作位置转移到将要存放项目的文件夹目录（便于区分，我的项目文件夹名为hexo,~/root/hexo以下将使用这个文件夹）<br>hexo init #说明：自动在文件夹（hexo1）中创建项目所需的文件<br>npm install #说明：安装依赖包<br>hexo generate #说明：构建，会在hexo1中创建public文件夹<br>执行完以上命令后，会多出以下文件和文件夹<br>例如</p>\n<p>新建完成后，指定文件夹目录下有：</p>\n<p>_config.yml：站点的配置文件，需要备份<br>themes：主题文件夹，需要备份<br>source：博客文章的 .md 文件，需要备份<br>scaffolds：文章的模板，需要备份<br>package.json：安装包的名称，需要备份<br>.gitignore：限定在 push 时哪些文件可以忽略，需要备份<br>.git：主题和站点都有，标志这是一个 git 项目，不需要备份<br>node_modules：是安装包的目录，在执行 npm install 的时候会重新生成，不需要备份<br>public：是 hexo g 生成的静态网页，不需要备份<br>.deploy_git：同上，hexo g 也会生成，不需要备份<br>db.json：文件，不需要备份</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>打开hexo的服务</p>\n<p>在浏览器输入</p>\n<p><a href=\"http://localhost:4000/\">http://localhost:4000</a></p>\n<p>就可以看到你生成的博客</p>\n<p>使用ctrl+c停止服务</p>\n<p>Hexo+Github</p>\n<p>GitHub创建个人仓库</p>\n<p>注册登录github官网，点击右上角加号，点击New repository，新建仓库</p>\n<p>创建一个和用户名相同的仓库,即<a href=\"http://xxxx.github.io,其中xxx是github的用户名/\">http://xxxx.github.io，其中xxx是github的用户名</a></p>\n<p>点击create repository</p>\n<p>Git初始化设置</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;yourname&quot;   </span><br><span class=\"line\">git config --global user.email &quot;youremail&quot;  </span><br><span class=\"line\">(yourname是github用户名，youremail是注册github的邮箱)  </span><br><span class=\"line\">git config user.name</span><br><span class=\"line\">git config user.email</span><br></pre></td></tr></table></figure>\n<p>检查是否正确，输入命令</p>\n<p>生成SSH添加到GitHub</p>\n<p>输入命令，创建SSH,一路回车</p>\n<p>wp-block-code<br>ssh-keygen -t rsa -C “youremail”</p>\n<p>查看SSH KEY，输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>复制id_rsa.pub里面的全部内容</p>\n<p>在github的setting中，找到SSH keys的设置选项，点击New SSH key，粘贴id_rsa.pub里面的全部内容</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>查看是否连接成功</p>\n<p>打开站点配置文件 _config.yml，修改添加以下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo:</span><br><span class=\"line\">git@github.com:yourgithubname/yourgithubname.github.io.git  </span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>安装deploy-git ，也就是部署的命令,这样才能用命令部署到github</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean 第一次安装不用清缓存</span><br><span class=\"line\"></span><br><span class=\"line\">hexo clean &amp;&amp;　hexo g -d 　缩写</span><br><span class=\"line\"></span><br><span class=\"line\">hexo g = hexo generate 生成静态文件</span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate -deploy 生成静态文件后立即部署网站  </span><br></pre></td></tr></table></figure>\n<p>打开下面的网址</p>\n<p><a href=\"http://yourname.github.io/\">http://yourname.github.io</a></p>\n<p>就可看到和</p>\n<p><a href=\"http://localhost:4000/\">http://localhost:4000</a></p>\n<p>一样的了！</p>\n<p>关联Git仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/你的用户名/你的用户名.github.io.git  </span><br></pre></td></tr></table></figure>\n<p>执行之后会在当前目录生成’你的用户名.github.io’的文件夹，这是关联github仓库的文件夹，需要上传的文件都会移动到这里</p>\n<p>更多精彩内容请点击hexo官网</p>\n<p>(附上我的博客链接)</p>\n<p>Hexo+Gitee</p>\n<p>Gitee创建个人仓库</p>\n<p>打开码云官网，注册登陆，创建项目，点击右上角加号，新建仓库</p>\n<p>开启 Gitee Pages</p>\n<p>点击启动</p>\n<p>启动后，点击蓝色链接打开网址</p>\n<p>初始化Git设置</p>\n<p>输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;这里输入你的Gitee注册名&quot;// 按回车  </span><br><span class=\"line\">git config --global user.email &quot;这里输你的Gitee邮箱&quot;  </span><br></pre></td></tr></table></figure>\n<p>生成SSH密钥文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;你的Gitee注册邮箱&quot;  </span><br><span class=\"line\">// 可不输入，三个回车</span><br></pre></td></tr></table></figure>\n<p>复制粘贴到码云</p>\n<p>配置 _config.yml</p>\n<p>点击复制克隆/下载里面的https的内容</p>\n<p>修改添加_config.yml以下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: Gitee Pages 服务，网站地址： https://空间名.gitee.io/仓库名(粘贴)  </span><br><span class=\"line\">root: /仓库名/</span><br><span class=\"line\">wp-block-code</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://gitee.com/空间名/仓库名(粘贴)  </span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>基础配置可以参考官方文档的配置说明</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp;　hexo g -d 　缩写 清缓存</span><br><span class=\"line\"></span><br><span class=\"line\">hexo g = hexo generate 生成静态文件</span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate -deploy 生成静态文件后立即部署网站自动上传到gitee  </span><br><span class=\"line\">打开Gitee Pages 服务 ，每次上传或改动，都要点击“更新”打开网址访问  </span><br></pre></td></tr></table></figure>\n"},{"title":"初识Linux","date":"2022-07-06T12:23:23.000Z","_content":"\n&emsp;&emsp;操作系统  \n&emsp;&emsp;操作系统时管理计算机硬件与软件资源的计算机程序，它能够合理地组织计算机工作的流程，是用户与计算机的接口，同时也提供了一个能够让用户与系统交互的操作界面。  \n操作系统有一下4个特征：  \n&emsp;&emsp;1.并发  \n&emsp;&emsp;&emsp;&emsp;并发是指两个或多个事件在同一时间间隔内发生。  \n&emsp;&emsp;2.共享  \n&emsp;&emsp;&emsp;&emsp;共享是指系统中的资源可供内存中多个并发执行的进程共同使用。  \n&emsp;&emsp;&emsp;&emsp;共享又分为以下两种方式：  \n&emsp;&emsp;2.1、互斥共享方式：在一段时间内只允许一个进程访问该资源。  \n&emsp;&emsp;2.2、同时访问方式：如：磁盘设备  \n&emsp;&emsp;3.虚拟  \n&emsp;&emsp;&emsp;&emsp;虚拟是指把一个物理上的实体变成为若干个逻辑上对应物  \n&emsp;&emsp;4.异步  \n&emsp;&emsp;&emsp;&emsp;在多道程序环境下，允许多个程序并发执行，但由于资源等因素限制，进程的执行并不是一直执行下去的，而是断断续续，内存中的每个进程会在什么时间开始执行、暂停，没道程序总共需要多少时间才能完成，这些都是以不可预知的速度向前推进，这就是进程的异步性。  \n注意：操作系统最基本的特征是并发和共享，两者互为存在条件。  \n\n## 二、Unix概述  \n&emsp;&emsp;Unix是一个计算机操作系统用来专门协调、管理和控制计算机硬件和软件资源的控制程序。Unix是一个多用户和多线程的操作系统：多用户表示同一时刻可以有多个用户同时使用Unix操作系统，并且在他们各自做各自的任务时互不干扰：多线程表示任何用户在同一时间可以在Unix操作系统上运行多个程序。  \n1.Unix操作系统由 内核、Shell和程序组成  \n&emsp;&emsp;1.1、内核：内核是操作系统的核心部分，它一方面可以为程序分配时间和内存，另一方面通过处理文件的存储和通信以相应系统调用。  \n&emsp;&emsp;1.2、Shell：Shell属于用户和内核之间的连接接口。  \n&emsp;&emsp;1.3、程序：Shell是命令行解释器，这些命令也是程序的一部分，其中还包括文件和进程。  \n2.Unix操作系统的优点  \n&emsp;&emsp;2.1、多用户、多线程的操作系统并支持多种处理器的架构模式  \n&emsp;&emsp;2.2、使用简单编程语言使系统易于理解、易于修改、同时还会有各种编程语言的解释器和编译器。  \n&emsp;&emsp;2.3、使用功能强大的可编程的Shell语言，使用户界面美观大方，简洁明了。  \n&emsp;&emsp;2.4、开源性。  \n\n## Linux系统结构结构\n&emsp;&emsp;计算机的硬件资源全部由内核（Kernel）来进行管理，内核需要管理的事项包括内存管理、进程管理、文件系统、设备驱动程序、网络结构5大部分组成  \n1.内存管理：  \n&emsp;&emsp;1.1、进程对内存的使用      \n &emsp;&emsp;&emsp;&emsp;要执行程序都必须要占有一定数量的内存。linux采用虚拟内存管理技术，这样可以使每个进程都有各自互不干扰的进程地址存储空间。虚拟地址不仅能保护操作系统，而且方便用户程序使用比实际物理内存较大的地址空间。  \n&emsp;&emsp;一个普通的进程包括代码段、数据段、BSS段、堆和栈5个不同的数据段。  \n&emsp;&emsp;       （1）、代码段：主要用来存放可执行文件的操作指令。  \n&emsp;&emsp;  （2）、数据段：数据段用来存放可执行文件中已经出实话的全局变量，也就是存放程序静态分配的变量和全局变量。  \n       &emsp;&emsp; （3）、BSS段：BSS段包含了程序中为初始化的全局变量，在内存中BSS段全部置为“0”。  \n       &emsp;&emsp; （4）、堆：堆是用于存放进程运行中被动态分配的内存段，它的大小并不固定，可动态地扩张和缩减。  \n      &emsp;&emsp;  （5）、栈：栈是用户为了存放程序而临时创建的一个局部变量，栈有先进先出的特点，所以栈可以用来保存或恢复调用现场。因此可以把堆栈当作一个寄存、交换临时数据的内存区。  \n&emsp;&emsp;1.2、物理内存  \n&emsp;&emsp;物理内存是系统硬件提供的真实内存大小，除了物理内存之外，在Linux中还有一个虚拟内存，是为了满足物理内存不足而存在的，被称为交换空间。  \n&emsp;&emsp;Linux系统将内存划分为容易处理的“内存页”  \n&emsp;&emsp;注意：Linux系统内核的内存管理采取的是分页存取机制，为了保证物理内存能够得到充分的利用，内核会在适当的时候将物理内存中不经常使用的段数据块信息自动交换到虚拟内存中，而将经常使用的信息保留到物理内存。  \n2.进程管理  \n    进程是在自身的虚拟地址空间运行的一个独立的程序，从操作系统的角度来看，所有在操作系统上运行的东西，都可以称为一个程序。  \n    进程的分类：  \n&emsp;&emsp;（1）系统进程：可以执行内存资源分配和进程切换等管理工作  \n&emsp;&emsp; （2）用户进程：通过执行用户程序、应用程序或内核之外的系统程序而产生的进程，此类进程可以在用户的控制下运行或关闭。  \n&emsp;&emsp;&emsp;&emsp;  针对用户进程可分为：交互进程、批处理进程和守护进程3种。  \n&emsp;&emsp;&emsp;&emsp;         交互进程：由一个Shell终端启动的进程  \n&emsp;&emsp;&emsp;&emsp;        批处理进程：该进程是一个进程集合，负责按顺序启动其他的程序。  \n&emsp;&emsp;&emsp;&emsp;        守护进程：守护进程是一只运行的一种进程。独立于终端，并周期性地执行某种任务或等待处理某些发生的事件。  \n&emsp;&emsp;（3）进程的状态：  \n&emsp;&emsp;&emsp;&emsp;可运行状态：正在运行或正准备运行。  \n&emsp;&emsp;&emsp;&emsp;可中断的等待状态：处于阻塞状态，达到条件就运行。  \n&emsp;&emsp;&emsp;&emsp;不中断的等待状态：与可中断等待状态类似，但这个进程对进程的信号不做回应。  \n&emsp;&emsp;&emsp;&emsp;僵死状态：每个进程在结束后都会处于僵死状态，等待父进程调用进而释放资源，处于该状态的进程已结束。但是它的父进程还没有释放其系统资源。  \n&emsp;&emsp;&emsp;&emsp;暂停状态：表明此时的进程暂时停止，来接受某种特殊信号。  \n3.文件系统  \n&emsp;&emsp; Linux对各种文件系统支持是通过VFS的组件实现的，也就是虚拟文件系统。  \n    虚拟文件系统是Linux内核中国呢非常有用的一个方面，因为它为文件系统提供了一个通用的接口抽象，即VFS在用户和文件系统之间提供了一个交换层  \n4.设备驱动程序  \n&emsp;&emsp;设备驱动程序是Linux内核的主要部分。设备的分类如下：  \n&emsp;&emsp;&emsp;&emsp;字符设备：字符设备是能够像文件一样被访问的设备，由字符设备驱动程序来实现这种特点。  \n&emsp;&emsp;&emsp;&emsp;块设备：块设备也是通过设备节点来访问。块设备上能够过容纳文件系统。  \n&emsp;&emsp;&emsp;&emsp;网络设备：网络设备不同于字符设备和块设备，它是面向报文的而不是面向流的，它不支持随机访问，业没有请求缓冲区。  \n5.网络接口  \n&emsp;&emsp;网络接口可分为网络协议和网络驱动程序。网络协议负责实现每一种可能的网络传输协议。  \n&emsp;&emsp;&emsp;&emsp;5.1网络接口的命名  \n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;lo：local的缩写，一般指本地接口\n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;eth0：ethernt的缩写一般用于以太网接口  \n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;wifi0:wifi是无限局域网，一般用于无限网接口。  \n&emsp;&emsp;5.2网络接口的工作  \n&emsp;&emsp;&emsp;&emsp;网络接口是用来发送和接受数据包的基本设备。系统中的所有网络接口组成一个链状结构，应用层的程序使用网络接口时按名称调用。  \n&emsp;&emsp;5.3虚拟网络接口  \n&emsp;&emsp;&emsp;&emsp;lo是最常见的接口之一，虚拟网络接口并不真实的从外界接受和发送数据包，而是在系统内部接受和发送数据包，因此虚拟网络接口不需要驱动程序。  \n\n## Linux目录及功能\n```markdown\n/                   虚拟系统的根目录，这里一般不存文件\n/bin                二进制目录，用于存放用户级的GNU工具，如：cat\n/boot               启动目录，存放Linux操作系统的内核和系统启动时所需要使用的文件\n/dev                设备目录，创建设备节点，存放计算机中所有的设备，包括硬件\n/etc                系统配置文件目录，只有root用户可以修改该文件\n/home               主目录，创建用户目录\n/lib                库目录，存放系统和应用程序的库文件\n/media              媒体目录，可移动媒体设备的常用挂载点\n/mnt                挂载目录，另一个可移动媒体设备的常用挂载点\n/opt                可选目录，常用于存放第三方软件包和数据文件\n/proc               进程目录，常在内存中，不占用任何磁盘空间，存放现有硬件及当前进程的相关信息\n/root               root用户的主目录\n/sbin               系统二进制目录，存放许多GNU管理级工具\n/run                运行目录，存放系统运行时的运行数据\n/srv                服务目录，存放的是所有与服务器相关的服务，即一些服务启动之后，这些服务需要访问的目录\n/sys                系统目录，存放系统硬件信息的相关文件\n/tmp                临时目录，普通用户或程序可以将临时文件存入该目录以方便与其他用户或程序交互信息。该目录所有的用户都可以进行访问，因此，重要的信息不因该存放在该目录中\n/user               用户二进制目录，存放系统的应用程序和与命令相关的系统数据，其中包括系统的一些函数库及图形界面所需要点文件等\n/var                可变目录，存放的是系统运行中经常变化的文件，如log日志文件等\n```\n","source":"_posts/2022-07-06_初识Linux .md","raw":"---\ntitle: 初识Linux\ndate: 2022-07-06 20:23:23\ntags: [Linux]\ncategories: [设计开发, Linux]\n---\n\n&emsp;&emsp;操作系统  \n&emsp;&emsp;操作系统时管理计算机硬件与软件资源的计算机程序，它能够合理地组织计算机工作的流程，是用户与计算机的接口，同时也提供了一个能够让用户与系统交互的操作界面。  \n操作系统有一下4个特征：  \n&emsp;&emsp;1.并发  \n&emsp;&emsp;&emsp;&emsp;并发是指两个或多个事件在同一时间间隔内发生。  \n&emsp;&emsp;2.共享  \n&emsp;&emsp;&emsp;&emsp;共享是指系统中的资源可供内存中多个并发执行的进程共同使用。  \n&emsp;&emsp;&emsp;&emsp;共享又分为以下两种方式：  \n&emsp;&emsp;2.1、互斥共享方式：在一段时间内只允许一个进程访问该资源。  \n&emsp;&emsp;2.2、同时访问方式：如：磁盘设备  \n&emsp;&emsp;3.虚拟  \n&emsp;&emsp;&emsp;&emsp;虚拟是指把一个物理上的实体变成为若干个逻辑上对应物  \n&emsp;&emsp;4.异步  \n&emsp;&emsp;&emsp;&emsp;在多道程序环境下，允许多个程序并发执行，但由于资源等因素限制，进程的执行并不是一直执行下去的，而是断断续续，内存中的每个进程会在什么时间开始执行、暂停，没道程序总共需要多少时间才能完成，这些都是以不可预知的速度向前推进，这就是进程的异步性。  \n注意：操作系统最基本的特征是并发和共享，两者互为存在条件。  \n\n## 二、Unix概述  \n&emsp;&emsp;Unix是一个计算机操作系统用来专门协调、管理和控制计算机硬件和软件资源的控制程序。Unix是一个多用户和多线程的操作系统：多用户表示同一时刻可以有多个用户同时使用Unix操作系统，并且在他们各自做各自的任务时互不干扰：多线程表示任何用户在同一时间可以在Unix操作系统上运行多个程序。  \n1.Unix操作系统由 内核、Shell和程序组成  \n&emsp;&emsp;1.1、内核：内核是操作系统的核心部分，它一方面可以为程序分配时间和内存，另一方面通过处理文件的存储和通信以相应系统调用。  \n&emsp;&emsp;1.2、Shell：Shell属于用户和内核之间的连接接口。  \n&emsp;&emsp;1.3、程序：Shell是命令行解释器，这些命令也是程序的一部分，其中还包括文件和进程。  \n2.Unix操作系统的优点  \n&emsp;&emsp;2.1、多用户、多线程的操作系统并支持多种处理器的架构模式  \n&emsp;&emsp;2.2、使用简单编程语言使系统易于理解、易于修改、同时还会有各种编程语言的解释器和编译器。  \n&emsp;&emsp;2.3、使用功能强大的可编程的Shell语言，使用户界面美观大方，简洁明了。  \n&emsp;&emsp;2.4、开源性。  \n\n## Linux系统结构结构\n&emsp;&emsp;计算机的硬件资源全部由内核（Kernel）来进行管理，内核需要管理的事项包括内存管理、进程管理、文件系统、设备驱动程序、网络结构5大部分组成  \n1.内存管理：  \n&emsp;&emsp;1.1、进程对内存的使用      \n &emsp;&emsp;&emsp;&emsp;要执行程序都必须要占有一定数量的内存。linux采用虚拟内存管理技术，这样可以使每个进程都有各自互不干扰的进程地址存储空间。虚拟地址不仅能保护操作系统，而且方便用户程序使用比实际物理内存较大的地址空间。  \n&emsp;&emsp;一个普通的进程包括代码段、数据段、BSS段、堆和栈5个不同的数据段。  \n&emsp;&emsp;       （1）、代码段：主要用来存放可执行文件的操作指令。  \n&emsp;&emsp;  （2）、数据段：数据段用来存放可执行文件中已经出实话的全局变量，也就是存放程序静态分配的变量和全局变量。  \n       &emsp;&emsp; （3）、BSS段：BSS段包含了程序中为初始化的全局变量，在内存中BSS段全部置为“0”。  \n       &emsp;&emsp; （4）、堆：堆是用于存放进程运行中被动态分配的内存段，它的大小并不固定，可动态地扩张和缩减。  \n      &emsp;&emsp;  （5）、栈：栈是用户为了存放程序而临时创建的一个局部变量，栈有先进先出的特点，所以栈可以用来保存或恢复调用现场。因此可以把堆栈当作一个寄存、交换临时数据的内存区。  \n&emsp;&emsp;1.2、物理内存  \n&emsp;&emsp;物理内存是系统硬件提供的真实内存大小，除了物理内存之外，在Linux中还有一个虚拟内存，是为了满足物理内存不足而存在的，被称为交换空间。  \n&emsp;&emsp;Linux系统将内存划分为容易处理的“内存页”  \n&emsp;&emsp;注意：Linux系统内核的内存管理采取的是分页存取机制，为了保证物理内存能够得到充分的利用，内核会在适当的时候将物理内存中不经常使用的段数据块信息自动交换到虚拟内存中，而将经常使用的信息保留到物理内存。  \n2.进程管理  \n    进程是在自身的虚拟地址空间运行的一个独立的程序，从操作系统的角度来看，所有在操作系统上运行的东西，都可以称为一个程序。  \n    进程的分类：  \n&emsp;&emsp;（1）系统进程：可以执行内存资源分配和进程切换等管理工作  \n&emsp;&emsp; （2）用户进程：通过执行用户程序、应用程序或内核之外的系统程序而产生的进程，此类进程可以在用户的控制下运行或关闭。  \n&emsp;&emsp;&emsp;&emsp;  针对用户进程可分为：交互进程、批处理进程和守护进程3种。  \n&emsp;&emsp;&emsp;&emsp;         交互进程：由一个Shell终端启动的进程  \n&emsp;&emsp;&emsp;&emsp;        批处理进程：该进程是一个进程集合，负责按顺序启动其他的程序。  \n&emsp;&emsp;&emsp;&emsp;        守护进程：守护进程是一只运行的一种进程。独立于终端，并周期性地执行某种任务或等待处理某些发生的事件。  \n&emsp;&emsp;（3）进程的状态：  \n&emsp;&emsp;&emsp;&emsp;可运行状态：正在运行或正准备运行。  \n&emsp;&emsp;&emsp;&emsp;可中断的等待状态：处于阻塞状态，达到条件就运行。  \n&emsp;&emsp;&emsp;&emsp;不中断的等待状态：与可中断等待状态类似，但这个进程对进程的信号不做回应。  \n&emsp;&emsp;&emsp;&emsp;僵死状态：每个进程在结束后都会处于僵死状态，等待父进程调用进而释放资源，处于该状态的进程已结束。但是它的父进程还没有释放其系统资源。  \n&emsp;&emsp;&emsp;&emsp;暂停状态：表明此时的进程暂时停止，来接受某种特殊信号。  \n3.文件系统  \n&emsp;&emsp; Linux对各种文件系统支持是通过VFS的组件实现的，也就是虚拟文件系统。  \n    虚拟文件系统是Linux内核中国呢非常有用的一个方面，因为它为文件系统提供了一个通用的接口抽象，即VFS在用户和文件系统之间提供了一个交换层  \n4.设备驱动程序  \n&emsp;&emsp;设备驱动程序是Linux内核的主要部分。设备的分类如下：  \n&emsp;&emsp;&emsp;&emsp;字符设备：字符设备是能够像文件一样被访问的设备，由字符设备驱动程序来实现这种特点。  \n&emsp;&emsp;&emsp;&emsp;块设备：块设备也是通过设备节点来访问。块设备上能够过容纳文件系统。  \n&emsp;&emsp;&emsp;&emsp;网络设备：网络设备不同于字符设备和块设备，它是面向报文的而不是面向流的，它不支持随机访问，业没有请求缓冲区。  \n5.网络接口  \n&emsp;&emsp;网络接口可分为网络协议和网络驱动程序。网络协议负责实现每一种可能的网络传输协议。  \n&emsp;&emsp;&emsp;&emsp;5.1网络接口的命名  \n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;lo：local的缩写，一般指本地接口\n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;eth0：ethernt的缩写一般用于以太网接口  \n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;wifi0:wifi是无限局域网，一般用于无限网接口。  \n&emsp;&emsp;5.2网络接口的工作  \n&emsp;&emsp;&emsp;&emsp;网络接口是用来发送和接受数据包的基本设备。系统中的所有网络接口组成一个链状结构，应用层的程序使用网络接口时按名称调用。  \n&emsp;&emsp;5.3虚拟网络接口  \n&emsp;&emsp;&emsp;&emsp;lo是最常见的接口之一，虚拟网络接口并不真实的从外界接受和发送数据包，而是在系统内部接受和发送数据包，因此虚拟网络接口不需要驱动程序。  \n\n## Linux目录及功能\n```markdown\n/                   虚拟系统的根目录，这里一般不存文件\n/bin                二进制目录，用于存放用户级的GNU工具，如：cat\n/boot               启动目录，存放Linux操作系统的内核和系统启动时所需要使用的文件\n/dev                设备目录，创建设备节点，存放计算机中所有的设备，包括硬件\n/etc                系统配置文件目录，只有root用户可以修改该文件\n/home               主目录，创建用户目录\n/lib                库目录，存放系统和应用程序的库文件\n/media              媒体目录，可移动媒体设备的常用挂载点\n/mnt                挂载目录，另一个可移动媒体设备的常用挂载点\n/opt                可选目录，常用于存放第三方软件包和数据文件\n/proc               进程目录，常在内存中，不占用任何磁盘空间，存放现有硬件及当前进程的相关信息\n/root               root用户的主目录\n/sbin               系统二进制目录，存放许多GNU管理级工具\n/run                运行目录，存放系统运行时的运行数据\n/srv                服务目录，存放的是所有与服务器相关的服务，即一些服务启动之后，这些服务需要访问的目录\n/sys                系统目录，存放系统硬件信息的相关文件\n/tmp                临时目录，普通用户或程序可以将临时文件存入该目录以方便与其他用户或程序交互信息。该目录所有的用户都可以进行访问，因此，重要的信息不因该存放在该目录中\n/user               用户二进制目录，存放系统的应用程序和与命令相关的系统数据，其中包括系统的一些函数库及图形界面所需要点文件等\n/var                可变目录，存放的是系统运行中经常变化的文件，如log日志文件等\n```\n","slug":"2022-07-06_初识Linux ","published":1,"updated":"2022-11-02T02:49:01.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8k0007u19kfl1c4odn","content":"<p>&emsp;&emsp;操作系统<br>&emsp;&emsp;操作系统时管理计算机硬件与软件资源的计算机程序，它能够合理地组织计算机工作的流程，是用户与计算机的接口，同时也提供了一个能够让用户与系统交互的操作界面。<br>操作系统有一下4个特征：<br>&emsp;&emsp;1.并发<br>&emsp;&emsp;&emsp;&emsp;并发是指两个或多个事件在同一时间间隔内发生。<br>&emsp;&emsp;2.共享<br>&emsp;&emsp;&emsp;&emsp;共享是指系统中的资源可供内存中多个并发执行的进程共同使用。<br>&emsp;&emsp;&emsp;&emsp;共享又分为以下两种方式：<br>&emsp;&emsp;2.1、互斥共享方式：在一段时间内只允许一个进程访问该资源。<br>&emsp;&emsp;2.2、同时访问方式：如：磁盘设备<br>&emsp;&emsp;3.虚拟<br>&emsp;&emsp;&emsp;&emsp;虚拟是指把一个物理上的实体变成为若干个逻辑上对应物<br>&emsp;&emsp;4.异步<br>&emsp;&emsp;&emsp;&emsp;在多道程序环境下，允许多个程序并发执行，但由于资源等因素限制，进程的执行并不是一直执行下去的，而是断断续续，内存中的每个进程会在什么时间开始执行、暂停，没道程序总共需要多少时间才能完成，这些都是以不可预知的速度向前推进，这就是进程的异步性。<br>注意：操作系统最基本的特征是并发和共享，两者互为存在条件。  </p>\n<h2 id=\"二、Unix概述\"><a href=\"#二、Unix概述\" class=\"headerlink\" title=\"二、Unix概述\"></a>二、Unix概述</h2><p>&emsp;&emsp;Unix是一个计算机操作系统用来专门协调、管理和控制计算机硬件和软件资源的控制程序。Unix是一个多用户和多线程的操作系统：多用户表示同一时刻可以有多个用户同时使用Unix操作系统，并且在他们各自做各自的任务时互不干扰：多线程表示任何用户在同一时间可以在Unix操作系统上运行多个程序。<br>1.Unix操作系统由 内核、Shell和程序组成<br>&emsp;&emsp;1.1、内核：内核是操作系统的核心部分，它一方面可以为程序分配时间和内存，另一方面通过处理文件的存储和通信以相应系统调用。<br>&emsp;&emsp;1.2、Shell：Shell属于用户和内核之间的连接接口。<br>&emsp;&emsp;1.3、程序：Shell是命令行解释器，这些命令也是程序的一部分，其中还包括文件和进程。<br>2.Unix操作系统的优点<br>&emsp;&emsp;2.1、多用户、多线程的操作系统并支持多种处理器的架构模式<br>&emsp;&emsp;2.2、使用简单编程语言使系统易于理解、易于修改、同时还会有各种编程语言的解释器和编译器。<br>&emsp;&emsp;2.3、使用功能强大的可编程的Shell语言，使用户界面美观大方，简洁明了。<br>&emsp;&emsp;2.4、开源性。  </p>\n<h2 id=\"Linux系统结构结构\"><a href=\"#Linux系统结构结构\" class=\"headerlink\" title=\"Linux系统结构结构\"></a>Linux系统结构结构</h2><p>&emsp;&emsp;计算机的硬件资源全部由内核（Kernel）来进行管理，内核需要管理的事项包括内存管理、进程管理、文件系统、设备驱动程序、网络结构5大部分组成<br>1.内存管理：<br>&emsp;&emsp;1.1、进程对内存的使用<br> &emsp;&emsp;&emsp;&emsp;要执行程序都必须要占有一定数量的内存。linux采用虚拟内存管理技术，这样可以使每个进程都有各自互不干扰的进程地址存储空间。虚拟地址不仅能保护操作系统，而且方便用户程序使用比实际物理内存较大的地址空间。<br>&emsp;&emsp;一个普通的进程包括代码段、数据段、BSS段、堆和栈5个不同的数据段。<br>&emsp;&emsp;       （1）、代码段：主要用来存放可执行文件的操作指令。<br>&emsp;&emsp;  （2）、数据段：数据段用来存放可执行文件中已经出实话的全局变量，也就是存放程序静态分配的变量和全局变量。<br>       &emsp;&emsp; （3）、BSS段：BSS段包含了程序中为初始化的全局变量，在内存中BSS段全部置为“0”。<br>       &emsp;&emsp; （4）、堆：堆是用于存放进程运行中被动态分配的内存段，它的大小并不固定，可动态地扩张和缩减。<br>      &emsp;&emsp;  （5）、栈：栈是用户为了存放程序而临时创建的一个局部变量，栈有先进先出的特点，所以栈可以用来保存或恢复调用现场。因此可以把堆栈当作一个寄存、交换临时数据的内存区。<br>&emsp;&emsp;1.2、物理内存<br>&emsp;&emsp;物理内存是系统硬件提供的真实内存大小，除了物理内存之外，在Linux中还有一个虚拟内存，是为了满足物理内存不足而存在的，被称为交换空间。<br>&emsp;&emsp;Linux系统将内存划分为容易处理的“内存页”<br>&emsp;&emsp;注意：Linux系统内核的内存管理采取的是分页存取机制，为了保证物理内存能够得到充分的利用，内核会在适当的时候将物理内存中不经常使用的段数据块信息自动交换到虚拟内存中，而将经常使用的信息保留到物理内存。<br>2.进程管理<br>    进程是在自身的虚拟地址空间运行的一个独立的程序，从操作系统的角度来看，所有在操作系统上运行的东西，都可以称为一个程序。<br>    进程的分类：<br>&emsp;&emsp;（1）系统进程：可以执行内存资源分配和进程切换等管理工作<br>&emsp;&emsp; （2）用户进程：通过执行用户程序、应用程序或内核之外的系统程序而产生的进程，此类进程可以在用户的控制下运行或关闭。<br>&emsp;&emsp;&emsp;&emsp;  针对用户进程可分为：交互进程、批处理进程和守护进程3种。<br>&emsp;&emsp;&emsp;&emsp;         交互进程：由一个Shell终端启动的进程<br>&emsp;&emsp;&emsp;&emsp;        批处理进程：该进程是一个进程集合，负责按顺序启动其他的程序。<br>&emsp;&emsp;&emsp;&emsp;        守护进程：守护进程是一只运行的一种进程。独立于终端，并周期性地执行某种任务或等待处理某些发生的事件。<br>&emsp;&emsp;（3）进程的状态：<br>&emsp;&emsp;&emsp;&emsp;可运行状态：正在运行或正准备运行。<br>&emsp;&emsp;&emsp;&emsp;可中断的等待状态：处于阻塞状态，达到条件就运行。<br>&emsp;&emsp;&emsp;&emsp;不中断的等待状态：与可中断等待状态类似，但这个进程对进程的信号不做回应。<br>&emsp;&emsp;&emsp;&emsp;僵死状态：每个进程在结束后都会处于僵死状态，等待父进程调用进而释放资源，处于该状态的进程已结束。但是它的父进程还没有释放其系统资源。<br>&emsp;&emsp;&emsp;&emsp;暂停状态：表明此时的进程暂时停止，来接受某种特殊信号。<br>3.文件系统<br>&emsp;&emsp; Linux对各种文件系统支持是通过VFS的组件实现的，也就是虚拟文件系统。<br>    虚拟文件系统是Linux内核中国呢非常有用的一个方面，因为它为文件系统提供了一个通用的接口抽象，即VFS在用户和文件系统之间提供了一个交换层<br>4.设备驱动程序<br>&emsp;&emsp;设备驱动程序是Linux内核的主要部分。设备的分类如下：<br>&emsp;&emsp;&emsp;&emsp;字符设备：字符设备是能够像文件一样被访问的设备，由字符设备驱动程序来实现这种特点。<br>&emsp;&emsp;&emsp;&emsp;块设备：块设备也是通过设备节点来访问。块设备上能够过容纳文件系统。<br>&emsp;&emsp;&emsp;&emsp;网络设备：网络设备不同于字符设备和块设备，它是面向报文的而不是面向流的，它不支持随机访问，业没有请求缓冲区。<br>5.网络接口<br>&emsp;&emsp;网络接口可分为网络协议和网络驱动程序。网络协议负责实现每一种可能的网络传输协议。<br>&emsp;&emsp;&emsp;&emsp;5.1网络接口的命名<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;lo：local的缩写，一般指本地接口<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;eth0：ethernt的缩写一般用于以太网接口<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;wifi0:wifi是无限局域网，一般用于无限网接口。<br>&emsp;&emsp;5.2网络接口的工作<br>&emsp;&emsp;&emsp;&emsp;网络接口是用来发送和接受数据包的基本设备。系统中的所有网络接口组成一个链状结构，应用层的程序使用网络接口时按名称调用。<br>&emsp;&emsp;5.3虚拟网络接口<br>&emsp;&emsp;&emsp;&emsp;lo是最常见的接口之一，虚拟网络接口并不真实的从外界接受和发送数据包，而是在系统内部接受和发送数据包，因此虚拟网络接口不需要驱动程序。  </p>\n<h2 id=\"Linux目录及功能\"><a href=\"#Linux目录及功能\" class=\"headerlink\" title=\"Linux目录及功能\"></a>Linux目录及功能</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/                   虚拟系统的根目录，这里一般不存文件</span><br><span class=\"line\">/bin                二进制目录，用于存放用户级的GNU工具，如：cat</span><br><span class=\"line\">/boot               启动目录，存放Linux操作系统的内核和系统启动时所需要使用的文件</span><br><span class=\"line\">/dev                设备目录，创建设备节点，存放计算机中所有的设备，包括硬件</span><br><span class=\"line\">/etc                系统配置文件目录，只有root用户可以修改该文件</span><br><span class=\"line\">/home               主目录，创建用户目录</span><br><span class=\"line\">/lib                库目录，存放系统和应用程序的库文件</span><br><span class=\"line\">/media              媒体目录，可移动媒体设备的常用挂载点</span><br><span class=\"line\">/mnt                挂载目录，另一个可移动媒体设备的常用挂载点</span><br><span class=\"line\">/opt                可选目录，常用于存放第三方软件包和数据文件</span><br><span class=\"line\">/proc               进程目录，常在内存中，不占用任何磁盘空间，存放现有硬件及当前进程的相关信息</span><br><span class=\"line\">/root               root用户的主目录</span><br><span class=\"line\">/sbin               系统二进制目录，存放许多GNU管理级工具</span><br><span class=\"line\">/run                运行目录，存放系统运行时的运行数据</span><br><span class=\"line\">/srv                服务目录，存放的是所有与服务器相关的服务，即一些服务启动之后，这些服务需要访问的目录</span><br><span class=\"line\">/sys                系统目录，存放系统硬件信息的相关文件</span><br><span class=\"line\">/tmp                临时目录，普通用户或程序可以将临时文件存入该目录以方便与其他用户或程序交互信息。该目录所有的用户都可以进行访问，因此，重要的信息不因该存放在该目录中</span><br><span class=\"line\">/user               用户二进制目录，存放系统的应用程序和与命令相关的系统数据，其中包括系统的一些函数库及图形界面所需要点文件等</span><br><span class=\"line\">/var                可变目录，存放的是系统运行中经常变化的文件，如log日志文件等</span><br></pre></td></tr></table></figure>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<p>&emsp;&emsp;操作系统<br>&emsp;&emsp;操作系统时管理计算机硬件与软件资源的计算机程序，它能够合理地组织计算机工作的流程，是用户与计算机的接口，同时也提供了一个能够让用户与系统交互的操作界面。<br>操作系统有一下4个特征：<br>&emsp;&emsp;1.并发<br>&emsp;&emsp;&emsp;&emsp;并发是指两个或多个事件在同一时间间隔内发生。<br>&emsp;&emsp;2.共享<br>&emsp;&emsp;&emsp;&emsp;共享是指系统中的资源可供内存中多个并发执行的进程共同使用。<br>&emsp;&emsp;&emsp;&emsp;共享又分为以下两种方式：<br>&emsp;&emsp;2.1、互斥共享方式：在一段时间内只允许一个进程访问该资源。<br>&emsp;&emsp;2.2、同时访问方式：如：磁盘设备<br>&emsp;&emsp;3.虚拟<br>&emsp;&emsp;&emsp;&emsp;虚拟是指把一个物理上的实体变成为若干个逻辑上对应物<br>&emsp;&emsp;4.异步<br>&emsp;&emsp;&emsp;&emsp;在多道程序环境下，允许多个程序并发执行，但由于资源等因素限制，进程的执行并不是一直执行下去的，而是断断续续，内存中的每个进程会在什么时间开始执行、暂停，没道程序总共需要多少时间才能完成，这些都是以不可预知的速度向前推进，这就是进程的异步性。<br>注意：操作系统最基本的特征是并发和共享，两者互为存在条件。  </p>\n<h2 id=\"二、Unix概述\"><a href=\"#二、Unix概述\" class=\"headerlink\" title=\"二、Unix概述\"></a>二、Unix概述</h2><p>&emsp;&emsp;Unix是一个计算机操作系统用来专门协调、管理和控制计算机硬件和软件资源的控制程序。Unix是一个多用户和多线程的操作系统：多用户表示同一时刻可以有多个用户同时使用Unix操作系统，并且在他们各自做各自的任务时互不干扰：多线程表示任何用户在同一时间可以在Unix操作系统上运行多个程序。<br>1.Unix操作系统由 内核、Shell和程序组成<br>&emsp;&emsp;1.1、内核：内核是操作系统的核心部分，它一方面可以为程序分配时间和内存，另一方面通过处理文件的存储和通信以相应系统调用。<br>&emsp;&emsp;1.2、Shell：Shell属于用户和内核之间的连接接口。<br>&emsp;&emsp;1.3、程序：Shell是命令行解释器，这些命令也是程序的一部分，其中还包括文件和进程。<br>2.Unix操作系统的优点<br>&emsp;&emsp;2.1、多用户、多线程的操作系统并支持多种处理器的架构模式<br>&emsp;&emsp;2.2、使用简单编程语言使系统易于理解、易于修改、同时还会有各种编程语言的解释器和编译器。<br>&emsp;&emsp;2.3、使用功能强大的可编程的Shell语言，使用户界面美观大方，简洁明了。<br>&emsp;&emsp;2.4、开源性。  </p>\n<h2 id=\"Linux系统结构结构\"><a href=\"#Linux系统结构结构\" class=\"headerlink\" title=\"Linux系统结构结构\"></a>Linux系统结构结构</h2><p>&emsp;&emsp;计算机的硬件资源全部由内核（Kernel）来进行管理，内核需要管理的事项包括内存管理、进程管理、文件系统、设备驱动程序、网络结构5大部分组成<br>1.内存管理：<br>&emsp;&emsp;1.1、进程对内存的使用<br> &emsp;&emsp;&emsp;&emsp;要执行程序都必须要占有一定数量的内存。linux采用虚拟内存管理技术，这样可以使每个进程都有各自互不干扰的进程地址存储空间。虚拟地址不仅能保护操作系统，而且方便用户程序使用比实际物理内存较大的地址空间。<br>&emsp;&emsp;一个普通的进程包括代码段、数据段、BSS段、堆和栈5个不同的数据段。<br>&emsp;&emsp;       （1）、代码段：主要用来存放可执行文件的操作指令。<br>&emsp;&emsp;  （2）、数据段：数据段用来存放可执行文件中已经出实话的全局变量，也就是存放程序静态分配的变量和全局变量。<br>       &emsp;&emsp; （3）、BSS段：BSS段包含了程序中为初始化的全局变量，在内存中BSS段全部置为“0”。<br>       &emsp;&emsp; （4）、堆：堆是用于存放进程运行中被动态分配的内存段，它的大小并不固定，可动态地扩张和缩减。<br>      &emsp;&emsp;  （5）、栈：栈是用户为了存放程序而临时创建的一个局部变量，栈有先进先出的特点，所以栈可以用来保存或恢复调用现场。因此可以把堆栈当作一个寄存、交换临时数据的内存区。<br>&emsp;&emsp;1.2、物理内存<br>&emsp;&emsp;物理内存是系统硬件提供的真实内存大小，除了物理内存之外，在Linux中还有一个虚拟内存，是为了满足物理内存不足而存在的，被称为交换空间。<br>&emsp;&emsp;Linux系统将内存划分为容易处理的“内存页”<br>&emsp;&emsp;注意：Linux系统内核的内存管理采取的是分页存取机制，为了保证物理内存能够得到充分的利用，内核会在适当的时候将物理内存中不经常使用的段数据块信息自动交换到虚拟内存中，而将经常使用的信息保留到物理内存。<br>2.进程管理<br>    进程是在自身的虚拟地址空间运行的一个独立的程序，从操作系统的角度来看，所有在操作系统上运行的东西，都可以称为一个程序。<br>    进程的分类：<br>&emsp;&emsp;（1）系统进程：可以执行内存资源分配和进程切换等管理工作<br>&emsp;&emsp; （2）用户进程：通过执行用户程序、应用程序或内核之外的系统程序而产生的进程，此类进程可以在用户的控制下运行或关闭。<br>&emsp;&emsp;&emsp;&emsp;  针对用户进程可分为：交互进程、批处理进程和守护进程3种。<br>&emsp;&emsp;&emsp;&emsp;         交互进程：由一个Shell终端启动的进程<br>&emsp;&emsp;&emsp;&emsp;        批处理进程：该进程是一个进程集合，负责按顺序启动其他的程序。<br>&emsp;&emsp;&emsp;&emsp;        守护进程：守护进程是一只运行的一种进程。独立于终端，并周期性地执行某种任务或等待处理某些发生的事件。<br>&emsp;&emsp;（3）进程的状态：<br>&emsp;&emsp;&emsp;&emsp;可运行状态：正在运行或正准备运行。<br>&emsp;&emsp;&emsp;&emsp;可中断的等待状态：处于阻塞状态，达到条件就运行。<br>&emsp;&emsp;&emsp;&emsp;不中断的等待状态：与可中断等待状态类似，但这个进程对进程的信号不做回应。<br>&emsp;&emsp;&emsp;&emsp;僵死状态：每个进程在结束后都会处于僵死状态，等待父进程调用进而释放资源，处于该状态的进程已结束。但是它的父进程还没有释放其系统资源。<br>&emsp;&emsp;&emsp;&emsp;暂停状态：表明此时的进程暂时停止，来接受某种特殊信号。<br>3.文件系统<br>&emsp;&emsp; Linux对各种文件系统支持是通过VFS的组件实现的，也就是虚拟文件系统。<br>    虚拟文件系统是Linux内核中国呢非常有用的一个方面，因为它为文件系统提供了一个通用的接口抽象，即VFS在用户和文件系统之间提供了一个交换层<br>4.设备驱动程序<br>&emsp;&emsp;设备驱动程序是Linux内核的主要部分。设备的分类如下：<br>&emsp;&emsp;&emsp;&emsp;字符设备：字符设备是能够像文件一样被访问的设备，由字符设备驱动程序来实现这种特点。<br>&emsp;&emsp;&emsp;&emsp;块设备：块设备也是通过设备节点来访问。块设备上能够过容纳文件系统。<br>&emsp;&emsp;&emsp;&emsp;网络设备：网络设备不同于字符设备和块设备，它是面向报文的而不是面向流的，它不支持随机访问，业没有请求缓冲区。<br>5.网络接口<br>&emsp;&emsp;网络接口可分为网络协议和网络驱动程序。网络协议负责实现每一种可能的网络传输协议。<br>&emsp;&emsp;&emsp;&emsp;5.1网络接口的命名<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;lo：local的缩写，一般指本地接口<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;eth0：ethernt的缩写一般用于以太网接口<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;wifi0:wifi是无限局域网，一般用于无限网接口。<br>&emsp;&emsp;5.2网络接口的工作<br>&emsp;&emsp;&emsp;&emsp;网络接口是用来发送和接受数据包的基本设备。系统中的所有网络接口组成一个链状结构，应用层的程序使用网络接口时按名称调用。<br>&emsp;&emsp;5.3虚拟网络接口<br>&emsp;&emsp;&emsp;&emsp;lo是最常见的接口之一，虚拟网络接口并不真实的从外界接受和发送数据包，而是在系统内部接受和发送数据包，因此虚拟网络接口不需要驱动程序。  </p>\n<h2 id=\"Linux目录及功能\"><a href=\"#Linux目录及功能\" class=\"headerlink\" title=\"Linux目录及功能\"></a>Linux目录及功能</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/                   虚拟系统的根目录，这里一般不存文件</span><br><span class=\"line\">/bin                二进制目录，用于存放用户级的GNU工具，如：cat</span><br><span class=\"line\">/boot               启动目录，存放Linux操作系统的内核和系统启动时所需要使用的文件</span><br><span class=\"line\">/dev                设备目录，创建设备节点，存放计算机中所有的设备，包括硬件</span><br><span class=\"line\">/etc                系统配置文件目录，只有root用户可以修改该文件</span><br><span class=\"line\">/home               主目录，创建用户目录</span><br><span class=\"line\">/lib                库目录，存放系统和应用程序的库文件</span><br><span class=\"line\">/media              媒体目录，可移动媒体设备的常用挂载点</span><br><span class=\"line\">/mnt                挂载目录，另一个可移动媒体设备的常用挂载点</span><br><span class=\"line\">/opt                可选目录，常用于存放第三方软件包和数据文件</span><br><span class=\"line\">/proc               进程目录，常在内存中，不占用任何磁盘空间，存放现有硬件及当前进程的相关信息</span><br><span class=\"line\">/root               root用户的主目录</span><br><span class=\"line\">/sbin               系统二进制目录，存放许多GNU管理级工具</span><br><span class=\"line\">/run                运行目录，存放系统运行时的运行数据</span><br><span class=\"line\">/srv                服务目录，存放的是所有与服务器相关的服务，即一些服务启动之后，这些服务需要访问的目录</span><br><span class=\"line\">/sys                系统目录，存放系统硬件信息的相关文件</span><br><span class=\"line\">/tmp                临时目录，普通用户或程序可以将临时文件存入该目录以方便与其他用户或程序交互信息。该目录所有的用户都可以进行访问，因此，重要的信息不因该存放在该目录中</span><br><span class=\"line\">/user               用户二进制目录，存放系统的应用程序和与命令相关的系统数据，其中包括系统的一些函数库及图形界面所需要点文件等</span><br><span class=\"line\">/var                可变目录，存放的是系统运行中经常变化的文件，如log日志文件等</span><br></pre></td></tr></table></figure>\n"},{"title":"C语言学习记录","date":"2022-07-06T13:07:32.000Z","_content":"\n## 简介\n\n&emsp;&emsp;今天，我买的计算机相关书籍回来了，正好将之前学漏的回炉重造下，关于学C还是学java我纠结了很久，最后还是打算先把C语言学完，然后在学java。现在从C语言最初的内容开始学，好了下面开始正式内容。\n\n##  什么是计算机程序？\n\n&emsp;&emsp;所谓程序，就是一组计算机能识别和执行的指令，每一条指令使计算机执行特定的操作。只要让计算机执行这个程序，计算机就会“自动地”执行各条指令。\n\n&emsp;&emsp;为了使计算机系统能实现各种功能，需要成千上万个程序组成。\n\n&emsp;\t计算机的一切操作都是由程序控制的，离开程序，计算机将一事无成\n\n## 计算机语言\n\n&emsp;&emsp;所谓语言，就是一门沟通的工具，人与人有中文和英文等等，则机器与机器也有自己独特的语言。为了能使人与计算机交互，需要创造一种计算机和人都能识别的语言，这就是计算机语言。计算机语言的发展分为以下阶段：\n\n&emsp;&emsp;**机器语言**  计算机工作是基于二进制，从根本上讲计算机只能识别由0和1组成的指令。这种计算机能直接识别和接受的二进制代码称为机器指令。机器指令的集合就是该计算机的机器语言。\n\n&emsp;&emsp;**符号语言**  为了克服机器语言上的困难，人们创造了符号语言，它用一些英文字母和数字表示一个指令，它需要用一种称为汇编程序的软件把符号语言转化为机器指令。一般，一条符号语言的指令对应转换为一条机器指令。转换过程称为“代真”或“汇编”，因此，符号语言又称为汇编语言。\n\n&emsp;&emsp;**高级语言**  为了克服第几语言的缺陷，人们创造了高级语言，它很接近于人们习惯使用的自然语言和数学语言。程序中用到的语句和指令都是用英文单词表示，程序中所用的运算符和运算表达式和人们日常生活中所用到的数学式子差不多，更容易理解。\n\n&emsp;&emsp;当然，计算机也不能直接识别高级程序，业需要进行翻译，我们把刚刚编写的代码称为源程序，把转换得到的程序称为目标程序。\n\n&emsp;&emsp;并且高级语言经历了非结构化的语言、结构化语言、面向对象的语言这三种过程。\n\n## C语言的特点\n\n1.语言简洁、紧凑、使用方便、灵活。\n\n2.运算符丰富\n\n3.数据类型丰富\n\n4.具有结构化的到控制语句\n\n5.语法限制不太严格，程序设计自由度大\n\n6.C语言允许直接访问物理地址，能进行bit的操作，能实现汇编语言的大部分功能，可以直接对硬件进行操作\n\n7.C语言编写的程序可移植性好\n\n8.生成的目标代码质量高，程序执行效率高\n\n## 最简单的C语言程序\n\n1.1要求在屏幕上输出一下一行信息。\n\nThis is a C program.\n\n思路：在主函数中用printf函数原样输出该以上文字。\n\n```c\n#include <stdio.h>\t\t\t\t\t\t\t\t\t\t//这是编译预处理指令\nint main()\t\t\t\t\t\t\t\t\t\t\t\t\t\t//定义主函数\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//函数开始的标志\n  printf(\"This is a C program.\\n\")\t\t//输出所指定的一行信息\n  return 0;\t\t\t\t\t\t\t\t\t\t\t\t\t\t//函数执行完毕时返回函数值0\n}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//函数结束的标志\n```\n\n\n##  C语言的基本结构\n\n第一天写到最简单的打印字符型程序\n\n```c\n#include <stdio.h>\t\n\nint main()\n\n{\n\n printf(\"This is a C program.\\n\")\t\n  \n return 0;\t\t\t\t\t\t\t\t\t\t\n\n\n}\t\n```\n\n通过这个简单的例子，可以看到，一个C语言程序的结构有一下特点   \n\n1.一个程序由一个或多个源程序文件组成  \n\n2.函数事C程序的主要组成部分  \n\n3.一个函数包括两个部分  \n\n4.函数总是从main函数开始执行  \n\n5.程序中要求计算机完成的操作时由函数中的C语句完成的  \n\n6.在每个数据声明和语句的最后必须有一个分号  \n\n7.C语言本省不提供输入输出语句  \n\n8.程序应当包含注释  \n\n\n\n###### 一个源程序文件可以包括3个部分\n\n1.预处理指令  \n\n2.全局声明  \n\n3.函数定义  \n\n##### 一个函数包括两个部分\n\n1.函数首部  \n\n2.函数体（声明部分/执行部分）  \n\n\n\n## 程序设计的任务\n\n1.问题分析：对问题进行分析，找出解决问题的规律  \n\n2.设计算法：设计出解题的方法和步骤  \n\n3.编写程序：根据得到的算法，用一种高级语言编写出源程序  \n\n4.对源程序进行编辑、编译和连接：得到可执行程序  \n\n5.运行程序，分析结果：运行可执行程序，得到运行结果  \n\n\n\n## 什么是算法\n\n算法从广义的角度来说，为解决一个问题而采取的方法和步骤就称为算法\n\n## 算法的特性\n\n1.有穷性  \n\n2.确定性  \n\n3.有零个或多个输入  \n\n4.有一个或多个输出\n\n5.有效性  \n\n## 流程图\n\n算法的表示分为一下三种种类：  \n\n1.传统型流程图  \n\n2.N-S流程图表示算法  \n\n3.用伪代码表示算法\n\n###### 三种基本结构\n\n1.顺序结构  \n\n2.选择结构  \n\n3.循环结构  \n\n\n\n循环结构又分为    \n\n1.当型（while）循环结构  \n\n2.直到型（until型）循环结构  \n\n\n\n以上三种基本结构又有一下共同特点:    \n\n1.只有一个入口  \n\n2.只有一个出口  \n\n## 结构化程序设计方法\n\n1.自顶向下  \n\n2.逐步细化  \n\n3.模块化设计  \n\n4.结构化编码  \n\n\n## 注意：这篇属于后面的篇章\n## 递归\n\n递归类似于函数的自身引用，如f(f(x))，就是自己重复调用自己，达到完成相同逻辑切重复的用途，在许多方面都有引用。  \n\n使用递归要注意一下两点：  \n\n1.自己得调用自己  \n\n2.要有结束条件  \n\n注意：第二点尤其重要，因为如果没有结束条件，就会陷入死循环，从而直到耗尽内存为止。  \n\n## 递归用途 汉诺塔\n\n一、汉诺塔（Tower of Hanoi），又称河内塔，是一个源于印度古老传说的益智玩具。大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。  \n![hanoi](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/20210427074620328.gif)\n\n```c\n#include <stdio.h>\nvoid hanoi(int n,char x,char y,char z);\nvoid hanoi(int n,char x,char y,char z)\n{\n\tif(n==1)\n\t{\n\t\tprintf(\"%c-->%c\\n\",x,z);\n\t}\n\telse\n\t{\n\t\thanoi(n-1,x,z,y);\n\t\tprintf(\"%c-->%c\\n\",x,z);\n\t\thanoi(n-1,y,x,z);\n\t}\n}\nint main()\n{\n\tint n;\n\tprintf(\"请输入汉诺塔的层数：\");\n\tscanf(\"%d\",&n);\n\thanoi(n,'X','Y','Z');\n\treturn 0;\n}\n\n```\n\n下面是运行结果：  \n\n![运行](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/%E6%88%AA%E5%B1%8F2022-07-09%20%E4%B8%8B%E5%8D%8810.26.38.png)\n\n下面是代码逻辑图hanoi改了下，变成了hanio_step意思和逻辑不改变:  \n\n![逻辑](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/e51dd0cb01e844a49683da13e756e937.png)\n\n## 结构体\n一般用的变量互相独立，无内在联系，但有些数据有内在联系，成组出现，例如一个学生的学号，姓名，性别……  \n这种一般无法用数组存储，因为数组一个只能存放同一类型的数据，所以用户可以建立由不同类型数据组成的组合型的数据结构，它称为结构体。  \n\n声明一个结构体类型的一般形式为：  \n```\nstruct 结构体名\n{\n\t成员1;\n\t成员2；\n\t……\n\t成员n;\n};\n```\n例如：图书的标题、作者、价格、日期、\n```\nstruct Book\n{\n\tchar title[128];\n\tchar author[40];\n\tfloat price;\n\tunsigned int date;\n\tchar publisher[40];\n};\n```\n定义结构体变量时，可以在末尾;前定义变量名，也可以在main函数中定义\n区别是一个是全局变量，另一个则是局部变量。 \n成员声明具体如下：   \n```\n类型名 成员名;\n```\n\n## 访问结构体\n访问结构体成员需要用到.点运算符具体用法如下：  \n```\n结构体名.成员名\n```\n注意：每一个成员是结构体中的一个域。 \n## 初始化数组\n在末尾的名字后加等号用大括号括起来，用逗号分开，直接输入相应的值，具体如下:\n```\nstruct Book\n{       \n        char title[128];\n        char author[40];\n        float price; \n        unsigned int date;\n        char publisher[40];\n}book={\"name\",\"author\",49,2022/3/2,'k'};\n初始化指定成员，用点运算符，具体语句为：.成员名=值，\n\n## 结构体嵌套\n指在一个结构体里面有另一个结构体。 \n例如： \n```\nstruct 结构体名\n{\n\tstruct 结构体名 名称；\n}结构体名={初始化值};\n```\n## 访问嵌套结构体成员\n用点号运算符，一层一层用点号进入\n## 结构体数组\n定义方法如下：  \n方法1:  \n```\nstruct 结构体名称\n{\n\t结构体成员；\n}数组名[长度];\n```\n方法2:  \n```\nstruct 结构体名称\n{\n\t结构体成员;\n};\nstruct 结构体名称 数组名[长度];\n```\n在声明结构体后面改成数组形式\n\n## 初始化结构体数组\n同样用，号隔开录入  \n\n## 结构体指针 \nstruct Book * pt;  \npt=&book；  \n指向结构体的指针\n因为结构体变量名不是指向结构体地址的，所以取值必须使用取值运算符例如：pt=&book；  \n## 通过结构体指针访问结构体成员两种方法：\n1.\n(*结构体指针).成员名\n因为点运算符的优先级高于*所以需要使用小括号括起来\n2.\n结构体指针->成员名\n\n## 文件处理\n## 程序执行流程\n输入->处理->输出。 \n\n## 文本文件与二进制文件\n\n## 打开与关闭\n注意：在完成对一个文件的读写操作之后，你必须将其关闭。  \n打开文件使用函数是 fopen\nfopen 用于打开一个文件用于返回文件指针\nfopen 路径 打开模式\n关闭文件使用的函数是 \n\n\n","source":"_posts/2022-07-06-C语言学习记录_day.md","raw":"---\ntitle: C语言学习记录\ndate: 2022-07-06 21:07:32\ntags: [C]\ncategories: [设计开发, C语言]\n---\n\n## 简介\n\n&emsp;&emsp;今天，我买的计算机相关书籍回来了，正好将之前学漏的回炉重造下，关于学C还是学java我纠结了很久，最后还是打算先把C语言学完，然后在学java。现在从C语言最初的内容开始学，好了下面开始正式内容。\n\n##  什么是计算机程序？\n\n&emsp;&emsp;所谓程序，就是一组计算机能识别和执行的指令，每一条指令使计算机执行特定的操作。只要让计算机执行这个程序，计算机就会“自动地”执行各条指令。\n\n&emsp;&emsp;为了使计算机系统能实现各种功能，需要成千上万个程序组成。\n\n&emsp;\t计算机的一切操作都是由程序控制的，离开程序，计算机将一事无成\n\n## 计算机语言\n\n&emsp;&emsp;所谓语言，就是一门沟通的工具，人与人有中文和英文等等，则机器与机器也有自己独特的语言。为了能使人与计算机交互，需要创造一种计算机和人都能识别的语言，这就是计算机语言。计算机语言的发展分为以下阶段：\n\n&emsp;&emsp;**机器语言**  计算机工作是基于二进制，从根本上讲计算机只能识别由0和1组成的指令。这种计算机能直接识别和接受的二进制代码称为机器指令。机器指令的集合就是该计算机的机器语言。\n\n&emsp;&emsp;**符号语言**  为了克服机器语言上的困难，人们创造了符号语言，它用一些英文字母和数字表示一个指令，它需要用一种称为汇编程序的软件把符号语言转化为机器指令。一般，一条符号语言的指令对应转换为一条机器指令。转换过程称为“代真”或“汇编”，因此，符号语言又称为汇编语言。\n\n&emsp;&emsp;**高级语言**  为了克服第几语言的缺陷，人们创造了高级语言，它很接近于人们习惯使用的自然语言和数学语言。程序中用到的语句和指令都是用英文单词表示，程序中所用的运算符和运算表达式和人们日常生活中所用到的数学式子差不多，更容易理解。\n\n&emsp;&emsp;当然，计算机也不能直接识别高级程序，业需要进行翻译，我们把刚刚编写的代码称为源程序，把转换得到的程序称为目标程序。\n\n&emsp;&emsp;并且高级语言经历了非结构化的语言、结构化语言、面向对象的语言这三种过程。\n\n## C语言的特点\n\n1.语言简洁、紧凑、使用方便、灵活。\n\n2.运算符丰富\n\n3.数据类型丰富\n\n4.具有结构化的到控制语句\n\n5.语法限制不太严格，程序设计自由度大\n\n6.C语言允许直接访问物理地址，能进行bit的操作，能实现汇编语言的大部分功能，可以直接对硬件进行操作\n\n7.C语言编写的程序可移植性好\n\n8.生成的目标代码质量高，程序执行效率高\n\n## 最简单的C语言程序\n\n1.1要求在屏幕上输出一下一行信息。\n\nThis is a C program.\n\n思路：在主函数中用printf函数原样输出该以上文字。\n\n```c\n#include <stdio.h>\t\t\t\t\t\t\t\t\t\t//这是编译预处理指令\nint main()\t\t\t\t\t\t\t\t\t\t\t\t\t\t//定义主函数\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//函数开始的标志\n  printf(\"This is a C program.\\n\")\t\t//输出所指定的一行信息\n  return 0;\t\t\t\t\t\t\t\t\t\t\t\t\t\t//函数执行完毕时返回函数值0\n}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//函数结束的标志\n```\n\n\n##  C语言的基本结构\n\n第一天写到最简单的打印字符型程序\n\n```c\n#include <stdio.h>\t\n\nint main()\n\n{\n\n printf(\"This is a C program.\\n\")\t\n  \n return 0;\t\t\t\t\t\t\t\t\t\t\n\n\n}\t\n```\n\n通过这个简单的例子，可以看到，一个C语言程序的结构有一下特点   \n\n1.一个程序由一个或多个源程序文件组成  \n\n2.函数事C程序的主要组成部分  \n\n3.一个函数包括两个部分  \n\n4.函数总是从main函数开始执行  \n\n5.程序中要求计算机完成的操作时由函数中的C语句完成的  \n\n6.在每个数据声明和语句的最后必须有一个分号  \n\n7.C语言本省不提供输入输出语句  \n\n8.程序应当包含注释  \n\n\n\n###### 一个源程序文件可以包括3个部分\n\n1.预处理指令  \n\n2.全局声明  \n\n3.函数定义  \n\n##### 一个函数包括两个部分\n\n1.函数首部  \n\n2.函数体（声明部分/执行部分）  \n\n\n\n## 程序设计的任务\n\n1.问题分析：对问题进行分析，找出解决问题的规律  \n\n2.设计算法：设计出解题的方法和步骤  \n\n3.编写程序：根据得到的算法，用一种高级语言编写出源程序  \n\n4.对源程序进行编辑、编译和连接：得到可执行程序  \n\n5.运行程序，分析结果：运行可执行程序，得到运行结果  \n\n\n\n## 什么是算法\n\n算法从广义的角度来说，为解决一个问题而采取的方法和步骤就称为算法\n\n## 算法的特性\n\n1.有穷性  \n\n2.确定性  \n\n3.有零个或多个输入  \n\n4.有一个或多个输出\n\n5.有效性  \n\n## 流程图\n\n算法的表示分为一下三种种类：  \n\n1.传统型流程图  \n\n2.N-S流程图表示算法  \n\n3.用伪代码表示算法\n\n###### 三种基本结构\n\n1.顺序结构  \n\n2.选择结构  \n\n3.循环结构  \n\n\n\n循环结构又分为    \n\n1.当型（while）循环结构  \n\n2.直到型（until型）循环结构  \n\n\n\n以上三种基本结构又有一下共同特点:    \n\n1.只有一个入口  \n\n2.只有一个出口  \n\n## 结构化程序设计方法\n\n1.自顶向下  \n\n2.逐步细化  \n\n3.模块化设计  \n\n4.结构化编码  \n\n\n## 注意：这篇属于后面的篇章\n## 递归\n\n递归类似于函数的自身引用，如f(f(x))，就是自己重复调用自己，达到完成相同逻辑切重复的用途，在许多方面都有引用。  \n\n使用递归要注意一下两点：  \n\n1.自己得调用自己  \n\n2.要有结束条件  \n\n注意：第二点尤其重要，因为如果没有结束条件，就会陷入死循环，从而直到耗尽内存为止。  \n\n## 递归用途 汉诺塔\n\n一、汉诺塔（Tower of Hanoi），又称河内塔，是一个源于印度古老传说的益智玩具。大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。  \n![hanoi](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/20210427074620328.gif)\n\n```c\n#include <stdio.h>\nvoid hanoi(int n,char x,char y,char z);\nvoid hanoi(int n,char x,char y,char z)\n{\n\tif(n==1)\n\t{\n\t\tprintf(\"%c-->%c\\n\",x,z);\n\t}\n\telse\n\t{\n\t\thanoi(n-1,x,z,y);\n\t\tprintf(\"%c-->%c\\n\",x,z);\n\t\thanoi(n-1,y,x,z);\n\t}\n}\nint main()\n{\n\tint n;\n\tprintf(\"请输入汉诺塔的层数：\");\n\tscanf(\"%d\",&n);\n\thanoi(n,'X','Y','Z');\n\treturn 0;\n}\n\n```\n\n下面是运行结果：  \n\n![运行](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/%E6%88%AA%E5%B1%8F2022-07-09%20%E4%B8%8B%E5%8D%8810.26.38.png)\n\n下面是代码逻辑图hanoi改了下，变成了hanio_step意思和逻辑不改变:  \n\n![逻辑](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/e51dd0cb01e844a49683da13e756e937.png)\n\n## 结构体\n一般用的变量互相独立，无内在联系，但有些数据有内在联系，成组出现，例如一个学生的学号，姓名，性别……  \n这种一般无法用数组存储，因为数组一个只能存放同一类型的数据，所以用户可以建立由不同类型数据组成的组合型的数据结构，它称为结构体。  \n\n声明一个结构体类型的一般形式为：  \n```\nstruct 结构体名\n{\n\t成员1;\n\t成员2；\n\t……\n\t成员n;\n};\n```\n例如：图书的标题、作者、价格、日期、\n```\nstruct Book\n{\n\tchar title[128];\n\tchar author[40];\n\tfloat price;\n\tunsigned int date;\n\tchar publisher[40];\n};\n```\n定义结构体变量时，可以在末尾;前定义变量名，也可以在main函数中定义\n区别是一个是全局变量，另一个则是局部变量。 \n成员声明具体如下：   \n```\n类型名 成员名;\n```\n\n## 访问结构体\n访问结构体成员需要用到.点运算符具体用法如下：  \n```\n结构体名.成员名\n```\n注意：每一个成员是结构体中的一个域。 \n## 初始化数组\n在末尾的名字后加等号用大括号括起来，用逗号分开，直接输入相应的值，具体如下:\n```\nstruct Book\n{       \n        char title[128];\n        char author[40];\n        float price; \n        unsigned int date;\n        char publisher[40];\n}book={\"name\",\"author\",49,2022/3/2,'k'};\n初始化指定成员，用点运算符，具体语句为：.成员名=值，\n\n## 结构体嵌套\n指在一个结构体里面有另一个结构体。 \n例如： \n```\nstruct 结构体名\n{\n\tstruct 结构体名 名称；\n}结构体名={初始化值};\n```\n## 访问嵌套结构体成员\n用点号运算符，一层一层用点号进入\n## 结构体数组\n定义方法如下：  \n方法1:  \n```\nstruct 结构体名称\n{\n\t结构体成员；\n}数组名[长度];\n```\n方法2:  \n```\nstruct 结构体名称\n{\n\t结构体成员;\n};\nstruct 结构体名称 数组名[长度];\n```\n在声明结构体后面改成数组形式\n\n## 初始化结构体数组\n同样用，号隔开录入  \n\n## 结构体指针 \nstruct Book * pt;  \npt=&book；  \n指向结构体的指针\n因为结构体变量名不是指向结构体地址的，所以取值必须使用取值运算符例如：pt=&book；  \n## 通过结构体指针访问结构体成员两种方法：\n1.\n(*结构体指针).成员名\n因为点运算符的优先级高于*所以需要使用小括号括起来\n2.\n结构体指针->成员名\n\n## 文件处理\n## 程序执行流程\n输入->处理->输出。 \n\n## 文本文件与二进制文件\n\n## 打开与关闭\n注意：在完成对一个文件的读写操作之后，你必须将其关闭。  \n打开文件使用函数是 fopen\nfopen 用于打开一个文件用于返回文件指针\nfopen 路径 打开模式\n关闭文件使用的函数是 \n\n\n","slug":"2022-07-06-C语言学习记录_day","published":1,"updated":"2022-11-02T02:48:43.473Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8n0009u19khpaf6t4o","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>&emsp;&emsp;今天，我买的计算机相关书籍回来了，正好将之前学漏的回炉重造下，关于学C还是学java我纠结了很久，最后还是打算先把C语言学完，然后在学java。现在从C语言最初的内容开始学，好了下面开始正式内容。</p>\n<h2 id=\"什么是计算机程序？\"><a href=\"#什么是计算机程序？\" class=\"headerlink\" title=\"什么是计算机程序？\"></a>什么是计算机程序？</h2><p>&emsp;&emsp;所谓程序，就是一组计算机能识别和执行的指令，每一条指令使计算机执行特定的操作。只要让计算机执行这个程序，计算机就会“自动地”执行各条指令。</p>\n<p>&emsp;&emsp;为了使计算机系统能实现各种功能，需要成千上万个程序组成。</p>\n<p>&emsp;    计算机的一切操作都是由程序控制的，离开程序，计算机将一事无成</p>\n<h2 id=\"计算机语言\"><a href=\"#计算机语言\" class=\"headerlink\" title=\"计算机语言\"></a>计算机语言</h2><p>&emsp;&emsp;所谓语言，就是一门沟通的工具，人与人有中文和英文等等，则机器与机器也有自己独特的语言。为了能使人与计算机交互，需要创造一种计算机和人都能识别的语言，这就是计算机语言。计算机语言的发展分为以下阶段：</p>\n<p>&emsp;&emsp;<strong>机器语言</strong>  计算机工作是基于二进制，从根本上讲计算机只能识别由0和1组成的指令。这种计算机能直接识别和接受的二进制代码称为机器指令。机器指令的集合就是该计算机的机器语言。</p>\n<p>&emsp;&emsp;<strong>符号语言</strong>  为了克服机器语言上的困难，人们创造了符号语言，它用一些英文字母和数字表示一个指令，它需要用一种称为汇编程序的软件把符号语言转化为机器指令。一般，一条符号语言的指令对应转换为一条机器指令。转换过程称为“代真”或“汇编”，因此，符号语言又称为汇编语言。</p>\n<p>&emsp;&emsp;<strong>高级语言</strong>  为了克服第几语言的缺陷，人们创造了高级语言，它很接近于人们习惯使用的自然语言和数学语言。程序中用到的语句和指令都是用英文单词表示，程序中所用的运算符和运算表达式和人们日常生活中所用到的数学式子差不多，更容易理解。</p>\n<p>&emsp;&emsp;当然，计算机也不能直接识别高级程序，业需要进行翻译，我们把刚刚编写的代码称为源程序，把转换得到的程序称为目标程序。</p>\n<p>&emsp;&emsp;并且高级语言经历了非结构化的语言、结构化语言、面向对象的语言这三种过程。</p>\n<h2 id=\"C语言的特点\"><a href=\"#C语言的特点\" class=\"headerlink\" title=\"C语言的特点\"></a>C语言的特点</h2><p>1.语言简洁、紧凑、使用方便、灵活。</p>\n<p>2.运算符丰富</p>\n<p>3.数据类型丰富</p>\n<p>4.具有结构化的到控制语句</p>\n<p>5.语法限制不太严格，程序设计自由度大</p>\n<p>6.C语言允许直接访问物理地址，能进行bit的操作，能实现汇编语言的大部分功能，可以直接对硬件进行操作</p>\n<p>7.C语言编写的程序可移植性好</p>\n<p>8.生成的目标代码质量高，程序执行效率高</p>\n<h2 id=\"最简单的C语言程序\"><a href=\"#最简单的C语言程序\" class=\"headerlink\" title=\"最简单的C语言程序\"></a>最简单的C语言程序</h2><p>1.1要求在屏幕上输出一下一行信息。</p>\n<p>This is a C program.</p>\n<p>思路：在主函数中用printf函数原样输出该以上文字。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span>\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//这是编译预处理指令</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//定义主函数</span></span><br><span class=\"line\">&#123;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//函数开始的标志</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This is a C program.\\n&quot;</span>)\t\t<span class=\"comment\">//输出所指定的一行信息</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//函数执行完毕时返回函数值0</span></span><br><span class=\"line\">&#125;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//函数结束的标志</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"C语言的基本结构\"><a href=\"#C语言的基本结构\" class=\"headerlink\" title=\"C语言的基本结构\"></a>C语言的基本结构</h2><p>第一天写到最简单的打印字符型程序</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span>\t</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This is a C program.\\n&quot;</span>)\t</span><br><span class=\"line\">  </span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t\t\t\t\t\t\t\t\t\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;\t</span><br></pre></td></tr></table></figure>\n\n<p>通过这个简单的例子，可以看到，一个C语言程序的结构有一下特点   </p>\n<p>1.一个程序由一个或多个源程序文件组成  </p>\n<p>2.函数事C程序的主要组成部分  </p>\n<p>3.一个函数包括两个部分  </p>\n<p>4.函数总是从main函数开始执行  </p>\n<p>5.程序中要求计算机完成的操作时由函数中的C语句完成的  </p>\n<p>6.在每个数据声明和语句的最后必须有一个分号  </p>\n<p>7.C语言本省不提供输入输出语句  </p>\n<p>8.程序应当包含注释  </p>\n<h6 id=\"一个源程序文件可以包括3个部分\"><a href=\"#一个源程序文件可以包括3个部分\" class=\"headerlink\" title=\"一个源程序文件可以包括3个部分\"></a>一个源程序文件可以包括3个部分</h6><p>1.预处理指令  </p>\n<p>2.全局声明  </p>\n<p>3.函数定义  </p>\n<h5 id=\"一个函数包括两个部分\"><a href=\"#一个函数包括两个部分\" class=\"headerlink\" title=\"一个函数包括两个部分\"></a>一个函数包括两个部分</h5><p>1.函数首部  </p>\n<p>2.函数体（声明部分/执行部分）  </p>\n<h2 id=\"程序设计的任务\"><a href=\"#程序设计的任务\" class=\"headerlink\" title=\"程序设计的任务\"></a>程序设计的任务</h2><p>1.问题分析：对问题进行分析，找出解决问题的规律  </p>\n<p>2.设计算法：设计出解题的方法和步骤  </p>\n<p>3.编写程序：根据得到的算法，用一种高级语言编写出源程序  </p>\n<p>4.对源程序进行编辑、编译和连接：得到可执行程序  </p>\n<p>5.运行程序，分析结果：运行可执行程序，得到运行结果  </p>\n<h2 id=\"什么是算法\"><a href=\"#什么是算法\" class=\"headerlink\" title=\"什么是算法\"></a>什么是算法</h2><p>算法从广义的角度来说，为解决一个问题而采取的方法和步骤就称为算法</p>\n<h2 id=\"算法的特性\"><a href=\"#算法的特性\" class=\"headerlink\" title=\"算法的特性\"></a>算法的特性</h2><p>1.有穷性  </p>\n<p>2.确定性  </p>\n<p>3.有零个或多个输入  </p>\n<p>4.有一个或多个输出</p>\n<p>5.有效性  </p>\n<h2 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h2><p>算法的表示分为一下三种种类：  </p>\n<p>1.传统型流程图  </p>\n<p>2.N-S流程图表示算法  </p>\n<p>3.用伪代码表示算法</p>\n<h6 id=\"三种基本结构\"><a href=\"#三种基本结构\" class=\"headerlink\" title=\"三种基本结构\"></a>三种基本结构</h6><p>1.顺序结构  </p>\n<p>2.选择结构  </p>\n<p>3.循环结构  </p>\n<p>循环结构又分为    </p>\n<p>1.当型（while）循环结构  </p>\n<p>2.直到型（until型）循环结构  </p>\n<p>以上三种基本结构又有一下共同特点:    </p>\n<p>1.只有一个入口  </p>\n<p>2.只有一个出口  </p>\n<h2 id=\"结构化程序设计方法\"><a href=\"#结构化程序设计方法\" class=\"headerlink\" title=\"结构化程序设计方法\"></a>结构化程序设计方法</h2><p>1.自顶向下  </p>\n<p>2.逐步细化  </p>\n<p>3.模块化设计  </p>\n<p>4.结构化编码  </p>\n<h2 id=\"注意：这篇属于后面的篇章\"><a href=\"#注意：这篇属于后面的篇章\" class=\"headerlink\" title=\"注意：这篇属于后面的篇章\"></a>注意：这篇属于后面的篇章</h2><h2 id=\"递归\"><a href=\"#递归\" class=\"headerlink\" title=\"递归\"></a>递归</h2><p>递归类似于函数的自身引用，如f(f(x))，就是自己重复调用自己，达到完成相同逻辑切重复的用途，在许多方面都有引用。  </p>\n<p>使用递归要注意一下两点：  </p>\n<p>1.自己得调用自己  </p>\n<p>2.要有结束条件  </p>\n<p>注意：第二点尤其重要，因为如果没有结束条件，就会陷入死循环，从而直到耗尽内存为止。  </p>\n<h2 id=\"递归用途-汉诺塔\"><a href=\"#递归用途-汉诺塔\" class=\"headerlink\" title=\"递归用途 汉诺塔\"></a>递归用途 汉诺塔</h2><p>一、汉诺塔（Tower of Hanoi），又称河内塔，是一个源于印度古老传说的益智玩具。大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。<br><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/20210427074620328.gif\" alt=\"hanoi\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">hanoi</span><span class=\"params\">(<span class=\"type\">int</span> n,<span class=\"type\">char</span> x,<span class=\"type\">char</span> y,<span class=\"type\">char</span> z)</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">hanoi</span><span class=\"params\">(<span class=\"type\">int</span> n,<span class=\"type\">char</span> x,<span class=\"type\">char</span> y,<span class=\"type\">char</span> z)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c--&gt;%c\\n&quot;</span>,x,z);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\thanoi(n<span class=\"number\">-1</span>,x,z,y);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c--&gt;%c\\n&quot;</span>,x,z);</span><br><span class=\"line\">\t\thanoi(n<span class=\"number\">-1</span>,y,x,z);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入汉诺塔的层数：&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\thanoi(n,<span class=\"string\">&#x27;X&#x27;</span>,<span class=\"string\">&#x27;Y&#x27;</span>,<span class=\"string\">&#x27;Z&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>下面是运行结果：  </p>\n<p><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/%E6%88%AA%E5%B1%8F2022-07-09%20%E4%B8%8B%E5%8D%8810.26.38.png\" alt=\"运行\"></p>\n<p>下面是代码逻辑图hanoi改了下，变成了hanio_step意思和逻辑不改变:  </p>\n<p><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/e51dd0cb01e844a49683da13e756e937.png\" alt=\"逻辑\"></p>\n<h2 id=\"结构体\"><a href=\"#结构体\" class=\"headerlink\" title=\"结构体\"></a>结构体</h2><p>一般用的变量互相独立，无内在联系，但有些数据有内在联系，成组出现，例如一个学生的学号，姓名，性别……<br>这种一般无法用数组存储，因为数组一个只能存放同一类型的数据，所以用户可以建立由不同类型数据组成的组合型的数据结构，它称为结构体。  </p>\n<p>声明一个结构体类型的一般形式为：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct 结构体名</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t成员1;</span><br><span class=\"line\">\t成员2；</span><br><span class=\"line\">\t……</span><br><span class=\"line\">\t成员n;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>例如：图书的标题、作者、价格、日期、</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct Book</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tchar title[128];</span><br><span class=\"line\">\tchar author[40];</span><br><span class=\"line\">\tfloat price;</span><br><span class=\"line\">\tunsigned int date;</span><br><span class=\"line\">\tchar publisher[40];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>定义结构体变量时，可以在末尾;前定义变量名，也可以在main函数中定义<br>区别是一个是全局变量，另一个则是局部变量。<br>成员声明具体如下：   </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型名 成员名;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"访问结构体\"><a href=\"#访问结构体\" class=\"headerlink\" title=\"访问结构体\"></a>访问结构体</h2><p>访问结构体成员需要用到.点运算符具体用法如下：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">结构体名.成员名</span><br></pre></td></tr></table></figure>\n<p>注意：每一个成员是结构体中的一个域。 </p>\n<h2 id=\"初始化数组\"><a href=\"#初始化数组\" class=\"headerlink\" title=\"初始化数组\"></a>初始化数组</h2><p>在末尾的名字后加等号用大括号括起来，用逗号分开，直接输入相应的值，具体如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct Book</span><br><span class=\"line\">&#123;       </span><br><span class=\"line\">        char title[128];</span><br><span class=\"line\">        char author[40];</span><br><span class=\"line\">        float price; </span><br><span class=\"line\">        unsigned int date;</span><br><span class=\"line\">        char publisher[40];</span><br><span class=\"line\">&#125;book=&#123;&quot;name&quot;,&quot;author&quot;,49,2022/3/2,&#x27;k&#x27;&#125;;</span><br><span class=\"line\">初始化指定成员，用点运算符，具体语句为：.成员名=值，</span><br><span class=\"line\"></span><br><span class=\"line\">## 结构体嵌套</span><br><span class=\"line\">指在一个结构体里面有另一个结构体。 </span><br><span class=\"line\">例如： </span><br></pre></td></tr></table></figure>\n<p>struct 结构体名<br>{<br>    struct 结构体名 名称；<br>}结构体名={初始化值};</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 访问嵌套结构体成员</span><br><span class=\"line\">用点号运算符，一层一层用点号进入</span><br><span class=\"line\">## 结构体数组</span><br><span class=\"line\">定义方法如下：  </span><br><span class=\"line\">方法1:  </span><br></pre></td></tr></table></figure>\n<p>struct 结构体名称<br>{<br>    结构体成员；<br>}数组名[长度];</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法2:  </span><br></pre></td></tr></table></figure>\n<p>struct 结构体名称<br>{<br>    结构体成员;<br>};<br>struct 结构体名称 数组名[长度];</p>\n<pre><code>在声明结构体后面改成数组形式\n\n## 初始化结构体数组\n同样用，号隔开录入  \n\n## 结构体指针 \nstruct Book * pt;  \npt=&amp;book；  \n指向结构体的指针\n因为结构体变量名不是指向结构体地址的，所以取值必须使用取值运算符例如：pt=&amp;book；  \n## 通过结构体指针访问结构体成员两种方法：\n1.\n(*结构体指针).成员名\n因为点运算符的优先级高于*所以需要使用小括号括起来\n2.\n结构体指针-&gt;成员名\n\n## 文件处理\n## 程序执行流程\n输入-&gt;处理-&gt;输出。 \n\n## 文本文件与二进制文件\n\n## 打开与关闭\n注意：在完成对一个文件的读写操作之后，你必须将其关闭。  \n打开文件使用函数是 fopen\nfopen 用于打开一个文件用于返回文件指针\nfopen 路径 打开模式\n关闭文件使用的函数是 \n\n</code></pre>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>&emsp;&emsp;今天，我买的计算机相关书籍回来了，正好将之前学漏的回炉重造下，关于学C还是学java我纠结了很久，最后还是打算先把C语言学完，然后在学java。现在从C语言最初的内容开始学，好了下面开始正式内容。</p>\n<h2 id=\"什么是计算机程序？\"><a href=\"#什么是计算机程序？\" class=\"headerlink\" title=\"什么是计算机程序？\"></a>什么是计算机程序？</h2><p>&emsp;&emsp;所谓程序，就是一组计算机能识别和执行的指令，每一条指令使计算机执行特定的操作。只要让计算机执行这个程序，计算机就会“自动地”执行各条指令。</p>\n<p>&emsp;&emsp;为了使计算机系统能实现各种功能，需要成千上万个程序组成。</p>\n<p>&emsp;    计算机的一切操作都是由程序控制的，离开程序，计算机将一事无成</p>\n<h2 id=\"计算机语言\"><a href=\"#计算机语言\" class=\"headerlink\" title=\"计算机语言\"></a>计算机语言</h2><p>&emsp;&emsp;所谓语言，就是一门沟通的工具，人与人有中文和英文等等，则机器与机器也有自己独特的语言。为了能使人与计算机交互，需要创造一种计算机和人都能识别的语言，这就是计算机语言。计算机语言的发展分为以下阶段：</p>\n<p>&emsp;&emsp;<strong>机器语言</strong>  计算机工作是基于二进制，从根本上讲计算机只能识别由0和1组成的指令。这种计算机能直接识别和接受的二进制代码称为机器指令。机器指令的集合就是该计算机的机器语言。</p>\n<p>&emsp;&emsp;<strong>符号语言</strong>  为了克服机器语言上的困难，人们创造了符号语言，它用一些英文字母和数字表示一个指令，它需要用一种称为汇编程序的软件把符号语言转化为机器指令。一般，一条符号语言的指令对应转换为一条机器指令。转换过程称为“代真”或“汇编”，因此，符号语言又称为汇编语言。</p>\n<p>&emsp;&emsp;<strong>高级语言</strong>  为了克服第几语言的缺陷，人们创造了高级语言，它很接近于人们习惯使用的自然语言和数学语言。程序中用到的语句和指令都是用英文单词表示，程序中所用的运算符和运算表达式和人们日常生活中所用到的数学式子差不多，更容易理解。</p>\n<p>&emsp;&emsp;当然，计算机也不能直接识别高级程序，业需要进行翻译，我们把刚刚编写的代码称为源程序，把转换得到的程序称为目标程序。</p>\n<p>&emsp;&emsp;并且高级语言经历了非结构化的语言、结构化语言、面向对象的语言这三种过程。</p>\n<h2 id=\"C语言的特点\"><a href=\"#C语言的特点\" class=\"headerlink\" title=\"C语言的特点\"></a>C语言的特点</h2><p>1.语言简洁、紧凑、使用方便、灵活。</p>\n<p>2.运算符丰富</p>\n<p>3.数据类型丰富</p>\n<p>4.具有结构化的到控制语句</p>\n<p>5.语法限制不太严格，程序设计自由度大</p>\n<p>6.C语言允许直接访问物理地址，能进行bit的操作，能实现汇编语言的大部分功能，可以直接对硬件进行操作</p>\n<p>7.C语言编写的程序可移植性好</p>\n<p>8.生成的目标代码质量高，程序执行效率高</p>\n<h2 id=\"最简单的C语言程序\"><a href=\"#最简单的C语言程序\" class=\"headerlink\" title=\"最简单的C语言程序\"></a>最简单的C语言程序</h2><p>1.1要求在屏幕上输出一下一行信息。</p>\n<p>This is a C program.</p>\n<p>思路：在主函数中用printf函数原样输出该以上文字。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span>\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//这是编译预处理指令</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//定义主函数</span></span><br><span class=\"line\">&#123;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//函数开始的标志</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This is a C program.\\n&quot;</span>)\t\t<span class=\"comment\">//输出所指定的一行信息</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//函数执行完毕时返回函数值0</span></span><br><span class=\"line\">&#125;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//函数结束的标志</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"C语言的基本结构\"><a href=\"#C语言的基本结构\" class=\"headerlink\" title=\"C语言的基本结构\"></a>C语言的基本结构</h2><p>第一天写到最简单的打印字符型程序</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span>\t</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This is a C program.\\n&quot;</span>)\t</span><br><span class=\"line\">  </span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t\t\t\t\t\t\t\t\t\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;\t</span><br></pre></td></tr></table></figure>\n\n<p>通过这个简单的例子，可以看到，一个C语言程序的结构有一下特点   </p>\n<p>1.一个程序由一个或多个源程序文件组成  </p>\n<p>2.函数事C程序的主要组成部分  </p>\n<p>3.一个函数包括两个部分  </p>\n<p>4.函数总是从main函数开始执行  </p>\n<p>5.程序中要求计算机完成的操作时由函数中的C语句完成的  </p>\n<p>6.在每个数据声明和语句的最后必须有一个分号  </p>\n<p>7.C语言本省不提供输入输出语句  </p>\n<p>8.程序应当包含注释  </p>\n<h6 id=\"一个源程序文件可以包括3个部分\"><a href=\"#一个源程序文件可以包括3个部分\" class=\"headerlink\" title=\"一个源程序文件可以包括3个部分\"></a>一个源程序文件可以包括3个部分</h6><p>1.预处理指令  </p>\n<p>2.全局声明  </p>\n<p>3.函数定义  </p>\n<h5 id=\"一个函数包括两个部分\"><a href=\"#一个函数包括两个部分\" class=\"headerlink\" title=\"一个函数包括两个部分\"></a>一个函数包括两个部分</h5><p>1.函数首部  </p>\n<p>2.函数体（声明部分/执行部分）  </p>\n<h2 id=\"程序设计的任务\"><a href=\"#程序设计的任务\" class=\"headerlink\" title=\"程序设计的任务\"></a>程序设计的任务</h2><p>1.问题分析：对问题进行分析，找出解决问题的规律  </p>\n<p>2.设计算法：设计出解题的方法和步骤  </p>\n<p>3.编写程序：根据得到的算法，用一种高级语言编写出源程序  </p>\n<p>4.对源程序进行编辑、编译和连接：得到可执行程序  </p>\n<p>5.运行程序，分析结果：运行可执行程序，得到运行结果  </p>\n<h2 id=\"什么是算法\"><a href=\"#什么是算法\" class=\"headerlink\" title=\"什么是算法\"></a>什么是算法</h2><p>算法从广义的角度来说，为解决一个问题而采取的方法和步骤就称为算法</p>\n<h2 id=\"算法的特性\"><a href=\"#算法的特性\" class=\"headerlink\" title=\"算法的特性\"></a>算法的特性</h2><p>1.有穷性  </p>\n<p>2.确定性  </p>\n<p>3.有零个或多个输入  </p>\n<p>4.有一个或多个输出</p>\n<p>5.有效性  </p>\n<h2 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h2><p>算法的表示分为一下三种种类：  </p>\n<p>1.传统型流程图  </p>\n<p>2.N-S流程图表示算法  </p>\n<p>3.用伪代码表示算法</p>\n<h6 id=\"三种基本结构\"><a href=\"#三种基本结构\" class=\"headerlink\" title=\"三种基本结构\"></a>三种基本结构</h6><p>1.顺序结构  </p>\n<p>2.选择结构  </p>\n<p>3.循环结构  </p>\n<p>循环结构又分为    </p>\n<p>1.当型（while）循环结构  </p>\n<p>2.直到型（until型）循环结构  </p>\n<p>以上三种基本结构又有一下共同特点:    </p>\n<p>1.只有一个入口  </p>\n<p>2.只有一个出口  </p>\n<h2 id=\"结构化程序设计方法\"><a href=\"#结构化程序设计方法\" class=\"headerlink\" title=\"结构化程序设计方法\"></a>结构化程序设计方法</h2><p>1.自顶向下  </p>\n<p>2.逐步细化  </p>\n<p>3.模块化设计  </p>\n<p>4.结构化编码  </p>\n<h2 id=\"注意：这篇属于后面的篇章\"><a href=\"#注意：这篇属于后面的篇章\" class=\"headerlink\" title=\"注意：这篇属于后面的篇章\"></a>注意：这篇属于后面的篇章</h2><h2 id=\"递归\"><a href=\"#递归\" class=\"headerlink\" title=\"递归\"></a>递归</h2><p>递归类似于函数的自身引用，如f(f(x))，就是自己重复调用自己，达到完成相同逻辑切重复的用途，在许多方面都有引用。  </p>\n<p>使用递归要注意一下两点：  </p>\n<p>1.自己得调用自己  </p>\n<p>2.要有结束条件  </p>\n<p>注意：第二点尤其重要，因为如果没有结束条件，就会陷入死循环，从而直到耗尽内存为止。  </p>\n<h2 id=\"递归用途-汉诺塔\"><a href=\"#递归用途-汉诺塔\" class=\"headerlink\" title=\"递归用途 汉诺塔\"></a>递归用途 汉诺塔</h2><p>一、汉诺塔（Tower of Hanoi），又称河内塔，是一个源于印度古老传说的益智玩具。大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。<br><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/20210427074620328.gif\" alt=\"hanoi\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">hanoi</span><span class=\"params\">(<span class=\"type\">int</span> n,<span class=\"type\">char</span> x,<span class=\"type\">char</span> y,<span class=\"type\">char</span> z)</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">hanoi</span><span class=\"params\">(<span class=\"type\">int</span> n,<span class=\"type\">char</span> x,<span class=\"type\">char</span> y,<span class=\"type\">char</span> z)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c--&gt;%c\\n&quot;</span>,x,z);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\thanoi(n<span class=\"number\">-1</span>,x,z,y);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c--&gt;%c\\n&quot;</span>,x,z);</span><br><span class=\"line\">\t\thanoi(n<span class=\"number\">-1</span>,y,x,z);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入汉诺塔的层数：&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\thanoi(n,<span class=\"string\">&#x27;X&#x27;</span>,<span class=\"string\">&#x27;Y&#x27;</span>,<span class=\"string\">&#x27;Z&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>下面是运行结果：  </p>\n<p><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/%E6%88%AA%E5%B1%8F2022-07-09%20%E4%B8%8B%E5%8D%8810.26.38.png\" alt=\"运行\"></p>\n<p>下面是代码逻辑图hanoi改了下，变成了hanio_step意思和逻辑不改变:  </p>\n<p><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/e51dd0cb01e844a49683da13e756e937.png\" alt=\"逻辑\"></p>\n<h2 id=\"结构体\"><a href=\"#结构体\" class=\"headerlink\" title=\"结构体\"></a>结构体</h2><p>一般用的变量互相独立，无内在联系，但有些数据有内在联系，成组出现，例如一个学生的学号，姓名，性别……<br>这种一般无法用数组存储，因为数组一个只能存放同一类型的数据，所以用户可以建立由不同类型数据组成的组合型的数据结构，它称为结构体。  </p>\n<p>声明一个结构体类型的一般形式为：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct 结构体名</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t成员1;</span><br><span class=\"line\">\t成员2；</span><br><span class=\"line\">\t……</span><br><span class=\"line\">\t成员n;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>例如：图书的标题、作者、价格、日期、</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct Book</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tchar title[128];</span><br><span class=\"line\">\tchar author[40];</span><br><span class=\"line\">\tfloat price;</span><br><span class=\"line\">\tunsigned int date;</span><br><span class=\"line\">\tchar publisher[40];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>定义结构体变量时，可以在末尾;前定义变量名，也可以在main函数中定义<br>区别是一个是全局变量，另一个则是局部变量。<br>成员声明具体如下：   </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型名 成员名;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"访问结构体\"><a href=\"#访问结构体\" class=\"headerlink\" title=\"访问结构体\"></a>访问结构体</h2><p>访问结构体成员需要用到.点运算符具体用法如下：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">结构体名.成员名</span><br></pre></td></tr></table></figure>\n<p>注意：每一个成员是结构体中的一个域。 </p>\n<h2 id=\"初始化数组\"><a href=\"#初始化数组\" class=\"headerlink\" title=\"初始化数组\"></a>初始化数组</h2><p>在末尾的名字后加等号用大括号括起来，用逗号分开，直接输入相应的值，具体如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct Book</span><br><span class=\"line\">&#123;       </span><br><span class=\"line\">        char title[128];</span><br><span class=\"line\">        char author[40];</span><br><span class=\"line\">        float price; </span><br><span class=\"line\">        unsigned int date;</span><br><span class=\"line\">        char publisher[40];</span><br><span class=\"line\">&#125;book=&#123;&quot;name&quot;,&quot;author&quot;,49,2022/3/2,&#x27;k&#x27;&#125;;</span><br><span class=\"line\">初始化指定成员，用点运算符，具体语句为：.成员名=值，</span><br><span class=\"line\"></span><br><span class=\"line\">## 结构体嵌套</span><br><span class=\"line\">指在一个结构体里面有另一个结构体。 </span><br><span class=\"line\">例如： </span><br></pre></td></tr></table></figure>\n<p>struct 结构体名<br>{<br>    struct 结构体名 名称；<br>}结构体名={初始化值};</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 访问嵌套结构体成员</span><br><span class=\"line\">用点号运算符，一层一层用点号进入</span><br><span class=\"line\">## 结构体数组</span><br><span class=\"line\">定义方法如下：  </span><br><span class=\"line\">方法1:  </span><br></pre></td></tr></table></figure>\n<p>struct 结构体名称<br>{<br>    结构体成员；<br>}数组名[长度];</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法2:  </span><br></pre></td></tr></table></figure>\n<p>struct 结构体名称<br>{<br>    结构体成员;<br>};<br>struct 结构体名称 数组名[长度];</p>\n<pre><code>在声明结构体后面改成数组形式\n\n## 初始化结构体数组\n同样用，号隔开录入  \n\n## 结构体指针 \nstruct Book * pt;  \npt=&amp;book；  \n指向结构体的指针\n因为结构体变量名不是指向结构体地址的，所以取值必须使用取值运算符例如：pt=&amp;book；  \n## 通过结构体指针访问结构体成员两种方法：\n1.\n(*结构体指针).成员名\n因为点运算符的优先级高于*所以需要使用小括号括起来\n2.\n结构体指针-&gt;成员名\n\n## 文件处理\n## 程序执行流程\n输入-&gt;处理-&gt;输出。 \n\n## 文本文件与二进制文件\n\n## 打开与关闭\n注意：在完成对一个文件的读写操作之后，你必须将其关闭。  \n打开文件使用函数是 fopen\nfopen 用于打开一个文件用于返回文件指针\nfopen 路径 打开模式\n关闭文件使用的函数是 \n\n</code></pre>\n"},{"title":"数组实现学生成绩管理系统","date":"2022-10-25T11:36:11.000Z","_content":"## 引言\n因为学生管理系统类似数据库，需要实现增删改查，来管理其数据，所以该管理系统也应该实现这四个功能，这里使用数组实现，且具体实现如下。  \n## 源代码\n具体源代码存放在gitee仓库地址如下  \n\n{% copy https://gitee.com/thebyte/work.git %}\n\n## 学生成绩管理系统之目录  \n```\n//菜单\nvoid menu()\n{\n    printf(\"===============\\n\");\n    printf(\"1、学生成绩录入\\n\");\n    printf(\"2、学生成绩删除\\n\");\n    printf(\"3、学生成绩修改\\n\");\n    printf(\"4、学生成绩查询\\n\");\n    printf(\"5、学生成绩打印\\n\");\n    printf(\"6、排       序\\n\");\n    printf(\"0、退       出\\n\");\n    printf(\"===============\\n\");\n}\n```\n这里使用printf()函数直接输出  \n\n## 学生成绩管理系统之录入\n```\n//录入成绩\nvoid add()\n{\n\n    for (int i = 0; i < max - actual;i++)\n    {\n        int temp,k=0;//temp用来存放学号\n        //当数组有成绩时\n        if (actual>0) {\n            printf(\"请输入第%d位学生的学号为：\", actual+1);\n            scanf(\"%d\", &temp);\n            //判断是否有重复学号\n            while (temp!=student[k][0]&&k<actual)\n            {\n                k++;\n            }\n            if(temp==student[k][0])\n            {\n                //如果在数组中找到相同学号，则跳出本次循环重新输入\n                printf(\"学号重复请重新输入!\\n\");\n                continue;\n            }\n            else\n            {\n                student[actual][0]=temp;\n                printf(\"请输学号为%d的同学成绩：\", student[actual][0]);\n                scanf(\"%d\", &student[actual][1]);\n                actual++;\n\n            }\n            //判断是否继续\n            getchar();\n            printf(\"还有继续么(y/n):\");\n            char c = getchar();\n            if (c == 'y' || c == 'Y')\n            {\n                ;\n            }\n            else if (c == 'n' || c == 'N')\n            {\n                break;\n            }\n            else\n            {\n                printf(\"输入错误，即将退出录入系统!\\n\");\n                break;\n            }\n            }\n            //当数组没有成绩时\n            else if (actual==0) {\n            printf(\"请输入第%d位学生的学号为：\", i + 1);\n            scanf(\"%d\", &temp);\n            //查找并判断是否有重复的学号\n            while (temp!=student[k][0]&&k<actual)\n            {\n                k++;\n            }\n            if(temp==student[k][0])\n            {\n                //如果在数组中找到相同学号，则跳出本次循环重新输入\n                printf(\"学号重复请重新输入!\\n\");\n                continue;\n            }\n            else\n            {\n                student[i][0]=temp;\n                printf(\"请输学号为%d的同学成绩：\", student[i][0]);\n                scanf(\"%d\", &student[i][1]);\n                actual++;\n\n            }\n            getchar();\n            printf(\"还有继续么(y/n):\");\n            char c = getchar();\n            if (c == 'y' || c == 'Y') { ;\n            } else if (c == 'n' || c == 'N') {\n                break;\n            } else {\n                printf(\"输入错误，即将退出录入系统!\\n\");\n                break;\n            }\n        }\n\n\n    }\n}\n```\n这里需要定义一个二维数组，将学号放第一列，成绩放低0列，还需用到循环与条件判断来判断是否还要继续输入,并且定义一个存放实际人数变量actual，每次录入加1人  \n\n## 学习管理系统之修改\n```\n//修改成绩\nvoid alter() {\n    while (1) {\n        int number, i = 0;\n        //输入要修改成绩的学号\n        printf(\"请输入要修改的学号：\");\n        scanf(\"%d\", &number);\n        //开始查找与学号配对的成绩位置\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有该学号的成绩\n        if (number == student[i][0])\n        {\n            //有该学号则输入修改后的成绩\n            printf(\"请输入要修改的成绩：\");\n            scanf(\"%d\", &student[i][1]);\n        }\n        else\n        {\n            //没有则输出查无此人\n            printf(\"查无此人\\n\");\n        }\n        //判断是否继续修改\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出修改系统!\\n\");\n        }\n\n    }\n}\n\n```\n这里使用循环一个一个学号对比，找到后然后将修改成绩覆盖到要修改的成绩位置，没找到则输出查无此人  \n\n## 学生成绩管理系统之删除\n```\n//删除成绩\nvoid delete()\n{\n    while (1) {\n        int number, i = 0;\n        //输入要删除成绩的学号\n        printf(\"请输入要删除成绩的学号：\");\n        scanf(\"%d\", &number);\n        //查找学号\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有此学号\n        if (number == student[i][0])\n        {\n            //如果有，则后面的成绩覆盖要删除的成绩，后面依次往前挪\n            for(;i<actual;i++)\n            {\n                student[i][0]=student[i+1][0];\n                student[i][1]=student[i+1][1];\n\n            }\n            printf(\"删除成功!\\n\");\n        }\n        else\n        {\n            //如果没有，则输出查无此人\n            printf(\"查无此人!\\n\");\n        }\n        //删除一个成绩则实际人数减一\n        actual--;\n        //判断是否继续删除\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n\n    }\n}\n```\n删除类似修改，只是将成绩覆盖改成，下面的成绩全部往上移1格，这里每删除一个人则实际人数actual减1人  \n\n## 学生成绩管理系统之查找\n```\nvoid find()\n{\n    while (1) {\n\n        int number, i = 0;\n        //输入要查找成绩的学号\n        printf(\"请输入要查找的学号：\");\n        scanf(\"%d\", &number);\n        //查找学号对应的成绩位置\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有与之对应的学号\n        if (number == student[i][0])\n        {\n            //有则输出成绩\n            printf(\"学号为%d的成绩为：%d\\n\",number,student[i][1]);\n        }\n        else\n        {\n            //没有则输出查无此人\n            printf(\"查无此人\\n\");\n        }\n        //判断是否继续\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出查找系统\\n\");\n\n        }\n\n    }\n\n}\n```\n查找也是利用学号，一一对比找学号，然后打印该学号位置的成绩  \n\n## 学生成绩管理系统之打印\n```\nvoid print()\n{\n    //用for循环依次打印出实际人数的学号成绩对应表\n    int i;\n    printf(\"成绩表如下（学号-成绩）：\\n\");\n    for(i=0;i<actual;i++)\n    {\n        printf(\"%4d%4d\\n\",student[i][0],student[i][1]);\n    }\n    float average=0.0;\n    float sum=0.0;\n    for(int j=0;j<actual;j++)\n    {\n        sum=sum+student[j][1];\n    }\n    average=sum/actual;\n    printf(\"全班的平均成绩为%2f\\n\",average);\n}\n\n```\n这里使用for循环一一换行打印  \n\n## 学生成绩管理系统之排序\n### 冒泡排序\n```\nvoid maopao()\n{\n    int temp=0,num=0;                               //初始化存放成绩和学号的临时变量\n    for(int i=0;i<actual-1;i++)                     //遍历实际人数-1次\n    {\n        for(int j=0;j<actual-i-1;j++)               //遍历实际人数减-1-1次；2人一组对比所以比要再减1次\n        {\n            if(student[j][1]>student[j+1][1])       //判断前后两数的大小，如果前面的成绩比后面成绩大\n            {\n                //交换成绩\n                temp=student[j][1];\n                student[j][1]= student[j+1][1];\n                student[j+1][1]=temp;\n                //交换学号\n                num=student[j][0];\n                student[j][0]=student[j+1][0];\n                student[j+1][0]=num;\n            }\n        }\n    }\n    print();                           //打印成绩\n}\n```\n两两比对，交换位置，然后循环重新再比对，注意点是，外循环与内循环都比实际人数少1位  \n\n### 选择排序\n```\n//选择排序\nvoid choice()\n{\n    int a=0,b=0,min;\n    for(int i=0;i<actual-1;i++)\n    {\n        min=i;                          //假设最小值位置\n        for(int j=i+1;j<actual;j++)     //开始遍历找所有的值对比\n        {\n            if(student[j][1]<student[min][1])       //如果后面的数小于最小值，则记录最小值的位置\n            {\n                min=j;\n            }\n        }\n        if(min!=i)                      //如果最小值不等于最开始的位置，则\n        {\n            //交换学号\n            b=student[min][0];\n            student[min][0]=student[i][0];\n            student[i][0]=b;\n            //交换成绩\n            a=student[min][1];\n            student[min][1]=student[i][1];\n            student[i][1]=a;\n\n        }\n    }\n    print();                              //打印成绩\n}\n```\n选择排序是将最小的元素挑出来与没排序的第一位交换位置，它会不断的选择剩余元素中的最小者      \n\n### 插入排序\n```\n//插入排序\nvoid insert()\n{\n\n    int i,j;\n    int temp,id;\n    for(i=1;i<actual;i++)\n    {\n        if(student[i][1]<student[i-1][1])           //如果后面的数小于前面的数\n        {\n            temp=student[i][1];                     //保存后面的数到temp\n            id=student[i][0];                       //对应的学号保存到ou\n            for(j=i-1;student[j][1]>temp;j--)       //开始将前面到数移位，当前面的数大于temp就开始循环，直到有比temp大的数和最前面则跳出循环\n            {\n                student[j+1][1]=student[j][1];      //将成绩向后移\n                student[j+1][0]=student[j][0];      //学号向后移\n                if(j<0)                             //当最小到数移动到第一位后\n                {\n                    break;                          //退出循环\n                }\n            }\n            student[j+1][1]=temp;                     //将temp的值插入到比temp大的数的前面\n            student[j+1][0]=id;                       //将对应的学号插入到对应的位置\n\n        }\n    }\n    print();\n}\n```\n插入在比自己小的数的前面  \n首先将后面比前面小的数存放在另一个变量，然后前面比这个数大的数依次往后挪，直到比自己小的数，然后放入到其后面。  \n### 归并排序\n```\n//归并排序\n//分治  递归\nvoid merge_split(){\n    split(student,1,actual);\n    print();\n}\n//将数组用递归拆成单个元素\nvoid split(int arr[][2],int p,int q)\n{\n    int mid;\n    //确保拆成单个元素\n    if(arr== NULL ||p>q||p==q)\n    {\n        return ;\n    }\n    mid=(p+q)/2;\n    split(arr,p,mid);\n    split(arr,mid+1,q);\n    merge(arr,p,mid,q);\n}\n//排序归并在一起\nvoid merge(int arr[][2],int p,int mid,int q){\n    int i,j,k;\n    int L,R;\n    //定义临时存放左右数组的数组\n    int LL[max][2];\n    int RR[max][2];\n    //定义左右数组长度\n    L=mid-p+1;\n    R=q-mid;\n    //将左边数组存放到临时数组\n    for(i=0;i<L;i++)\n    {\n        LL[i][1]=arr[p-1+i][1];\n        LL[i][0]=arr[p-1+i][0];\n    }\n    //将右边数组存放到临时数组\n    for(i=0;i<R;i++)\n    {\n        RR[i][1]=arr[mid+i][1];\n        RR[i][0]=arr[mid+i][0];\n    }\n    i=0;\n    j=0;\n    for(k=p;k<=q;k++)\n    {\n        //当LL与RR没有元素时，放入原来数组\n        if(i==L)\n        {\n            arr[k-1][1]=RR[j][1];\n            arr[k-1][0]=RR[j][0];\n            j++;\n\n        }\n        else if(j==R)\n        {\n            arr[k-1][1]=LL[i][1];\n            arr[k-1][0]=LL[i][0];\n            i++;\n        }\n        else\n        {\n            //当LL与RR还有元素时，放入原来数组\n            if(LL[i][1]<RR[j][1])\n            {\n                arr[k-1][1]=LL[i][1];\n                arr[k-1][0]=LL[i][0];\n                i++;\n            }\n            else\n            {\n                arr[k-1][1]=RR[j][1];\n                arr[k-1][0]=RR[j][0];\n                j++;\n            }\n        }\n    }\n}\n```\n先用递归拆分数组，然后用循环归并并排序数组  \n递归是不断把数组拆成左右两部分，其中写的if判断是用来限制，分成一个元素后不可再分。\n归并是先记录左右素组的大小，然后分别放到另一个数组中，然后归并到原来的数组，分别对左右数组的第一个元素比较  \n当剩下元素没用完时会添加再数组后面\n\n## 功能选择\n### 功能选择\n```\nint select()\n{\n    while (1)\n    {\n        int i;\n        menu();\n        printf(\"请输入要选择的功能：\");\n        scanf(\"%d\",&i);\n        switch (i)\n        {\n            case 1: add();break;\n            case 2: delete();break;\n            case 3: alter();break;\n            case 4: find();break;\n            case 5: print();break;\n            case 6: short_1();break;\n            case 0: return 0;\n            default: printf(\"输入错误，请重新输入\");break;\n        }\n    }\n}\n```\n这里将多个函数封装到了功能选择函数中  \n用switch来实现多种功能的选择  \n\n### 排序选择\n```\n//排序算法目录\nint short_1()\n{\n        int i;\n        printf(\"===============\\n\");\n        printf(\"1、冒泡排序\\n\");\n        printf(\"2、选择排序\\n\");\n        printf(\"3、插入排序\\n\");\n        printf(\"4、归并排序\\n\");\n        printf(\"===============\\n\");\n        printf(\"请输入要使用的排序方法：\");\n        scanf(\"%d\",&i);\n        switch (i) {\n            case 1: maopao();break;\n            case 2: choice();break;\n            case 3: insert();break;\n            case 4: merge_split();break;\n            default: printf(\"输入错误，请重新输入\");break;\n\n        }\n\n}\n```\n与功能选择类似  \n\n## 函数的入口main\n```\nint main() {\n    select();\n}\n```\n所有内容都是在main函数中使用的，所以要在main中导入之前的函数","source":"_posts/2022-10-19_学生成绩管理系统.md","raw":"---\ntitle: 数组实现学生成绩管理系统\ndate: 2022-10-25 19:36:11\ntag: [C]\ncategories: [设计开发, C语言]\n---\n## 引言\n因为学生管理系统类似数据库，需要实现增删改查，来管理其数据，所以该管理系统也应该实现这四个功能，这里使用数组实现，且具体实现如下。  \n## 源代码\n具体源代码存放在gitee仓库地址如下  \n\n{% copy https://gitee.com/thebyte/work.git %}\n\n## 学生成绩管理系统之目录  \n```\n//菜单\nvoid menu()\n{\n    printf(\"===============\\n\");\n    printf(\"1、学生成绩录入\\n\");\n    printf(\"2、学生成绩删除\\n\");\n    printf(\"3、学生成绩修改\\n\");\n    printf(\"4、学生成绩查询\\n\");\n    printf(\"5、学生成绩打印\\n\");\n    printf(\"6、排       序\\n\");\n    printf(\"0、退       出\\n\");\n    printf(\"===============\\n\");\n}\n```\n这里使用printf()函数直接输出  \n\n## 学生成绩管理系统之录入\n```\n//录入成绩\nvoid add()\n{\n\n    for (int i = 0; i < max - actual;i++)\n    {\n        int temp,k=0;//temp用来存放学号\n        //当数组有成绩时\n        if (actual>0) {\n            printf(\"请输入第%d位学生的学号为：\", actual+1);\n            scanf(\"%d\", &temp);\n            //判断是否有重复学号\n            while (temp!=student[k][0]&&k<actual)\n            {\n                k++;\n            }\n            if(temp==student[k][0])\n            {\n                //如果在数组中找到相同学号，则跳出本次循环重新输入\n                printf(\"学号重复请重新输入!\\n\");\n                continue;\n            }\n            else\n            {\n                student[actual][0]=temp;\n                printf(\"请输学号为%d的同学成绩：\", student[actual][0]);\n                scanf(\"%d\", &student[actual][1]);\n                actual++;\n\n            }\n            //判断是否继续\n            getchar();\n            printf(\"还有继续么(y/n):\");\n            char c = getchar();\n            if (c == 'y' || c == 'Y')\n            {\n                ;\n            }\n            else if (c == 'n' || c == 'N')\n            {\n                break;\n            }\n            else\n            {\n                printf(\"输入错误，即将退出录入系统!\\n\");\n                break;\n            }\n            }\n            //当数组没有成绩时\n            else if (actual==0) {\n            printf(\"请输入第%d位学生的学号为：\", i + 1);\n            scanf(\"%d\", &temp);\n            //查找并判断是否有重复的学号\n            while (temp!=student[k][0]&&k<actual)\n            {\n                k++;\n            }\n            if(temp==student[k][0])\n            {\n                //如果在数组中找到相同学号，则跳出本次循环重新输入\n                printf(\"学号重复请重新输入!\\n\");\n                continue;\n            }\n            else\n            {\n                student[i][0]=temp;\n                printf(\"请输学号为%d的同学成绩：\", student[i][0]);\n                scanf(\"%d\", &student[i][1]);\n                actual++;\n\n            }\n            getchar();\n            printf(\"还有继续么(y/n):\");\n            char c = getchar();\n            if (c == 'y' || c == 'Y') { ;\n            } else if (c == 'n' || c == 'N') {\n                break;\n            } else {\n                printf(\"输入错误，即将退出录入系统!\\n\");\n                break;\n            }\n        }\n\n\n    }\n}\n```\n这里需要定义一个二维数组，将学号放第一列，成绩放低0列，还需用到循环与条件判断来判断是否还要继续输入,并且定义一个存放实际人数变量actual，每次录入加1人  \n\n## 学习管理系统之修改\n```\n//修改成绩\nvoid alter() {\n    while (1) {\n        int number, i = 0;\n        //输入要修改成绩的学号\n        printf(\"请输入要修改的学号：\");\n        scanf(\"%d\", &number);\n        //开始查找与学号配对的成绩位置\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有该学号的成绩\n        if (number == student[i][0])\n        {\n            //有该学号则输入修改后的成绩\n            printf(\"请输入要修改的成绩：\");\n            scanf(\"%d\", &student[i][1]);\n        }\n        else\n        {\n            //没有则输出查无此人\n            printf(\"查无此人\\n\");\n        }\n        //判断是否继续修改\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出修改系统!\\n\");\n        }\n\n    }\n}\n\n```\n这里使用循环一个一个学号对比，找到后然后将修改成绩覆盖到要修改的成绩位置，没找到则输出查无此人  \n\n## 学生成绩管理系统之删除\n```\n//删除成绩\nvoid delete()\n{\n    while (1) {\n        int number, i = 0;\n        //输入要删除成绩的学号\n        printf(\"请输入要删除成绩的学号：\");\n        scanf(\"%d\", &number);\n        //查找学号\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有此学号\n        if (number == student[i][0])\n        {\n            //如果有，则后面的成绩覆盖要删除的成绩，后面依次往前挪\n            for(;i<actual;i++)\n            {\n                student[i][0]=student[i+1][0];\n                student[i][1]=student[i+1][1];\n\n            }\n            printf(\"删除成功!\\n\");\n        }\n        else\n        {\n            //如果没有，则输出查无此人\n            printf(\"查无此人!\\n\");\n        }\n        //删除一个成绩则实际人数减一\n        actual--;\n        //判断是否继续删除\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n\n    }\n}\n```\n删除类似修改，只是将成绩覆盖改成，下面的成绩全部往上移1格，这里每删除一个人则实际人数actual减1人  \n\n## 学生成绩管理系统之查找\n```\nvoid find()\n{\n    while (1) {\n\n        int number, i = 0;\n        //输入要查找成绩的学号\n        printf(\"请输入要查找的学号：\");\n        scanf(\"%d\", &number);\n        //查找学号对应的成绩位置\n        while (number != student[i][0] && i < actual)\n        {\n            i++;\n        }\n        //判断是否有与之对应的学号\n        if (number == student[i][0])\n        {\n            //有则输出成绩\n            printf(\"学号为%d的成绩为：%d\\n\",number,student[i][1]);\n        }\n        else\n        {\n            //没有则输出查无此人\n            printf(\"查无此人\\n\");\n        }\n        //判断是否继续\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出查找系统\\n\");\n\n        }\n\n    }\n\n}\n```\n查找也是利用学号，一一对比找学号，然后打印该学号位置的成绩  \n\n## 学生成绩管理系统之打印\n```\nvoid print()\n{\n    //用for循环依次打印出实际人数的学号成绩对应表\n    int i;\n    printf(\"成绩表如下（学号-成绩）：\\n\");\n    for(i=0;i<actual;i++)\n    {\n        printf(\"%4d%4d\\n\",student[i][0],student[i][1]);\n    }\n    float average=0.0;\n    float sum=0.0;\n    for(int j=0;j<actual;j++)\n    {\n        sum=sum+student[j][1];\n    }\n    average=sum/actual;\n    printf(\"全班的平均成绩为%2f\\n\",average);\n}\n\n```\n这里使用for循环一一换行打印  \n\n## 学生成绩管理系统之排序\n### 冒泡排序\n```\nvoid maopao()\n{\n    int temp=0,num=0;                               //初始化存放成绩和学号的临时变量\n    for(int i=0;i<actual-1;i++)                     //遍历实际人数-1次\n    {\n        for(int j=0;j<actual-i-1;j++)               //遍历实际人数减-1-1次；2人一组对比所以比要再减1次\n        {\n            if(student[j][1]>student[j+1][1])       //判断前后两数的大小，如果前面的成绩比后面成绩大\n            {\n                //交换成绩\n                temp=student[j][1];\n                student[j][1]= student[j+1][1];\n                student[j+1][1]=temp;\n                //交换学号\n                num=student[j][0];\n                student[j][0]=student[j+1][0];\n                student[j+1][0]=num;\n            }\n        }\n    }\n    print();                           //打印成绩\n}\n```\n两两比对，交换位置，然后循环重新再比对，注意点是，外循环与内循环都比实际人数少1位  \n\n### 选择排序\n```\n//选择排序\nvoid choice()\n{\n    int a=0,b=0,min;\n    for(int i=0;i<actual-1;i++)\n    {\n        min=i;                          //假设最小值位置\n        for(int j=i+1;j<actual;j++)     //开始遍历找所有的值对比\n        {\n            if(student[j][1]<student[min][1])       //如果后面的数小于最小值，则记录最小值的位置\n            {\n                min=j;\n            }\n        }\n        if(min!=i)                      //如果最小值不等于最开始的位置，则\n        {\n            //交换学号\n            b=student[min][0];\n            student[min][0]=student[i][0];\n            student[i][0]=b;\n            //交换成绩\n            a=student[min][1];\n            student[min][1]=student[i][1];\n            student[i][1]=a;\n\n        }\n    }\n    print();                              //打印成绩\n}\n```\n选择排序是将最小的元素挑出来与没排序的第一位交换位置，它会不断的选择剩余元素中的最小者      \n\n### 插入排序\n```\n//插入排序\nvoid insert()\n{\n\n    int i,j;\n    int temp,id;\n    for(i=1;i<actual;i++)\n    {\n        if(student[i][1]<student[i-1][1])           //如果后面的数小于前面的数\n        {\n            temp=student[i][1];                     //保存后面的数到temp\n            id=student[i][0];                       //对应的学号保存到ou\n            for(j=i-1;student[j][1]>temp;j--)       //开始将前面到数移位，当前面的数大于temp就开始循环，直到有比temp大的数和最前面则跳出循环\n            {\n                student[j+1][1]=student[j][1];      //将成绩向后移\n                student[j+1][0]=student[j][0];      //学号向后移\n                if(j<0)                             //当最小到数移动到第一位后\n                {\n                    break;                          //退出循环\n                }\n            }\n            student[j+1][1]=temp;                     //将temp的值插入到比temp大的数的前面\n            student[j+1][0]=id;                       //将对应的学号插入到对应的位置\n\n        }\n    }\n    print();\n}\n```\n插入在比自己小的数的前面  \n首先将后面比前面小的数存放在另一个变量，然后前面比这个数大的数依次往后挪，直到比自己小的数，然后放入到其后面。  \n### 归并排序\n```\n//归并排序\n//分治  递归\nvoid merge_split(){\n    split(student,1,actual);\n    print();\n}\n//将数组用递归拆成单个元素\nvoid split(int arr[][2],int p,int q)\n{\n    int mid;\n    //确保拆成单个元素\n    if(arr== NULL ||p>q||p==q)\n    {\n        return ;\n    }\n    mid=(p+q)/2;\n    split(arr,p,mid);\n    split(arr,mid+1,q);\n    merge(arr,p,mid,q);\n}\n//排序归并在一起\nvoid merge(int arr[][2],int p,int mid,int q){\n    int i,j,k;\n    int L,R;\n    //定义临时存放左右数组的数组\n    int LL[max][2];\n    int RR[max][2];\n    //定义左右数组长度\n    L=mid-p+1;\n    R=q-mid;\n    //将左边数组存放到临时数组\n    for(i=0;i<L;i++)\n    {\n        LL[i][1]=arr[p-1+i][1];\n        LL[i][0]=arr[p-1+i][0];\n    }\n    //将右边数组存放到临时数组\n    for(i=0;i<R;i++)\n    {\n        RR[i][1]=arr[mid+i][1];\n        RR[i][0]=arr[mid+i][0];\n    }\n    i=0;\n    j=0;\n    for(k=p;k<=q;k++)\n    {\n        //当LL与RR没有元素时，放入原来数组\n        if(i==L)\n        {\n            arr[k-1][1]=RR[j][1];\n            arr[k-1][0]=RR[j][0];\n            j++;\n\n        }\n        else if(j==R)\n        {\n            arr[k-1][1]=LL[i][1];\n            arr[k-1][0]=LL[i][0];\n            i++;\n        }\n        else\n        {\n            //当LL与RR还有元素时，放入原来数组\n            if(LL[i][1]<RR[j][1])\n            {\n                arr[k-1][1]=LL[i][1];\n                arr[k-1][0]=LL[i][0];\n                i++;\n            }\n            else\n            {\n                arr[k-1][1]=RR[j][1];\n                arr[k-1][0]=RR[j][0];\n                j++;\n            }\n        }\n    }\n}\n```\n先用递归拆分数组，然后用循环归并并排序数组  \n递归是不断把数组拆成左右两部分，其中写的if判断是用来限制，分成一个元素后不可再分。\n归并是先记录左右素组的大小，然后分别放到另一个数组中，然后归并到原来的数组，分别对左右数组的第一个元素比较  \n当剩下元素没用完时会添加再数组后面\n\n## 功能选择\n### 功能选择\n```\nint select()\n{\n    while (1)\n    {\n        int i;\n        menu();\n        printf(\"请输入要选择的功能：\");\n        scanf(\"%d\",&i);\n        switch (i)\n        {\n            case 1: add();break;\n            case 2: delete();break;\n            case 3: alter();break;\n            case 4: find();break;\n            case 5: print();break;\n            case 6: short_1();break;\n            case 0: return 0;\n            default: printf(\"输入错误，请重新输入\");break;\n        }\n    }\n}\n```\n这里将多个函数封装到了功能选择函数中  \n用switch来实现多种功能的选择  \n\n### 排序选择\n```\n//排序算法目录\nint short_1()\n{\n        int i;\n        printf(\"===============\\n\");\n        printf(\"1、冒泡排序\\n\");\n        printf(\"2、选择排序\\n\");\n        printf(\"3、插入排序\\n\");\n        printf(\"4、归并排序\\n\");\n        printf(\"===============\\n\");\n        printf(\"请输入要使用的排序方法：\");\n        scanf(\"%d\",&i);\n        switch (i) {\n            case 1: maopao();break;\n            case 2: choice();break;\n            case 3: insert();break;\n            case 4: merge_split();break;\n            default: printf(\"输入错误，请重新输入\");break;\n\n        }\n\n}\n```\n与功能选择类似  \n\n## 函数的入口main\n```\nint main() {\n    select();\n}\n```\n所有内容都是在main函数中使用的，所以要在main中导入之前的函数","slug":"2022-10-19_学生成绩管理系统","published":1,"updated":"2022-11-02T03:56:58.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8o000bu19kcy7rfpmk","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>因为学生管理系统类似数据库，需要实现增删改查，来管理其数据，所以该管理系统也应该实现这四个功能，这里使用数组实现，且具体实现如下。  </p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>具体源代码存放在gitee仓库地址如下  </p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_1\" value=\"https://gitee.com/thebyte/work.git\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_1&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n\n<h2 id=\"学生成绩管理系统之目录\"><a href=\"#学生成绩管理系统之目录\" class=\"headerlink\" title=\"学生成绩管理系统之目录\"></a>学生成绩管理系统之目录</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//菜单</span><br><span class=\"line\">void menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">    printf(&quot;1、学生成绩录入\\n&quot;);</span><br><span class=\"line\">    printf(&quot;2、学生成绩删除\\n&quot;);</span><br><span class=\"line\">    printf(&quot;3、学生成绩修改\\n&quot;);</span><br><span class=\"line\">    printf(&quot;4、学生成绩查询\\n&quot;);</span><br><span class=\"line\">    printf(&quot;5、学生成绩打印\\n&quot;);</span><br><span class=\"line\">    printf(&quot;6、排       序\\n&quot;);</span><br><span class=\"line\">    printf(&quot;0、退       出\\n&quot;);</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里使用printf()函数直接输出  </p>\n<h2 id=\"学生成绩管理系统之录入\"><a href=\"#学生成绩管理系统之录入\" class=\"headerlink\" title=\"学生成绩管理系统之录入\"></a>学生成绩管理系统之录入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//录入成绩</span><br><span class=\"line\">void add()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    for (int i = 0; i &lt; max - actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int temp,k=0;//temp用来存放学号</span><br><span class=\"line\">        //当数组有成绩时</span><br><span class=\"line\">        if (actual&gt;0) &#123;</span><br><span class=\"line\">            printf(&quot;请输入第%d位学生的学号为：&quot;, actual+1);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;temp);</span><br><span class=\"line\">            //判断是否有重复学号</span><br><span class=\"line\">            while (temp!=student[k][0]&amp;&amp;k&lt;actual)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                k++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(temp==student[k][0])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //如果在数组中找到相同学号，则跳出本次循环重新输入</span><br><span class=\"line\">                printf(&quot;学号重复请重新输入!\\n&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[actual][0]=temp;</span><br><span class=\"line\">                printf(&quot;请输学号为%d的同学成绩：&quot;, student[actual][0]);</span><br><span class=\"line\">                scanf(&quot;%d&quot;, &amp;student[actual][1]);</span><br><span class=\"line\">                actual++;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //判断是否继续</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;还有继续么(y/n):&quot;);</span><br><span class=\"line\">            char c = getchar();</span><br><span class=\"line\">            if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;输入错误，即将退出录入系统!\\n&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //当数组没有成绩时</span><br><span class=\"line\">            else if (actual==0) &#123;</span><br><span class=\"line\">            printf(&quot;请输入第%d位学生的学号为：&quot;, i + 1);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;temp);</span><br><span class=\"line\">            //查找并判断是否有重复的学号</span><br><span class=\"line\">            while (temp!=student[k][0]&amp;&amp;k&lt;actual)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                k++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(temp==student[k][0])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //如果在数组中找到相同学号，则跳出本次循环重新输入</span><br><span class=\"line\">                printf(&quot;学号重复请重新输入!\\n&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[i][0]=temp;</span><br><span class=\"line\">                printf(&quot;请输学号为%d的同学成绩：&quot;, student[i][0]);</span><br><span class=\"line\">                scanf(&quot;%d&quot;, &amp;student[i][1]);</span><br><span class=\"line\">                actual++;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;还有继续么(y/n):&quot;);</span><br><span class=\"line\">            char c = getchar();</span><br><span class=\"line\">            if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;) &#123; ;</span><br><span class=\"line\">            &#125; else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;) &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                printf(&quot;输入错误，即将退出录入系统!\\n&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里需要定义一个二维数组，将学号放第一列，成绩放低0列，还需用到循环与条件判断来判断是否还要继续输入,并且定义一个存放实际人数变量actual，每次录入加1人  </p>\n<h2 id=\"学习管理系统之修改\"><a href=\"#学习管理系统之修改\" class=\"headerlink\" title=\"学习管理系统之修改\"></a>学习管理系统之修改</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//修改成绩</span><br><span class=\"line\">void alter() &#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要修改成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要修改的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //开始查找与学号配对的成绩位置</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有该学号的成绩</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //有该学号则输入修改后的成绩</span><br><span class=\"line\">            printf(&quot;请输入要修改的成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;student[i][1]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //没有则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否继续修改</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出修改系统!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里使用循环一个一个学号对比，找到后然后将修改成绩覆盖到要修改的成绩位置，没找到则输出查无此人  </p>\n<h2 id=\"学生成绩管理系统之删除\"><a href=\"#学生成绩管理系统之删除\" class=\"headerlink\" title=\"学生成绩管理系统之删除\"></a>学生成绩管理系统之删除</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//删除成绩</span><br><span class=\"line\">void delete()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要删除成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要删除成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //查找学号</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有此学号</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果有，则后面的成绩覆盖要删除的成绩，后面依次往前挪</span><br><span class=\"line\">            for(;i&lt;actual;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[i][0]=student[i+1][0];</span><br><span class=\"line\">                student[i][1]=student[i+1][1];</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            printf(&quot;删除成功!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果没有，则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //删除一个成绩则实际人数减一</span><br><span class=\"line\">        actual--;</span><br><span class=\"line\">        //判断是否继续删除</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>删除类似修改，只是将成绩覆盖改成，下面的成绩全部往上移1格，这里每删除一个人则实际人数actual减1人  </p>\n<h2 id=\"学生成绩管理系统之查找\"><a href=\"#学生成绩管理系统之查找\" class=\"headerlink\" title=\"学生成绩管理系统之查找\"></a>学生成绩管理系统之查找</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void find()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要查找成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要查找的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //查找学号对应的成绩位置</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有与之对应的学号</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //有则输出成绩</span><br><span class=\"line\">            printf(&quot;学号为%d的成绩为：%d\\n&quot;,number,student[i][1]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //没有则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否继续</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出查找系统\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查找也是利用学号，一一对比找学号，然后打印该学号位置的成绩  </p>\n<h2 id=\"学生成绩管理系统之打印\"><a href=\"#学生成绩管理系统之打印\" class=\"headerlink\" title=\"学生成绩管理系统之打印\"></a>学生成绩管理系统之打印</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void print()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //用for循环依次打印出实际人数的学号成绩对应表</span><br><span class=\"line\">    int i;</span><br><span class=\"line\">    printf(&quot;成绩表如下（学号-成绩）：\\n&quot;);</span><br><span class=\"line\">    for(i=0;i&lt;actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;%4d%4d\\n&quot;,student[i][0],student[i][1]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    float average=0.0;</span><br><span class=\"line\">    float sum=0.0;</span><br><span class=\"line\">    for(int j=0;j&lt;actual;j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum=sum+student[j][1];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    average=sum/actual;</span><br><span class=\"line\">    printf(&quot;全班的平均成绩为%2f\\n&quot;,average);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里使用for循环一一换行打印  </p>\n<h2 id=\"学生成绩管理系统之排序\"><a href=\"#学生成绩管理系统之排序\" class=\"headerlink\" title=\"学生成绩管理系统之排序\"></a>学生成绩管理系统之排序</h2><h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void maopao()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int temp=0,num=0;                               //初始化存放成绩和学号的临时变量</span><br><span class=\"line\">    for(int i=0;i&lt;actual-1;i++)                     //遍历实际人数-1次</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(int j=0;j&lt;actual-i-1;j++)               //遍历实际人数减-1-1次；2人一组对比所以比要再减1次</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(student[j][1]&gt;student[j+1][1])       //判断前后两数的大小，如果前面的成绩比后面成绩大</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //交换成绩</span><br><span class=\"line\">                temp=student[j][1];</span><br><span class=\"line\">                student[j][1]= student[j+1][1];</span><br><span class=\"line\">                student[j+1][1]=temp;</span><br><span class=\"line\">                //交换学号</span><br><span class=\"line\">                num=student[j][0];</span><br><span class=\"line\">                student[j][0]=student[j+1][0];</span><br><span class=\"line\">                student[j+1][0]=num;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();                           //打印成绩</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>两两比对，交换位置，然后循环重新再比对，注意点是，外循环与内循环都比实际人数少1位  </p>\n<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//选择排序</span><br><span class=\"line\">void choice()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int a=0,b=0,min;</span><br><span class=\"line\">    for(int i=0;i&lt;actual-1;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        min=i;                          //假设最小值位置</span><br><span class=\"line\">        for(int j=i+1;j&lt;actual;j++)     //开始遍历找所有的值对比</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(student[j][1]&lt;student[min][1])       //如果后面的数小于最小值，则记录最小值的位置</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                min=j;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(min!=i)                      //如果最小值不等于最开始的位置，则</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //交换学号</span><br><span class=\"line\">            b=student[min][0];</span><br><span class=\"line\">            student[min][0]=student[i][0];</span><br><span class=\"line\">            student[i][0]=b;</span><br><span class=\"line\">            //交换成绩</span><br><span class=\"line\">            a=student[min][1];</span><br><span class=\"line\">            student[min][1]=student[i][1];</span><br><span class=\"line\">            student[i][1]=a;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();                              //打印成绩</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>选择排序是将最小的元素挑出来与没排序的第一位交换位置，它会不断的选择剩余元素中的最小者      </p>\n<h3 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//插入排序</span><br><span class=\"line\">void insert()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    int i,j;</span><br><span class=\"line\">    int temp,id;</span><br><span class=\"line\">    for(i=1;i&lt;actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(student[i][1]&lt;student[i-1][1])           //如果后面的数小于前面的数</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            temp=student[i][1];                     //保存后面的数到temp</span><br><span class=\"line\">            id=student[i][0];                       //对应的学号保存到ou</span><br><span class=\"line\">            for(j=i-1;student[j][1]&gt;temp;j--)       //开始将前面到数移位，当前面的数大于temp就开始循环，直到有比temp大的数和最前面则跳出循环</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[j+1][1]=student[j][1];      //将成绩向后移</span><br><span class=\"line\">                student[j+1][0]=student[j][0];      //学号向后移</span><br><span class=\"line\">                if(j&lt;0)                             //当最小到数移动到第一位后</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    break;                          //退出循环</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            student[j+1][1]=temp;                     //将temp的值插入到比temp大的数的前面</span><br><span class=\"line\">            student[j+1][0]=id;                       //将对应的学号插入到对应的位置</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>插入在比自己小的数的前面<br>首先将后面比前面小的数存放在另一个变量，然后前面比这个数大的数依次往后挪，直到比自己小的数，然后放入到其后面。  </p>\n<h3 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//归并排序</span><br><span class=\"line\">//分治  递归</span><br><span class=\"line\">void merge_split()&#123;</span><br><span class=\"line\">    split(student,1,actual);</span><br><span class=\"line\">    print();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//将数组用递归拆成单个元素</span><br><span class=\"line\">void split(int arr[][2],int p,int q)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int mid;</span><br><span class=\"line\">    //确保拆成单个元素</span><br><span class=\"line\">    if(arr== NULL ||p&gt;q||p==q)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mid=(p+q)/2;</span><br><span class=\"line\">    split(arr,p,mid);</span><br><span class=\"line\">    split(arr,mid+1,q);</span><br><span class=\"line\">    merge(arr,p,mid,q);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//排序归并在一起</span><br><span class=\"line\">void merge(int arr[][2],int p,int mid,int q)&#123;</span><br><span class=\"line\">    int i,j,k;</span><br><span class=\"line\">    int L,R;</span><br><span class=\"line\">    //定义临时存放左右数组的数组</span><br><span class=\"line\">    int LL[max][2];</span><br><span class=\"line\">    int RR[max][2];</span><br><span class=\"line\">    //定义左右数组长度</span><br><span class=\"line\">    L=mid-p+1;</span><br><span class=\"line\">    R=q-mid;</span><br><span class=\"line\">    //将左边数组存放到临时数组</span><br><span class=\"line\">    for(i=0;i&lt;L;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        LL[i][1]=arr[p-1+i][1];</span><br><span class=\"line\">        LL[i][0]=arr[p-1+i][0];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //将右边数组存放到临时数组</span><br><span class=\"line\">    for(i=0;i&lt;R;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        RR[i][1]=arr[mid+i][1];</span><br><span class=\"line\">        RR[i][0]=arr[mid+i][0];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    i=0;</span><br><span class=\"line\">    j=0;</span><br><span class=\"line\">    for(k=p;k&lt;=q;k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //当LL与RR没有元素时，放入原来数组</span><br><span class=\"line\">        if(i==L)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            arr[k-1][1]=RR[j][1];</span><br><span class=\"line\">            arr[k-1][0]=RR[j][0];</span><br><span class=\"line\">            j++;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if(j==R)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            arr[k-1][1]=LL[i][1];</span><br><span class=\"line\">            arr[k-1][0]=LL[i][0];</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //当LL与RR还有元素时，放入原来数组</span><br><span class=\"line\">            if(LL[i][1]&lt;RR[j][1])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                arr[k-1][1]=LL[i][1];</span><br><span class=\"line\">                arr[k-1][0]=LL[i][0];</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                arr[k-1][1]=RR[j][1];</span><br><span class=\"line\">                arr[k-1][0]=RR[j][0];</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>先用递归拆分数组，然后用循环归并并排序数组<br>递归是不断把数组拆成左右两部分，其中写的if判断是用来限制，分成一个元素后不可再分。<br>归并是先记录左右素组的大小，然后分别放到另一个数组中，然后归并到原来的数组，分别对左右数组的第一个元素比较<br>当剩下元素没用完时会添加再数组后面</p>\n<h2 id=\"功能选择\"><a href=\"#功能选择\" class=\"headerlink\" title=\"功能选择\"></a>功能选择</h2><h3 id=\"功能选择-1\"><a href=\"#功能选择-1\" class=\"headerlink\" title=\"功能选择\"></a>功能选择</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int select()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        printf(&quot;请输入要选择的功能：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            case 1: add();break;</span><br><span class=\"line\">            case 2: delete();break;</span><br><span class=\"line\">            case 3: alter();break;</span><br><span class=\"line\">            case 4: find();break;</span><br><span class=\"line\">            case 5: print();break;</span><br><span class=\"line\">            case 6: short_1();break;</span><br><span class=\"line\">            case 0: return 0;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里将多个函数封装到了功能选择函数中<br>用switch来实现多种功能的选择  </p>\n<h3 id=\"排序选择\"><a href=\"#排序选择\" class=\"headerlink\" title=\"排序选择\"></a>排序选择</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//排序算法目录</span><br><span class=\"line\">int short_1()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">        printf(&quot;1、冒泡排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;2、选择排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;3、插入排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;4、归并排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">        printf(&quot;请输入要使用的排序方法：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i) &#123;</span><br><span class=\"line\">            case 1: maopao();break;</span><br><span class=\"line\">            case 2: choice();break;</span><br><span class=\"line\">            case 3: insert();break;</span><br><span class=\"line\">            case 4: merge_split();break;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>与功能选择类似  </p>\n<h2 id=\"函数的入口main\"><a href=\"#函数的入口main\" class=\"headerlink\" title=\"函数的入口main\"></a>函数的入口main</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    select();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所有内容都是在main函数中使用的，所以要在main中导入之前的函数</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>因为学生管理系统类似数据库，需要实现增删改查，来管理其数据，所以该管理系统也应该实现这四个功能，这里使用数组实现，且具体实现如下。  </p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>具体源代码存放在gitee仓库地址如下  </p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_1\" value=\"https://gitee.com/thebyte/work.git\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_1&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n\n<h2 id=\"学生成绩管理系统之目录\"><a href=\"#学生成绩管理系统之目录\" class=\"headerlink\" title=\"学生成绩管理系统之目录\"></a>学生成绩管理系统之目录</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//菜单</span><br><span class=\"line\">void menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">    printf(&quot;1、学生成绩录入\\n&quot;);</span><br><span class=\"line\">    printf(&quot;2、学生成绩删除\\n&quot;);</span><br><span class=\"line\">    printf(&quot;3、学生成绩修改\\n&quot;);</span><br><span class=\"line\">    printf(&quot;4、学生成绩查询\\n&quot;);</span><br><span class=\"line\">    printf(&quot;5、学生成绩打印\\n&quot;);</span><br><span class=\"line\">    printf(&quot;6、排       序\\n&quot;);</span><br><span class=\"line\">    printf(&quot;0、退       出\\n&quot;);</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里使用printf()函数直接输出  </p>\n<h2 id=\"学生成绩管理系统之录入\"><a href=\"#学生成绩管理系统之录入\" class=\"headerlink\" title=\"学生成绩管理系统之录入\"></a>学生成绩管理系统之录入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//录入成绩</span><br><span class=\"line\">void add()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    for (int i = 0; i &lt; max - actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int temp,k=0;//temp用来存放学号</span><br><span class=\"line\">        //当数组有成绩时</span><br><span class=\"line\">        if (actual&gt;0) &#123;</span><br><span class=\"line\">            printf(&quot;请输入第%d位学生的学号为：&quot;, actual+1);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;temp);</span><br><span class=\"line\">            //判断是否有重复学号</span><br><span class=\"line\">            while (temp!=student[k][0]&amp;&amp;k&lt;actual)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                k++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(temp==student[k][0])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //如果在数组中找到相同学号，则跳出本次循环重新输入</span><br><span class=\"line\">                printf(&quot;学号重复请重新输入!\\n&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[actual][0]=temp;</span><br><span class=\"line\">                printf(&quot;请输学号为%d的同学成绩：&quot;, student[actual][0]);</span><br><span class=\"line\">                scanf(&quot;%d&quot;, &amp;student[actual][1]);</span><br><span class=\"line\">                actual++;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //判断是否继续</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;还有继续么(y/n):&quot;);</span><br><span class=\"line\">            char c = getchar();</span><br><span class=\"line\">            if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;输入错误，即将退出录入系统!\\n&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //当数组没有成绩时</span><br><span class=\"line\">            else if (actual==0) &#123;</span><br><span class=\"line\">            printf(&quot;请输入第%d位学生的学号为：&quot;, i + 1);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;temp);</span><br><span class=\"line\">            //查找并判断是否有重复的学号</span><br><span class=\"line\">            while (temp!=student[k][0]&amp;&amp;k&lt;actual)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                k++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(temp==student[k][0])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //如果在数组中找到相同学号，则跳出本次循环重新输入</span><br><span class=\"line\">                printf(&quot;学号重复请重新输入!\\n&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[i][0]=temp;</span><br><span class=\"line\">                printf(&quot;请输学号为%d的同学成绩：&quot;, student[i][0]);</span><br><span class=\"line\">                scanf(&quot;%d&quot;, &amp;student[i][1]);</span><br><span class=\"line\">                actual++;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;还有继续么(y/n):&quot;);</span><br><span class=\"line\">            char c = getchar();</span><br><span class=\"line\">            if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;) &#123; ;</span><br><span class=\"line\">            &#125; else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;) &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                printf(&quot;输入错误，即将退出录入系统!\\n&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里需要定义一个二维数组，将学号放第一列，成绩放低0列，还需用到循环与条件判断来判断是否还要继续输入,并且定义一个存放实际人数变量actual，每次录入加1人  </p>\n<h2 id=\"学习管理系统之修改\"><a href=\"#学习管理系统之修改\" class=\"headerlink\" title=\"学习管理系统之修改\"></a>学习管理系统之修改</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//修改成绩</span><br><span class=\"line\">void alter() &#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要修改成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要修改的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //开始查找与学号配对的成绩位置</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有该学号的成绩</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //有该学号则输入修改后的成绩</span><br><span class=\"line\">            printf(&quot;请输入要修改的成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;, &amp;student[i][1]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //没有则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否继续修改</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出修改系统!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里使用循环一个一个学号对比，找到后然后将修改成绩覆盖到要修改的成绩位置，没找到则输出查无此人  </p>\n<h2 id=\"学生成绩管理系统之删除\"><a href=\"#学生成绩管理系统之删除\" class=\"headerlink\" title=\"学生成绩管理系统之删除\"></a>学生成绩管理系统之删除</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//删除成绩</span><br><span class=\"line\">void delete()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要删除成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要删除成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //查找学号</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有此学号</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果有，则后面的成绩覆盖要删除的成绩，后面依次往前挪</span><br><span class=\"line\">            for(;i&lt;actual;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[i][0]=student[i+1][0];</span><br><span class=\"line\">                student[i][1]=student[i+1][1];</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            printf(&quot;删除成功!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果没有，则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人!\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //删除一个成绩则实际人数减一</span><br><span class=\"line\">        actual--;</span><br><span class=\"line\">        //判断是否继续删除</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>删除类似修改，只是将成绩覆盖改成，下面的成绩全部往上移1格，这里每删除一个人则实际人数actual减1人  </p>\n<h2 id=\"学生成绩管理系统之查找\"><a href=\"#学生成绩管理系统之查找\" class=\"headerlink\" title=\"学生成绩管理系统之查找\"></a>学生成绩管理系统之查找</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void find()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        int number, i = 0;</span><br><span class=\"line\">        //输入要查找成绩的学号</span><br><span class=\"line\">        printf(&quot;请输入要查找的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;, &amp;number);</span><br><span class=\"line\">        //查找学号对应的成绩位置</span><br><span class=\"line\">        while (number != student[i][0] &amp;&amp; i &lt; actual)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否有与之对应的学号</span><br><span class=\"line\">        if (number == student[i][0])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //有则输出成绩</span><br><span class=\"line\">            printf(&quot;学号为%d的成绩为：%d\\n&quot;,number,student[i][1]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //没有则输出查无此人</span><br><span class=\"line\">            printf(&quot;查无此人\\n&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //判断是否继续</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出查找系统\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查找也是利用学号，一一对比找学号，然后打印该学号位置的成绩  </p>\n<h2 id=\"学生成绩管理系统之打印\"><a href=\"#学生成绩管理系统之打印\" class=\"headerlink\" title=\"学生成绩管理系统之打印\"></a>学生成绩管理系统之打印</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void print()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //用for循环依次打印出实际人数的学号成绩对应表</span><br><span class=\"line\">    int i;</span><br><span class=\"line\">    printf(&quot;成绩表如下（学号-成绩）：\\n&quot;);</span><br><span class=\"line\">    for(i=0;i&lt;actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;%4d%4d\\n&quot;,student[i][0],student[i][1]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    float average=0.0;</span><br><span class=\"line\">    float sum=0.0;</span><br><span class=\"line\">    for(int j=0;j&lt;actual;j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum=sum+student[j][1];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    average=sum/actual;</span><br><span class=\"line\">    printf(&quot;全班的平均成绩为%2f\\n&quot;,average);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里使用for循环一一换行打印  </p>\n<h2 id=\"学生成绩管理系统之排序\"><a href=\"#学生成绩管理系统之排序\" class=\"headerlink\" title=\"学生成绩管理系统之排序\"></a>学生成绩管理系统之排序</h2><h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void maopao()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int temp=0,num=0;                               //初始化存放成绩和学号的临时变量</span><br><span class=\"line\">    for(int i=0;i&lt;actual-1;i++)                     //遍历实际人数-1次</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(int j=0;j&lt;actual-i-1;j++)               //遍历实际人数减-1-1次；2人一组对比所以比要再减1次</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(student[j][1]&gt;student[j+1][1])       //判断前后两数的大小，如果前面的成绩比后面成绩大</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //交换成绩</span><br><span class=\"line\">                temp=student[j][1];</span><br><span class=\"line\">                student[j][1]= student[j+1][1];</span><br><span class=\"line\">                student[j+1][1]=temp;</span><br><span class=\"line\">                //交换学号</span><br><span class=\"line\">                num=student[j][0];</span><br><span class=\"line\">                student[j][0]=student[j+1][0];</span><br><span class=\"line\">                student[j+1][0]=num;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();                           //打印成绩</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>两两比对，交换位置，然后循环重新再比对，注意点是，外循环与内循环都比实际人数少1位  </p>\n<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//选择排序</span><br><span class=\"line\">void choice()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int a=0,b=0,min;</span><br><span class=\"line\">    for(int i=0;i&lt;actual-1;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        min=i;                          //假设最小值位置</span><br><span class=\"line\">        for(int j=i+1;j&lt;actual;j++)     //开始遍历找所有的值对比</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(student[j][1]&lt;student[min][1])       //如果后面的数小于最小值，则记录最小值的位置</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                min=j;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(min!=i)                      //如果最小值不等于最开始的位置，则</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //交换学号</span><br><span class=\"line\">            b=student[min][0];</span><br><span class=\"line\">            student[min][0]=student[i][0];</span><br><span class=\"line\">            student[i][0]=b;</span><br><span class=\"line\">            //交换成绩</span><br><span class=\"line\">            a=student[min][1];</span><br><span class=\"line\">            student[min][1]=student[i][1];</span><br><span class=\"line\">            student[i][1]=a;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();                              //打印成绩</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>选择排序是将最小的元素挑出来与没排序的第一位交换位置，它会不断的选择剩余元素中的最小者      </p>\n<h3 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//插入排序</span><br><span class=\"line\">void insert()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    int i,j;</span><br><span class=\"line\">    int temp,id;</span><br><span class=\"line\">    for(i=1;i&lt;actual;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(student[i][1]&lt;student[i-1][1])           //如果后面的数小于前面的数</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            temp=student[i][1];                     //保存后面的数到temp</span><br><span class=\"line\">            id=student[i][0];                       //对应的学号保存到ou</span><br><span class=\"line\">            for(j=i-1;student[j][1]&gt;temp;j--)       //开始将前面到数移位，当前面的数大于temp就开始循环，直到有比temp大的数和最前面则跳出循环</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                student[j+1][1]=student[j][1];      //将成绩向后移</span><br><span class=\"line\">                student[j+1][0]=student[j][0];      //学号向后移</span><br><span class=\"line\">                if(j&lt;0)                             //当最小到数移动到第一位后</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    break;                          //退出循环</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            student[j+1][1]=temp;                     //将temp的值插入到比temp大的数的前面</span><br><span class=\"line\">            student[j+1][0]=id;                       //将对应的学号插入到对应的位置</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    print();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>插入在比自己小的数的前面<br>首先将后面比前面小的数存放在另一个变量，然后前面比这个数大的数依次往后挪，直到比自己小的数，然后放入到其后面。  </p>\n<h3 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//归并排序</span><br><span class=\"line\">//分治  递归</span><br><span class=\"line\">void merge_split()&#123;</span><br><span class=\"line\">    split(student,1,actual);</span><br><span class=\"line\">    print();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//将数组用递归拆成单个元素</span><br><span class=\"line\">void split(int arr[][2],int p,int q)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int mid;</span><br><span class=\"line\">    //确保拆成单个元素</span><br><span class=\"line\">    if(arr== NULL ||p&gt;q||p==q)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mid=(p+q)/2;</span><br><span class=\"line\">    split(arr,p,mid);</span><br><span class=\"line\">    split(arr,mid+1,q);</span><br><span class=\"line\">    merge(arr,p,mid,q);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//排序归并在一起</span><br><span class=\"line\">void merge(int arr[][2],int p,int mid,int q)&#123;</span><br><span class=\"line\">    int i,j,k;</span><br><span class=\"line\">    int L,R;</span><br><span class=\"line\">    //定义临时存放左右数组的数组</span><br><span class=\"line\">    int LL[max][2];</span><br><span class=\"line\">    int RR[max][2];</span><br><span class=\"line\">    //定义左右数组长度</span><br><span class=\"line\">    L=mid-p+1;</span><br><span class=\"line\">    R=q-mid;</span><br><span class=\"line\">    //将左边数组存放到临时数组</span><br><span class=\"line\">    for(i=0;i&lt;L;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        LL[i][1]=arr[p-1+i][1];</span><br><span class=\"line\">        LL[i][0]=arr[p-1+i][0];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //将右边数组存放到临时数组</span><br><span class=\"line\">    for(i=0;i&lt;R;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        RR[i][1]=arr[mid+i][1];</span><br><span class=\"line\">        RR[i][0]=arr[mid+i][0];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    i=0;</span><br><span class=\"line\">    j=0;</span><br><span class=\"line\">    for(k=p;k&lt;=q;k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //当LL与RR没有元素时，放入原来数组</span><br><span class=\"line\">        if(i==L)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            arr[k-1][1]=RR[j][1];</span><br><span class=\"line\">            arr[k-1][0]=RR[j][0];</span><br><span class=\"line\">            j++;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if(j==R)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            arr[k-1][1]=LL[i][1];</span><br><span class=\"line\">            arr[k-1][0]=LL[i][0];</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //当LL与RR还有元素时，放入原来数组</span><br><span class=\"line\">            if(LL[i][1]&lt;RR[j][1])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                arr[k-1][1]=LL[i][1];</span><br><span class=\"line\">                arr[k-1][0]=LL[i][0];</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                arr[k-1][1]=RR[j][1];</span><br><span class=\"line\">                arr[k-1][0]=RR[j][0];</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>先用递归拆分数组，然后用循环归并并排序数组<br>递归是不断把数组拆成左右两部分，其中写的if判断是用来限制，分成一个元素后不可再分。<br>归并是先记录左右素组的大小，然后分别放到另一个数组中，然后归并到原来的数组，分别对左右数组的第一个元素比较<br>当剩下元素没用完时会添加再数组后面</p>\n<h2 id=\"功能选择\"><a href=\"#功能选择\" class=\"headerlink\" title=\"功能选择\"></a>功能选择</h2><h3 id=\"功能选择-1\"><a href=\"#功能选择-1\" class=\"headerlink\" title=\"功能选择\"></a>功能选择</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int select()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        printf(&quot;请输入要选择的功能：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            case 1: add();break;</span><br><span class=\"line\">            case 2: delete();break;</span><br><span class=\"line\">            case 3: alter();break;</span><br><span class=\"line\">            case 4: find();break;</span><br><span class=\"line\">            case 5: print();break;</span><br><span class=\"line\">            case 6: short_1();break;</span><br><span class=\"line\">            case 0: return 0;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里将多个函数封装到了功能选择函数中<br>用switch来实现多种功能的选择  </p>\n<h3 id=\"排序选择\"><a href=\"#排序选择\" class=\"headerlink\" title=\"排序选择\"></a>排序选择</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//排序算法目录</span><br><span class=\"line\">int short_1()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">        printf(&quot;1、冒泡排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;2、选择排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;3、插入排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;4、归并排序\\n&quot;);</span><br><span class=\"line\">        printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">        printf(&quot;请输入要使用的排序方法：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i) &#123;</span><br><span class=\"line\">            case 1: maopao();break;</span><br><span class=\"line\">            case 2: choice();break;</span><br><span class=\"line\">            case 3: insert();break;</span><br><span class=\"line\">            case 4: merge_split();break;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>与功能选择类似  </p>\n<h2 id=\"函数的入口main\"><a href=\"#函数的入口main\" class=\"headerlink\" title=\"函数的入口main\"></a>函数的入口main</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    select();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所有内容都是在main函数中使用的，所以要在main中导入之前的函数</p>\n"},{"title":"C语言笔记简化版","date":"2022-10-28T03:44:23.000Z","_content":"## 各章节重点\n### 一、数据类型\n```\n1、int   整型  \n2、float 浮点型（小数）  \n3、char  字符  \n```\n\n### 二、输入输出\n```\n1.printf();输出函数    \n2.scanf();输入函数    \n```\n\n### 三、选择结构\n```\nif(条件表达式1)\n{\n\t//条件1成立执行这里的代码；\n}\nelse (条件2)\n{\n\t//条件2成立执行这里的代码；\n}\nelse\n{\n\t//其他情况执行这里代码；\n}\n```\n\n### 四、循环结构\n循环分为for循环、while循环、do while循环  \n1.for循环  \n```\nfor(循环变量赋初值;循环条件;循环变量增值)\n{\n\t//每次循环要执行的代码放这;\n}\n```\n\n2.while循环\n```\nwhile(条件表达式1)\n{\n\t//每次循环要执行的代码放这;\n}\n```\n\n3.do while循环\n```\ndo\n{\n\t//每次循环要执行的代码放这;\n}while(条件表达式1);\n```\n\n### 五、退出循环语句\n退出循环分为break; 与 continue  \n\n```\nbreak;\n``` \n\nbreak;语句用于退出整个循环\n\n```\ncontinue;\n```\n\ncontinue用于退出本次循环而不退出整个循环  \n\n### 六、数组\n1. 一维数组  \n1.1 定义一维数组 \n\n```\n数据类型 数组名[填数字或表达式];\n```\n\n1.2\t数组引用  \n\n```\n数组名[下标]\n```\n\n2. 二维数组\n2.1 二维数组定义\n\n```\n类型 数组名[多少行][多少.列];\n```\n\n2.2 二维数组的引用  \n\n```\n数据类型 数组名[行.下标][列.下标]\n```\n\n### 七、字符串处理函数\n```\n1.puts(字符数组)   \n输出字符串函数      \n\n2.gets(字符数组)   \n输入字符串的函数  \n\n3.strcat(字符数组1,字符数组2)          \n字符串连接函数   \n\n4.strcpy(字符数组1,字符数组2)\n字符串复制函数  \n\n5.strcmp(字符串1,字符串2)     \n字符串比较函数  \n\n6.strlen(字符数组)   \n测字符串长度的函数  \n\n7.strlwr(字符串)  \n转换为小写的函数  \n\n8.strupr(字符串)  \n转换为大写的函数  \n```\n\n### 八、函数定义\n1.定义无参函数\n```\n类型名 函数名()\n{\n\t//函数体;\n}\n```\n2.定义有参函数  \n```\n类型名 函数名(形式参数)\n{\n\t//函数体;\n}\n```\n### 九、指针\n1.定义指针变量\n```\n类型名 *指针变量名;\n```\n### 十、指针数组\n数组元素的指针就是数组元素的地址  \n通过指针引用数组的方法如下：  \n```\n*(数组名+数字)\n```\n\n### 十一、动态内存分配\n```\n1、malloc()函数开辟动态存储区\n2、calloc()函数开辟动态存储区\n3、realloc()函数重新分配动态存储区\n4、free()函数释放动态存储区\n```\n\n### 十二、结构体\n1.定义结构体  \n```\nstruct 结构体名\n{\n    成员表列;\n    //类型名 成员名; \n}\n```\n### 十三、共用体类型\n```\nunion 共用体名\n{\n\t成员表列\n}变量表列；\n```\n\n### 十四、枚举类型\n1.枚举类型定义   \n```\nenum[枚举名]{枚举元素列表};\n```\n### typedef声明新类型名\n```\ntypedef int Integer;\n```\n比如这句的意思是用Integer为类型名，作用与int相同  \n### 十五、文件的输入输出\n1.用fopen函数打开数据文件  \n```\nfopen(文件名,使用文件方式);\n```\n2.用fclose函数关闭数据文件  \n```\nfclose(文件指针);\n```\n","source":"_posts/2022-10-28_C语言笔记简化版.md","raw":"---\ntitle: C语言笔记简化版\ndate: 2022/10/28 11:44:23\ntags: [C]\ncategories: [设计开发, C语言]\n---\n## 各章节重点\n### 一、数据类型\n```\n1、int   整型  \n2、float 浮点型（小数）  \n3、char  字符  \n```\n\n### 二、输入输出\n```\n1.printf();输出函数    \n2.scanf();输入函数    \n```\n\n### 三、选择结构\n```\nif(条件表达式1)\n{\n\t//条件1成立执行这里的代码；\n}\nelse (条件2)\n{\n\t//条件2成立执行这里的代码；\n}\nelse\n{\n\t//其他情况执行这里代码；\n}\n```\n\n### 四、循环结构\n循环分为for循环、while循环、do while循环  \n1.for循环  \n```\nfor(循环变量赋初值;循环条件;循环变量增值)\n{\n\t//每次循环要执行的代码放这;\n}\n```\n\n2.while循环\n```\nwhile(条件表达式1)\n{\n\t//每次循环要执行的代码放这;\n}\n```\n\n3.do while循环\n```\ndo\n{\n\t//每次循环要执行的代码放这;\n}while(条件表达式1);\n```\n\n### 五、退出循环语句\n退出循环分为break; 与 continue  \n\n```\nbreak;\n``` \n\nbreak;语句用于退出整个循环\n\n```\ncontinue;\n```\n\ncontinue用于退出本次循环而不退出整个循环  \n\n### 六、数组\n1. 一维数组  \n1.1 定义一维数组 \n\n```\n数据类型 数组名[填数字或表达式];\n```\n\n1.2\t数组引用  \n\n```\n数组名[下标]\n```\n\n2. 二维数组\n2.1 二维数组定义\n\n```\n类型 数组名[多少行][多少.列];\n```\n\n2.2 二维数组的引用  \n\n```\n数据类型 数组名[行.下标][列.下标]\n```\n\n### 七、字符串处理函数\n```\n1.puts(字符数组)   \n输出字符串函数      \n\n2.gets(字符数组)   \n输入字符串的函数  \n\n3.strcat(字符数组1,字符数组2)          \n字符串连接函数   \n\n4.strcpy(字符数组1,字符数组2)\n字符串复制函数  \n\n5.strcmp(字符串1,字符串2)     \n字符串比较函数  \n\n6.strlen(字符数组)   \n测字符串长度的函数  \n\n7.strlwr(字符串)  \n转换为小写的函数  \n\n8.strupr(字符串)  \n转换为大写的函数  \n```\n\n### 八、函数定义\n1.定义无参函数\n```\n类型名 函数名()\n{\n\t//函数体;\n}\n```\n2.定义有参函数  \n```\n类型名 函数名(形式参数)\n{\n\t//函数体;\n}\n```\n### 九、指针\n1.定义指针变量\n```\n类型名 *指针变量名;\n```\n### 十、指针数组\n数组元素的指针就是数组元素的地址  \n通过指针引用数组的方法如下：  \n```\n*(数组名+数字)\n```\n\n### 十一、动态内存分配\n```\n1、malloc()函数开辟动态存储区\n2、calloc()函数开辟动态存储区\n3、realloc()函数重新分配动态存储区\n4、free()函数释放动态存储区\n```\n\n### 十二、结构体\n1.定义结构体  \n```\nstruct 结构体名\n{\n    成员表列;\n    //类型名 成员名; \n}\n```\n### 十三、共用体类型\n```\nunion 共用体名\n{\n\t成员表列\n}变量表列；\n```\n\n### 十四、枚举类型\n1.枚举类型定义   \n```\nenum[枚举名]{枚举元素列表};\n```\n### typedef声明新类型名\n```\ntypedef int Integer;\n```\n比如这句的意思是用Integer为类型名，作用与int相同  \n### 十五、文件的输入输出\n1.用fopen函数打开数据文件  \n```\nfopen(文件名,使用文件方式);\n```\n2.用fclose函数关闭数据文件  \n```\nfclose(文件指针);\n```\n","slug":"2022-10-28_C语言笔记简化版","published":1,"updated":"2022-11-02T02:48:26.607Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8q000gu19kfgap3h3q","content":"<h2 id=\"各章节重点\"><a href=\"#各章节重点\" class=\"headerlink\" title=\"各章节重点\"></a>各章节重点</h2><h3 id=\"一、数据类型\"><a href=\"#一、数据类型\" class=\"headerlink\" title=\"一、数据类型\"></a>一、数据类型</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、int   整型  </span><br><span class=\"line\">2、float 浮点型（小数）  </span><br><span class=\"line\">3、char  字符  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、输入输出\"><a href=\"#二、输入输出\" class=\"headerlink\" title=\"二、输入输出\"></a>二、输入输出</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.printf();输出函数    </span><br><span class=\"line\">2.scanf();输入函数    </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三、选择结构\"><a href=\"#三、选择结构\" class=\"headerlink\" title=\"三、选择结构\"></a>三、选择结构</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(条件表达式1)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//条件1成立执行这里的代码；</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else (条件2)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//条件2成立执行这里的代码；</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//其他情况执行这里代码；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"四、循环结构\"><a href=\"#四、循环结构\" class=\"headerlink\" title=\"四、循环结构\"></a>四、循环结构</h3><p>循环分为for循环、while循环、do while循环<br>1.for循环  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for(循环变量赋初值;循环条件;循环变量增值)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//每次循环要执行的代码放这;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2.while循环</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while(条件表达式1)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//每次循环要执行的代码放这;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3.do while循环</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">do</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//每次循环要执行的代码放这;</span><br><span class=\"line\">&#125;while(条件表达式1);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"五、退出循环语句\"><a href=\"#五、退出循环语句\" class=\"headerlink\" title=\"五、退出循环语句\"></a>五、退出循环语句</h3><p>退出循环分为break; 与 continue  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">break;</span><br></pre></td></tr></table></figure>\n\n<p>break;语句用于退出整个循环</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">continue;</span><br></pre></td></tr></table></figure>\n\n<p>continue用于退出本次循环而不退出整个循环  </p>\n<h3 id=\"六、数组\"><a href=\"#六、数组\" class=\"headerlink\" title=\"六、数组\"></a>六、数组</h3><ol>\n<li>一维数组  </li>\n<li>1 定义一维数组 </li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据类型 数组名[填数字或表达式];</span><br></pre></td></tr></table></figure>\n\n<p>1.2    数组引用  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组名[下标]</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>二维数组</li>\n<li>1 二维数组定义</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型 数组名[多少行][多少.列];</span><br></pre></td></tr></table></figure>\n\n<p>2.2 二维数组的引用  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据类型 数组名[行.下标][列.下标]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"七、字符串处理函数\"><a href=\"#七、字符串处理函数\" class=\"headerlink\" title=\"七、字符串处理函数\"></a>七、字符串处理函数</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.puts(字符数组)   </span><br><span class=\"line\">输出字符串函数      </span><br><span class=\"line\"></span><br><span class=\"line\">2.gets(字符数组)   </span><br><span class=\"line\">输入字符串的函数  </span><br><span class=\"line\"></span><br><span class=\"line\">3.strcat(字符数组1,字符数组2)          </span><br><span class=\"line\">字符串连接函数   </span><br><span class=\"line\"></span><br><span class=\"line\">4.strcpy(字符数组1,字符数组2)</span><br><span class=\"line\">字符串复制函数  </span><br><span class=\"line\"></span><br><span class=\"line\">5.strcmp(字符串1,字符串2)     </span><br><span class=\"line\">字符串比较函数  </span><br><span class=\"line\"></span><br><span class=\"line\">6.strlen(字符数组)   </span><br><span class=\"line\">测字符串长度的函数  </span><br><span class=\"line\"></span><br><span class=\"line\">7.strlwr(字符串)  </span><br><span class=\"line\">转换为小写的函数  </span><br><span class=\"line\"></span><br><span class=\"line\">8.strupr(字符串)  </span><br><span class=\"line\">转换为大写的函数  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"八、函数定义\"><a href=\"#八、函数定义\" class=\"headerlink\" title=\"八、函数定义\"></a>八、函数定义</h3><p>1.定义无参函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型名 函数名()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//函数体;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.定义有参函数  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型名 函数名(形式参数)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//函数体;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"九、指针\"><a href=\"#九、指针\" class=\"headerlink\" title=\"九、指针\"></a>九、指针</h3><p>1.定义指针变量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型名 *指针变量名;</span><br></pre></td></tr></table></figure>\n<h3 id=\"十、指针数组\"><a href=\"#十、指针数组\" class=\"headerlink\" title=\"十、指针数组\"></a>十、指针数组</h3><p>数组元素的指针就是数组元素的地址<br>通过指针引用数组的方法如下：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*(数组名+数字)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十一、动态内存分配\"><a href=\"#十一、动态内存分配\" class=\"headerlink\" title=\"十一、动态内存分配\"></a>十一、动态内存分配</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、malloc()函数开辟动态存储区</span><br><span class=\"line\">2、calloc()函数开辟动态存储区</span><br><span class=\"line\">3、realloc()函数重新分配动态存储区</span><br><span class=\"line\">4、free()函数释放动态存储区</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十二、结构体\"><a href=\"#十二、结构体\" class=\"headerlink\" title=\"十二、结构体\"></a>十二、结构体</h3><p>1.定义结构体  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct 结构体名</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    成员表列;</span><br><span class=\"line\">    //类型名 成员名; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"十三、共用体类型\"><a href=\"#十三、共用体类型\" class=\"headerlink\" title=\"十三、共用体类型\"></a>十三、共用体类型</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">union 共用体名</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t成员表列</span><br><span class=\"line\">&#125;变量表列；</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十四、枚举类型\"><a href=\"#十四、枚举类型\" class=\"headerlink\" title=\"十四、枚举类型\"></a>十四、枚举类型</h3><p>1.枚举类型定义   </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum[枚举名]&#123;枚举元素列表&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"typedef声明新类型名\"><a href=\"#typedef声明新类型名\" class=\"headerlink\" title=\"typedef声明新类型名\"></a>typedef声明新类型名</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef int Integer;</span><br></pre></td></tr></table></figure>\n<p>比如这句的意思是用Integer为类型名，作用与int相同  </p>\n<h3 id=\"十五、文件的输入输出\"><a href=\"#十五、文件的输入输出\" class=\"headerlink\" title=\"十五、文件的输入输出\"></a>十五、文件的输入输出</h3><p>1.用fopen函数打开数据文件  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fopen(文件名,使用文件方式);</span><br></pre></td></tr></table></figure>\n<p>2.用fclose函数关闭数据文件  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fclose(文件指针);</span><br></pre></td></tr></table></figure>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"各章节重点\"><a href=\"#各章节重点\" class=\"headerlink\" title=\"各章节重点\"></a>各章节重点</h2><h3 id=\"一、数据类型\"><a href=\"#一、数据类型\" class=\"headerlink\" title=\"一、数据类型\"></a>一、数据类型</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、int   整型  </span><br><span class=\"line\">2、float 浮点型（小数）  </span><br><span class=\"line\">3、char  字符  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、输入输出\"><a href=\"#二、输入输出\" class=\"headerlink\" title=\"二、输入输出\"></a>二、输入输出</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.printf();输出函数    </span><br><span class=\"line\">2.scanf();输入函数    </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三、选择结构\"><a href=\"#三、选择结构\" class=\"headerlink\" title=\"三、选择结构\"></a>三、选择结构</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(条件表达式1)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//条件1成立执行这里的代码；</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else (条件2)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//条件2成立执行这里的代码；</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//其他情况执行这里代码；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"四、循环结构\"><a href=\"#四、循环结构\" class=\"headerlink\" title=\"四、循环结构\"></a>四、循环结构</h3><p>循环分为for循环、while循环、do while循环<br>1.for循环  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for(循环变量赋初值;循环条件;循环变量增值)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//每次循环要执行的代码放这;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2.while循环</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while(条件表达式1)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//每次循环要执行的代码放这;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3.do while循环</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">do</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//每次循环要执行的代码放这;</span><br><span class=\"line\">&#125;while(条件表达式1);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"五、退出循环语句\"><a href=\"#五、退出循环语句\" class=\"headerlink\" title=\"五、退出循环语句\"></a>五、退出循环语句</h3><p>退出循环分为break; 与 continue  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">break;</span><br></pre></td></tr></table></figure>\n\n<p>break;语句用于退出整个循环</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">continue;</span><br></pre></td></tr></table></figure>\n\n<p>continue用于退出本次循环而不退出整个循环  </p>\n<h3 id=\"六、数组\"><a href=\"#六、数组\" class=\"headerlink\" title=\"六、数组\"></a>六、数组</h3><ol>\n<li>一维数组  </li>\n<li>1 定义一维数组 </li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据类型 数组名[填数字或表达式];</span><br></pre></td></tr></table></figure>\n\n<p>1.2    数组引用  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组名[下标]</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>二维数组</li>\n<li>1 二维数组定义</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型 数组名[多少行][多少.列];</span><br></pre></td></tr></table></figure>\n\n<p>2.2 二维数组的引用  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据类型 数组名[行.下标][列.下标]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"七、字符串处理函数\"><a href=\"#七、字符串处理函数\" class=\"headerlink\" title=\"七、字符串处理函数\"></a>七、字符串处理函数</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.puts(字符数组)   </span><br><span class=\"line\">输出字符串函数      </span><br><span class=\"line\"></span><br><span class=\"line\">2.gets(字符数组)   </span><br><span class=\"line\">输入字符串的函数  </span><br><span class=\"line\"></span><br><span class=\"line\">3.strcat(字符数组1,字符数组2)          </span><br><span class=\"line\">字符串连接函数   </span><br><span class=\"line\"></span><br><span class=\"line\">4.strcpy(字符数组1,字符数组2)</span><br><span class=\"line\">字符串复制函数  </span><br><span class=\"line\"></span><br><span class=\"line\">5.strcmp(字符串1,字符串2)     </span><br><span class=\"line\">字符串比较函数  </span><br><span class=\"line\"></span><br><span class=\"line\">6.strlen(字符数组)   </span><br><span class=\"line\">测字符串长度的函数  </span><br><span class=\"line\"></span><br><span class=\"line\">7.strlwr(字符串)  </span><br><span class=\"line\">转换为小写的函数  </span><br><span class=\"line\"></span><br><span class=\"line\">8.strupr(字符串)  </span><br><span class=\"line\">转换为大写的函数  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"八、函数定义\"><a href=\"#八、函数定义\" class=\"headerlink\" title=\"八、函数定义\"></a>八、函数定义</h3><p>1.定义无参函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型名 函数名()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//函数体;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.定义有参函数  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型名 函数名(形式参数)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//函数体;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"九、指针\"><a href=\"#九、指针\" class=\"headerlink\" title=\"九、指针\"></a>九、指针</h3><p>1.定义指针变量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类型名 *指针变量名;</span><br></pre></td></tr></table></figure>\n<h3 id=\"十、指针数组\"><a href=\"#十、指针数组\" class=\"headerlink\" title=\"十、指针数组\"></a>十、指针数组</h3><p>数组元素的指针就是数组元素的地址<br>通过指针引用数组的方法如下：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*(数组名+数字)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十一、动态内存分配\"><a href=\"#十一、动态内存分配\" class=\"headerlink\" title=\"十一、动态内存分配\"></a>十一、动态内存分配</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、malloc()函数开辟动态存储区</span><br><span class=\"line\">2、calloc()函数开辟动态存储区</span><br><span class=\"line\">3、realloc()函数重新分配动态存储区</span><br><span class=\"line\">4、free()函数释放动态存储区</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十二、结构体\"><a href=\"#十二、结构体\" class=\"headerlink\" title=\"十二、结构体\"></a>十二、结构体</h3><p>1.定义结构体  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct 结构体名</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    成员表列;</span><br><span class=\"line\">    //类型名 成员名; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"十三、共用体类型\"><a href=\"#十三、共用体类型\" class=\"headerlink\" title=\"十三、共用体类型\"></a>十三、共用体类型</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">union 共用体名</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t成员表列</span><br><span class=\"line\">&#125;变量表列；</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"十四、枚举类型\"><a href=\"#十四、枚举类型\" class=\"headerlink\" title=\"十四、枚举类型\"></a>十四、枚举类型</h3><p>1.枚举类型定义   </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum[枚举名]&#123;枚举元素列表&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"typedef声明新类型名\"><a href=\"#typedef声明新类型名\" class=\"headerlink\" title=\"typedef声明新类型名\"></a>typedef声明新类型名</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef int Integer;</span><br></pre></td></tr></table></figure>\n<p>比如这句的意思是用Integer为类型名，作用与int相同  </p>\n<h3 id=\"十五、文件的输入输出\"><a href=\"#十五、文件的输入输出\" class=\"headerlink\" title=\"十五、文件的输入输出\"></a>十五、文件的输入输出</h3><p>1.用fopen函数打开数据文件  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fopen(文件名,使用文件方式);</span><br></pre></td></tr></table></figure>\n<p>2.用fclose函数关闭数据文件  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fclose(文件指针);</span><br></pre></td></tr></table></figure>\n"},{"title":"链表实现学生成绩管理系统","date":"2022-11-01T13:33:23.000Z","_content":"## 源代码\n具体源代码存放在gitee仓库地址如下  \n\n{% copy https://gitee.com/thebyte/work.git %}\n\n## 目录\n目录就不用多说，用以前的打印就好了  \n```\nvoid menu()\n{\n    printf(\"===============\\n\");\n    printf(\"1、学生成绩录入\\n\");\n    printf(\"2、学生成绩删除\\n\");\n    printf(\"3、学生成绩修改\\n\");\n    printf(\"4、学生成绩查询\\n\");\n    printf(\"5、学生成绩打印\\n\");\n    printf(\"6、释 放 空 间\\n\");\n    printf(\"0、退       出\\n\");\n    printf(\"===============\\n\");\n}\n```\n## 链表录入\n先要定义结构体  \n```\ntypedef struct student\n{\n    //信息域\n    int num;\n    char name[10];\n    char sex;\n    float score;\n    //指针域\n    struct student *next;\n}stu;\n```\n然后需要定义头指针  \n```\nstu *head=NULL;\n```\n然后开始判断链表是否为空  \n```\nvoid add()\n{\n    //定义选择变量\n    int choose;\n    //定义尾指针\n    stu *last=NULL;\n    while (1)\n    {\n        //当链表为空时，head当next成员指向last，last为新节点，用来存放数据，last当next成员指向空\n        if(head==NULL)\n        {\n            //给第一个节点分配空间，当链表只有一个节点时，这个节点就是这个链表当last\n            last=(stu *)malloc(sizeof (stu));\n            last->next=NULL;\n            head=(stu *)malloc(sizeof (stu));\n            head->next=last;\n            //录入信息到信息域\n            printf(\"请输入学号：\");\n            scanf(\"%d\",&last->num);\n            printf(\"请输入姓名：\");\n            scanf(\"%s\",last->name);\n            getchar();\n            printf(\"请输入性别（男:M,女:F)：\");\n            scanf(\"%c\",&last->sex);\n            printf(\"请输入成绩：\");\n            scanf(\"%f\",&last->score);\n        }\n        //当链表不为空时，找到最后一个节点，last的next成员分配空间，然后最新的将last这个指针指向刚刚建立的空间为最新的last，然后最新的last的next成员指向null\n        else if(head!=NULL)\n        {\n            //查找链表的最后一个节点\n            last=head->next;\n            while(last->next!=NULL)\n            {\n                last=last->next;\n            }\n            //分配新节点空间\n            last->next=(stu *)malloc(sizeof (stu));\n            //标注新的last\n            last=last->next;\n            last->next=NULL;\n            //录入信息到信息域\n            printf(\"请输入学号：\");\n            scanf(\"%d\",&last->num);\n            printf(\"请输入姓名：\");\n            scanf(\"%s\",last->name);\n            getchar();\n            printf(\"请输入性别（男:M,女:F)：\");\n            scanf(\"%c\",&last->sex);\n            printf(\"请输入成绩：\");\n            scanf(\"%f\",&last->score);\n        }\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n其中也需要定义last尾指针，这个指针在录入时代表的意思是存放最后一个节点的地址  \n其中malloc()内存分配函数需要强行改变类型切需要引用头文件  \n```\n#include <stdlib.h>\n```\n\n## 删除成绩\n删除后面的都依照数组实现的学生管理系统逻辑推理写出，就不过多解释，有不懂的可以在联系我\n```\nvoid delete()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要删除成绩的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head;\n        while(temp->next!=NULL)\n        {\n            if(num==temp->next->num)\n            {\n                stu *del=temp->next;\n                temp->next=temp->next->next;\n                free(del);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 修改成绩\n```\n//修改成绩\nvoid alter()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要修改成绩的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head->next;\n        while(temp!=NULL)\n        {\n            if(num==temp->num)\n            {\n                printf(\"请输入要修改的成绩：\");\n                scanf(\"%f\",&temp->score);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 打印链表\n```\n//链表当输出\nvoid print()\n{\n    stu *temp;\n    temp=head->next;\n    printf(\"学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n\");\n    while(temp!=NULL)\n    {\n        printf(\"%-16d%-8s%-8c%-8.2f\\n\",temp->num,temp->name,temp->sex,temp->score);\n        temp=temp->next;\n    }\n    return;\n\n}\n```\n## 释放内存空间\n```\n//释放空间\nvoid release()\n{\n    stu *temp_2;\n    while(head!=NULL)\n    {\n        temp_2=head;\n        head=head->next;\n        free(temp_2);\n    }\n\n}\n```\n## 成绩查询\n```\n//查找成绩\nvoid find()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要查找的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head->next;\n        while(temp!=NULL)\n        {\n            if(num==temp->num)\n            {\n                printf(\"你要查找的学生信息如下：\\n\");\n                printf(\"学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n\");\n                printf(\"%-16d%-8s%-8c%-8.2f\\n\",temp->num,temp->name,temp->sex,temp->score);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 功能选择与程序入口\n```\n//选择功能\nint select()\n{\n    while (1)\n    {\n        int i;\n        menu();\n        printf(\"请输入要选择的功能：\");\n        scanf(\"%d\",&i);\n        switch (i)\n        {\n            case 1: add();break;\n            case 2: delete();break;\n            case 3: alter();break;\n            case 4: find();break;\n            case 5: print();break;\n            case 6: release();break;\n            case 0: return 0;\n            default: printf(\"输入错误，请重新输入\");break;\n        }\n    }\n}\nint main()\n{\n    select();\n}\n```","source":"_posts/2022-11-1_链表实现学生成绩管理系统.md","raw":"---\ntitle: 链表实现学生成绩管理系统\ndate: 2022/11/1 21:33:23\ntags: [C]\ncategories: [设计开发, C语言]\n---\n## 源代码\n具体源代码存放在gitee仓库地址如下  \n\n{% copy https://gitee.com/thebyte/work.git %}\n\n## 目录\n目录就不用多说，用以前的打印就好了  \n```\nvoid menu()\n{\n    printf(\"===============\\n\");\n    printf(\"1、学生成绩录入\\n\");\n    printf(\"2、学生成绩删除\\n\");\n    printf(\"3、学生成绩修改\\n\");\n    printf(\"4、学生成绩查询\\n\");\n    printf(\"5、学生成绩打印\\n\");\n    printf(\"6、释 放 空 间\\n\");\n    printf(\"0、退       出\\n\");\n    printf(\"===============\\n\");\n}\n```\n## 链表录入\n先要定义结构体  \n```\ntypedef struct student\n{\n    //信息域\n    int num;\n    char name[10];\n    char sex;\n    float score;\n    //指针域\n    struct student *next;\n}stu;\n```\n然后需要定义头指针  \n```\nstu *head=NULL;\n```\n然后开始判断链表是否为空  \n```\nvoid add()\n{\n    //定义选择变量\n    int choose;\n    //定义尾指针\n    stu *last=NULL;\n    while (1)\n    {\n        //当链表为空时，head当next成员指向last，last为新节点，用来存放数据，last当next成员指向空\n        if(head==NULL)\n        {\n            //给第一个节点分配空间，当链表只有一个节点时，这个节点就是这个链表当last\n            last=(stu *)malloc(sizeof (stu));\n            last->next=NULL;\n            head=(stu *)malloc(sizeof (stu));\n            head->next=last;\n            //录入信息到信息域\n            printf(\"请输入学号：\");\n            scanf(\"%d\",&last->num);\n            printf(\"请输入姓名：\");\n            scanf(\"%s\",last->name);\n            getchar();\n            printf(\"请输入性别（男:M,女:F)：\");\n            scanf(\"%c\",&last->sex);\n            printf(\"请输入成绩：\");\n            scanf(\"%f\",&last->score);\n        }\n        //当链表不为空时，找到最后一个节点，last的next成员分配空间，然后最新的将last这个指针指向刚刚建立的空间为最新的last，然后最新的last的next成员指向null\n        else if(head!=NULL)\n        {\n            //查找链表的最后一个节点\n            last=head->next;\n            while(last->next!=NULL)\n            {\n                last=last->next;\n            }\n            //分配新节点空间\n            last->next=(stu *)malloc(sizeof (stu));\n            //标注新的last\n            last=last->next;\n            last->next=NULL;\n            //录入信息到信息域\n            printf(\"请输入学号：\");\n            scanf(\"%d\",&last->num);\n            printf(\"请输入姓名：\");\n            scanf(\"%s\",last->name);\n            getchar();\n            printf(\"请输入性别（男:M,女:F)：\");\n            scanf(\"%c\",&last->sex);\n            printf(\"请输入成绩：\");\n            scanf(\"%f\",&last->score);\n        }\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n其中也需要定义last尾指针，这个指针在录入时代表的意思是存放最后一个节点的地址  \n其中malloc()内存分配函数需要强行改变类型切需要引用头文件  \n```\n#include <stdlib.h>\n```\n\n## 删除成绩\n删除后面的都依照数组实现的学生管理系统逻辑推理写出，就不过多解释，有不懂的可以在联系我\n```\nvoid delete()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要删除成绩的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head;\n        while(temp->next!=NULL)\n        {\n            if(num==temp->next->num)\n            {\n                stu *del=temp->next;\n                temp->next=temp->next->next;\n                free(del);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 修改成绩\n```\n//修改成绩\nvoid alter()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要修改成绩的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head->next;\n        while(temp!=NULL)\n        {\n            if(num==temp->num)\n            {\n                printf(\"请输入要修改的成绩：\");\n                scanf(\"%f\",&temp->score);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 打印链表\n```\n//链表当输出\nvoid print()\n{\n    stu *temp;\n    temp=head->next;\n    printf(\"学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n\");\n    while(temp!=NULL)\n    {\n        printf(\"%-16d%-8s%-8c%-8.2f\\n\",temp->num,temp->name,temp->sex,temp->score);\n        temp=temp->next;\n    }\n    return;\n\n}\n```\n## 释放内存空间\n```\n//释放空间\nvoid release()\n{\n    stu *temp_2;\n    while(head!=NULL)\n    {\n        temp_2=head;\n        head=head->next;\n        free(temp_2);\n    }\n\n}\n```\n## 成绩查询\n```\n//查找成绩\nvoid find()\n{\n    while (1)\n    {\n        int num;\n        if(head==NULL)\n        {\n            printf(\"学生成绩表无信息\\n\");\n            break;\n        }\n        printf(\"请输入要查找的学号：\");\n        scanf(\"%d\",&num);\n        stu *temp;\n        temp=head->next;\n        while(temp!=NULL)\n        {\n            if(num==temp->num)\n            {\n                printf(\"你要查找的学生信息如下：\\n\");\n                printf(\"学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n\");\n                printf(\"%-16d%-8s%-8c%-8.2f\\n\",temp->num,temp->name,temp->sex,temp->score);\n                break;\n            }\n            temp=temp->next;\n        }\n        if(temp==NULL)\n        {\n            printf(\"查无此人\");\n        }\n\n        getchar();\n        printf(\"还有继续么(y/n)：\");\n        char c = getchar();\n        if (c == 'y' || c == 'Y')\n        {\n            //如果输入为y则执行空语句\n            ;\n        }\n        else if (c == 'n' || c == 'N')\n        {\n            break;\n        }\n        else\n        {\n            printf(\"输入错误，即将退出删除系统!\\n\");\n            break;\n\n        }\n    }\n}\n```\n## 功能选择与程序入口\n```\n//选择功能\nint select()\n{\n    while (1)\n    {\n        int i;\n        menu();\n        printf(\"请输入要选择的功能：\");\n        scanf(\"%d\",&i);\n        switch (i)\n        {\n            case 1: add();break;\n            case 2: delete();break;\n            case 3: alter();break;\n            case 4: find();break;\n            case 5: print();break;\n            case 6: release();break;\n            case 0: return 0;\n            default: printf(\"输入错误，请重新输入\");break;\n        }\n    }\n}\nint main()\n{\n    select();\n}\n```","slug":"2022-11-1_链表实现学生成绩管理系统","published":1,"updated":"2022-11-02T03:56:46.293Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8s000iu19kcs1l1606","content":"<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>具体源代码存放在gitee仓库地址如下  </p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_2\" value=\"https://gitee.com/thebyte/work.git\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_2&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>目录就不用多说，用以前的打印就好了  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">    printf(&quot;1、学生成绩录入\\n&quot;);</span><br><span class=\"line\">    printf(&quot;2、学生成绩删除\\n&quot;);</span><br><span class=\"line\">    printf(&quot;3、学生成绩修改\\n&quot;);</span><br><span class=\"line\">    printf(&quot;4、学生成绩查询\\n&quot;);</span><br><span class=\"line\">    printf(&quot;5、学生成绩打印\\n&quot;);</span><br><span class=\"line\">    printf(&quot;6、释 放 空 间\\n&quot;);</span><br><span class=\"line\">    printf(&quot;0、退       出\\n&quot;);</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"链表录入\"><a href=\"#链表录入\" class=\"headerlink\" title=\"链表录入\"></a>链表录入</h2><p>先要定义结构体  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef struct student</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //信息域</span><br><span class=\"line\">    int num;</span><br><span class=\"line\">    char name[10];</span><br><span class=\"line\">    char sex;</span><br><span class=\"line\">    float score;</span><br><span class=\"line\">    //指针域</span><br><span class=\"line\">    struct student *next;</span><br><span class=\"line\">&#125;stu;</span><br></pre></td></tr></table></figure>\n<p>然后需要定义头指针  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stu *head=NULL;</span><br></pre></td></tr></table></figure>\n<p>然后开始判断链表是否为空  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void add()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //定义选择变量</span><br><span class=\"line\">    int choose;</span><br><span class=\"line\">    //定义尾指针</span><br><span class=\"line\">    stu *last=NULL;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //当链表为空时，head当next成员指向last，last为新节点，用来存放数据，last当next成员指向空</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //给第一个节点分配空间，当链表只有一个节点时，这个节点就是这个链表当last</span><br><span class=\"line\">            last=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            last-&gt;next=NULL;</span><br><span class=\"line\">            head=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            head-&gt;next=last;</span><br><span class=\"line\">            //录入信息到信息域</span><br><span class=\"line\">            printf(&quot;请输入学号：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;,&amp;last-&gt;num);</span><br><span class=\"line\">            printf(&quot;请输入姓名：&quot;);</span><br><span class=\"line\">            scanf(&quot;%s&quot;,last-&gt;name);</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;请输入性别（男:M,女:F)：&quot;);</span><br><span class=\"line\">            scanf(&quot;%c&quot;,&amp;last-&gt;sex);</span><br><span class=\"line\">            printf(&quot;请输入成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%f&quot;,&amp;last-&gt;score);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //当链表不为空时，找到最后一个节点，last的next成员分配空间，然后最新的将last这个指针指向刚刚建立的空间为最新的last，然后最新的last的next成员指向null</span><br><span class=\"line\">        else if(head!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //查找链表的最后一个节点</span><br><span class=\"line\">            last=head-&gt;next;</span><br><span class=\"line\">            while(last-&gt;next!=NULL)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                last=last-&gt;next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //分配新节点空间</span><br><span class=\"line\">            last-&gt;next=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            //标注新的last</span><br><span class=\"line\">            last=last-&gt;next;</span><br><span class=\"line\">            last-&gt;next=NULL;</span><br><span class=\"line\">            //录入信息到信息域</span><br><span class=\"line\">            printf(&quot;请输入学号：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;,&amp;last-&gt;num);</span><br><span class=\"line\">            printf(&quot;请输入姓名：&quot;);</span><br><span class=\"line\">            scanf(&quot;%s&quot;,last-&gt;name);</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;请输入性别（男:M,女:F)：&quot;);</span><br><span class=\"line\">            scanf(&quot;%c&quot;,&amp;last-&gt;sex);</span><br><span class=\"line\">            printf(&quot;请输入成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%f&quot;,&amp;last-&gt;score);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中也需要定义last尾指针，这个指针在录入时代表的意思是存放最后一个节点的地址<br>其中malloc()内存分配函数需要强行改变类型切需要引用头文件  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdlib.h&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除成绩\"><a href=\"#删除成绩\" class=\"headerlink\" title=\"删除成绩\"></a>删除成绩</h2><p>删除后面的都依照数组实现的学生管理系统逻辑推理写出，就不过多解释，有不懂的可以在联系我</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void delete()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要删除成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head;</span><br><span class=\"line\">        while(temp-&gt;next!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;next-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                stu *del=temp-&gt;next;</span><br><span class=\"line\">                temp-&gt;next=temp-&gt;next-&gt;next;</span><br><span class=\"line\">                free(del);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改成绩\"><a href=\"#修改成绩\" class=\"headerlink\" title=\"修改成绩\"></a>修改成绩</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//修改成绩</span><br><span class=\"line\">void alter()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要修改成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head-&gt;next;</span><br><span class=\"line\">        while(temp!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;请输入要修改的成绩：&quot;);</span><br><span class=\"line\">                scanf(&quot;%f&quot;,&amp;temp-&gt;score);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"打印链表\"><a href=\"#打印链表\" class=\"headerlink\" title=\"打印链表\"></a>打印链表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//链表当输出</span><br><span class=\"line\">void print()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    stu *temp;</span><br><span class=\"line\">    temp=head-&gt;next;</span><br><span class=\"line\">    printf(&quot;学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n&quot;);</span><br><span class=\"line\">    while(temp!=NULL)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;%-16d%-8s%-8c%-8.2f\\n&quot;,temp-&gt;num,temp-&gt;name,temp-&gt;sex,temp-&gt;score);</span><br><span class=\"line\">        temp=temp-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"释放内存空间\"><a href=\"#释放内存空间\" class=\"headerlink\" title=\"释放内存空间\"></a>释放内存空间</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//释放空间</span><br><span class=\"line\">void release()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    stu *temp_2;</span><br><span class=\"line\">    while(head!=NULL)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        temp_2=head;</span><br><span class=\"line\">        head=head-&gt;next;</span><br><span class=\"line\">        free(temp_2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"成绩查询\"><a href=\"#成绩查询\" class=\"headerlink\" title=\"成绩查询\"></a>成绩查询</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查找成绩</span><br><span class=\"line\">void find()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要查找的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head-&gt;next;</span><br><span class=\"line\">        while(temp!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;你要查找的学生信息如下：\\n&quot;);</span><br><span class=\"line\">                printf(&quot;学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n&quot;);</span><br><span class=\"line\">                printf(&quot;%-16d%-8s%-8c%-8.2f\\n&quot;,temp-&gt;num,temp-&gt;name,temp-&gt;sex,temp-&gt;score);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"功能选择与程序入口\"><a href=\"#功能选择与程序入口\" class=\"headerlink\" title=\"功能选择与程序入口\"></a>功能选择与程序入口</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//选择功能</span><br><span class=\"line\">int select()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        printf(&quot;请输入要选择的功能：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            case 1: add();break;</span><br><span class=\"line\">            case 2: delete();break;</span><br><span class=\"line\">            case 3: alter();break;</span><br><span class=\"line\">            case 4: find();break;</span><br><span class=\"line\">            case 5: print();break;</span><br><span class=\"line\">            case 6: release();break;</span><br><span class=\"line\">            case 0: return 0;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    select();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>具体源代码存放在gitee仓库地址如下  </p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_2\" value=\"https://gitee.com/thebyte/work.git\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_2&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><p>目录就不用多说，用以前的打印就好了  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">    printf(&quot;1、学生成绩录入\\n&quot;);</span><br><span class=\"line\">    printf(&quot;2、学生成绩删除\\n&quot;);</span><br><span class=\"line\">    printf(&quot;3、学生成绩修改\\n&quot;);</span><br><span class=\"line\">    printf(&quot;4、学生成绩查询\\n&quot;);</span><br><span class=\"line\">    printf(&quot;5、学生成绩打印\\n&quot;);</span><br><span class=\"line\">    printf(&quot;6、释 放 空 间\\n&quot;);</span><br><span class=\"line\">    printf(&quot;0、退       出\\n&quot;);</span><br><span class=\"line\">    printf(&quot;===============\\n&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"链表录入\"><a href=\"#链表录入\" class=\"headerlink\" title=\"链表录入\"></a>链表录入</h2><p>先要定义结构体  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef struct student</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //信息域</span><br><span class=\"line\">    int num;</span><br><span class=\"line\">    char name[10];</span><br><span class=\"line\">    char sex;</span><br><span class=\"line\">    float score;</span><br><span class=\"line\">    //指针域</span><br><span class=\"line\">    struct student *next;</span><br><span class=\"line\">&#125;stu;</span><br></pre></td></tr></table></figure>\n<p>然后需要定义头指针  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stu *head=NULL;</span><br></pre></td></tr></table></figure>\n<p>然后开始判断链表是否为空  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void add()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //定义选择变量</span><br><span class=\"line\">    int choose;</span><br><span class=\"line\">    //定义尾指针</span><br><span class=\"line\">    stu *last=NULL;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        //当链表为空时，head当next成员指向last，last为新节点，用来存放数据，last当next成员指向空</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //给第一个节点分配空间，当链表只有一个节点时，这个节点就是这个链表当last</span><br><span class=\"line\">            last=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            last-&gt;next=NULL;</span><br><span class=\"line\">            head=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            head-&gt;next=last;</span><br><span class=\"line\">            //录入信息到信息域</span><br><span class=\"line\">            printf(&quot;请输入学号：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;,&amp;last-&gt;num);</span><br><span class=\"line\">            printf(&quot;请输入姓名：&quot;);</span><br><span class=\"line\">            scanf(&quot;%s&quot;,last-&gt;name);</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;请输入性别（男:M,女:F)：&quot;);</span><br><span class=\"line\">            scanf(&quot;%c&quot;,&amp;last-&gt;sex);</span><br><span class=\"line\">            printf(&quot;请输入成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%f&quot;,&amp;last-&gt;score);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //当链表不为空时，找到最后一个节点，last的next成员分配空间，然后最新的将last这个指针指向刚刚建立的空间为最新的last，然后最新的last的next成员指向null</span><br><span class=\"line\">        else if(head!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //查找链表的最后一个节点</span><br><span class=\"line\">            last=head-&gt;next;</span><br><span class=\"line\">            while(last-&gt;next!=NULL)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                last=last-&gt;next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //分配新节点空间</span><br><span class=\"line\">            last-&gt;next=(stu *)malloc(sizeof (stu));</span><br><span class=\"line\">            //标注新的last</span><br><span class=\"line\">            last=last-&gt;next;</span><br><span class=\"line\">            last-&gt;next=NULL;</span><br><span class=\"line\">            //录入信息到信息域</span><br><span class=\"line\">            printf(&quot;请输入学号：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;,&amp;last-&gt;num);</span><br><span class=\"line\">            printf(&quot;请输入姓名：&quot;);</span><br><span class=\"line\">            scanf(&quot;%s&quot;,last-&gt;name);</span><br><span class=\"line\">            getchar();</span><br><span class=\"line\">            printf(&quot;请输入性别（男:M,女:F)：&quot;);</span><br><span class=\"line\">            scanf(&quot;%c&quot;,&amp;last-&gt;sex);</span><br><span class=\"line\">            printf(&quot;请输入成绩：&quot;);</span><br><span class=\"line\">            scanf(&quot;%f&quot;,&amp;last-&gt;score);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中也需要定义last尾指针，这个指针在录入时代表的意思是存放最后一个节点的地址<br>其中malloc()内存分配函数需要强行改变类型切需要引用头文件  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdlib.h&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除成绩\"><a href=\"#删除成绩\" class=\"headerlink\" title=\"删除成绩\"></a>删除成绩</h2><p>删除后面的都依照数组实现的学生管理系统逻辑推理写出，就不过多解释，有不懂的可以在联系我</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void delete()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要删除成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head;</span><br><span class=\"line\">        while(temp-&gt;next!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;next-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                stu *del=temp-&gt;next;</span><br><span class=\"line\">                temp-&gt;next=temp-&gt;next-&gt;next;</span><br><span class=\"line\">                free(del);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改成绩\"><a href=\"#修改成绩\" class=\"headerlink\" title=\"修改成绩\"></a>修改成绩</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//修改成绩</span><br><span class=\"line\">void alter()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要修改成绩的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head-&gt;next;</span><br><span class=\"line\">        while(temp!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;请输入要修改的成绩：&quot;);</span><br><span class=\"line\">                scanf(&quot;%f&quot;,&amp;temp-&gt;score);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"打印链表\"><a href=\"#打印链表\" class=\"headerlink\" title=\"打印链表\"></a>打印链表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//链表当输出</span><br><span class=\"line\">void print()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    stu *temp;</span><br><span class=\"line\">    temp=head-&gt;next;</span><br><span class=\"line\">    printf(&quot;学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n&quot;);</span><br><span class=\"line\">    while(temp!=NULL)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;%-16d%-8s%-8c%-8.2f\\n&quot;,temp-&gt;num,temp-&gt;name,temp-&gt;sex,temp-&gt;score);</span><br><span class=\"line\">        temp=temp-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"释放内存空间\"><a href=\"#释放内存空间\" class=\"headerlink\" title=\"释放内存空间\"></a>释放内存空间</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//释放空间</span><br><span class=\"line\">void release()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    stu *temp_2;</span><br><span class=\"line\">    while(head!=NULL)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        temp_2=head;</span><br><span class=\"line\">        head=head-&gt;next;</span><br><span class=\"line\">        free(temp_2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"成绩查询\"><a href=\"#成绩查询\" class=\"headerlink\" title=\"成绩查询\"></a>成绩查询</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查找成绩</span><br><span class=\"line\">void find()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int num;</span><br><span class=\"line\">        if(head==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;学生成绩表无信息\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;请输入要查找的学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;num);</span><br><span class=\"line\">        stu *temp;</span><br><span class=\"line\">        temp=head-&gt;next;</span><br><span class=\"line\">        while(temp!=NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if(num==temp-&gt;num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;你要查找的学生信息如下：\\n&quot;);</span><br><span class=\"line\">                printf(&quot;学号\\t\\t\\t\\t姓名\\t\\t性别\\t\\t成绩\\n&quot;);</span><br><span class=\"line\">                printf(&quot;%-16d%-8s%-8c%-8.2f\\n&quot;,temp-&gt;num,temp-&gt;name,temp-&gt;sex,temp-&gt;score);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=temp-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(temp==NULL)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;查无此人&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还有继续么(y/n)：&quot;);</span><br><span class=\"line\">        char c = getchar();</span><br><span class=\"line\">        if (c == &#x27;y&#x27; || c == &#x27;Y&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            //如果输入为y则执行空语句</span><br><span class=\"line\">            ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (c == &#x27;n&#x27; || c == &#x27;N&#x27;)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;输入错误，即将退出删除系统!\\n&quot;);</span><br><span class=\"line\">            break;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"功能选择与程序入口\"><a href=\"#功能选择与程序入口\" class=\"headerlink\" title=\"功能选择与程序入口\"></a>功能选择与程序入口</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//选择功能</span><br><span class=\"line\">int select()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        printf(&quot;请输入要选择的功能：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">        switch (i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            case 1: add();break;</span><br><span class=\"line\">            case 2: delete();break;</span><br><span class=\"line\">            case 3: alter();break;</span><br><span class=\"line\">            case 4: find();break;</span><br><span class=\"line\">            case 5: print();break;</span><br><span class=\"line\">            case 6: release();break;</span><br><span class=\"line\">            case 0: return 0;</span><br><span class=\"line\">            default: printf(&quot;输入错误，请重新输入&quot;);break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    select();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"二叉树学习笔记","date":"2022-11-03T13:33:23.000Z","_content":"## 概述\n树 是一种经常用到的数据结构，用来模拟具有树状结构性质的数据集合。\n二叉树是一种更为典型的树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。\n\n\n## 二叉树的遍历方式\n遍历方式分为三种，分别是前序、中序、后序。\n前中后指的是根节点遍历的顺序，例如：\n前序：根->左->右\n中序：左->根->右\n后续：左->右->根\n\n例如：\n![](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/twotree/Slide01.png)\n三种遍历顺序如下：\n前序遍历的顺序是：F,B,A,D,C,E,G,I,H\n中序遍历的顺序是：A,B,C,D,E,F,G,H,I\n后序遍历的顺序是：A,C,E,D,B,H,I,G,F\n\n","source":"_posts/2022-11-3_二叉树学习笔记.md","raw":"---\ntitle: 二叉树学习笔记\ndate: 2022/11/3 21:33:23\ntags: [C]\ncategories: [设计开发, C语言]\n---\n## 概述\n树 是一种经常用到的数据结构，用来模拟具有树状结构性质的数据集合。\n二叉树是一种更为典型的树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。\n\n\n## 二叉树的遍历方式\n遍历方式分为三种，分别是前序、中序、后序。\n前中后指的是根节点遍历的顺序，例如：\n前序：根->左->右\n中序：左->根->右\n后续：左->右->根\n\n例如：\n![](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/twotree/Slide01.png)\n三种遍历顺序如下：\n前序遍历的顺序是：F,B,A,D,C,E,G,I,H\n中序遍历的顺序是：A,B,C,D,E,F,G,H,I\n后序遍历的顺序是：A,C,E,D,B,H,I,G,F\n\n","slug":"2022-11-3_二叉树学习笔记","published":1,"updated":"2022-11-05T15:47:35.745Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8t000mu19k6hj561ys","content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>树 是一种经常用到的数据结构，用来模拟具有树状结构性质的数据集合。<br>二叉树是一种更为典型的树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。</p>\n<h2 id=\"二叉树的遍历方式\"><a href=\"#二叉树的遍历方式\" class=\"headerlink\" title=\"二叉树的遍历方式\"></a>二叉树的遍历方式</h2><p>遍历方式分为三种，分别是前序、中序、后序。<br>前中后指的是根节点遍历的顺序，例如：<br>前序：根-&gt;左-&gt;右<br>中序：左-&gt;根-&gt;右<br>后续：左-&gt;右-&gt;根</p>\n<p>例如：<br><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/twotree/Slide01.png\"><br>三种遍历顺序如下：<br>前序遍历的顺序是：F,B,A,D,C,E,G,I,H<br>中序遍历的顺序是：A,B,C,D,E,F,G,H,I<br>后序遍历的顺序是：A,C,E,D,B,H,I,G,F</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>树 是一种经常用到的数据结构，用来模拟具有树状结构性质的数据集合。<br>二叉树是一种更为典型的树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。</p>\n<h2 id=\"二叉树的遍历方式\"><a href=\"#二叉树的遍历方式\" class=\"headerlink\" title=\"二叉树的遍历方式\"></a>二叉树的遍历方式</h2><p>遍历方式分为三种，分别是前序、中序、后序。<br>前中后指的是根节点遍历的顺序，例如：<br>前序：根-&gt;左-&gt;右<br>中序：左-&gt;根-&gt;右<br>后续：左-&gt;右-&gt;根</p>\n<p>例如：<br><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/twotree/Slide01.png\"><br>三种遍历顺序如下：<br>前序遍历的顺序是：F,B,A,D,C,E,G,I,H<br>中序遍历的顺序是：A,B,C,D,E,F,G,H,I<br>后序遍历的顺序是：A,C,E,D,B,H,I,G,F</p>\n"},{"title":"Python语法","date":"2022-11-05T02:33:00.000Z","_content":"## 引言\n因为我所使用的项目需要使用到Python这门语言，而去玩之前也学过一些，所以就快速过了一道\n在实际中，你只需要了解如何使用，不懂的可以在网上查\n## 注释\n单行 #\n多行 ‘’‘\n\n## 基本信息\n要注意代码的缩进\n语句行长，用\\来划分成多行\n\n## 类型\nint\nbool\nfloat complex复数\n\n## 类型转换\n\nint(),float(),str()强制转换为整型，浮点型，字符串型\n\n## 运算符\n/除法得到float\n//除法得到int\n**乘方\n%取余\n\n字符串\n变量[头下标:尾下标]\n字符串用‘和“括\n\n## 列表\n创建：name=[v1, v2,v3,...]\n\n引用：name[下标]\n\n列表元素可以修改\n\n## 元组\n创建：元组用()小括号扩起来\n\n引用：[下标]\n\n元素不能修改\n\n## 集合 创建\nname = {value01,value02,...}\n或者\nset(value)\n\nname.add(x)添加元素\n## 字典\n```\nname = {key1 : value1, key2 : value2, key3 : value3 }\n```\n引用：name['key']\n\n每对用冒号:分割\n\n## 结构语句\n条件控制 \n```\nif 条件表达式:\n    表达式\nelif 条件表达式:\n    表达式\nelse:\n    表达式\n```\nif，elif，else都要加:冒号\n```\nwhile 判断条件：\n    执行语句\n```\n```\nfor 变量 in 区间\n    表达式\n```\nrange()函数用来遍历数字序列\n\nbreak 退出整个循环\ncontinue 退出当前循环\npass 空语句\n\n## 函数定义\n```\ndef 函数名（参数列表）:\n    函数体\n```\n\n## 输入输出\ninput(\"提示\");\nprint(“打印内容”)\n\n","source":"_posts/2022-11-5_python.md","raw":"---\ntitle: Python语法\ndate: 2022/11/5 10:33\ntags: [Python]\n---\n## 引言\n因为我所使用的项目需要使用到Python这门语言，而去玩之前也学过一些，所以就快速过了一道\n在实际中，你只需要了解如何使用，不懂的可以在网上查\n## 注释\n单行 #\n多行 ‘’‘\n\n## 基本信息\n要注意代码的缩进\n语句行长，用\\来划分成多行\n\n## 类型\nint\nbool\nfloat complex复数\n\n## 类型转换\n\nint(),float(),str()强制转换为整型，浮点型，字符串型\n\n## 运算符\n/除法得到float\n//除法得到int\n**乘方\n%取余\n\n字符串\n变量[头下标:尾下标]\n字符串用‘和“括\n\n## 列表\n创建：name=[v1, v2,v3,...]\n\n引用：name[下标]\n\n列表元素可以修改\n\n## 元组\n创建：元组用()小括号扩起来\n\n引用：[下标]\n\n元素不能修改\n\n## 集合 创建\nname = {value01,value02,...}\n或者\nset(value)\n\nname.add(x)添加元素\n## 字典\n```\nname = {key1 : value1, key2 : value2, key3 : value3 }\n```\n引用：name['key']\n\n每对用冒号:分割\n\n## 结构语句\n条件控制 \n```\nif 条件表达式:\n    表达式\nelif 条件表达式:\n    表达式\nelse:\n    表达式\n```\nif，elif，else都要加:冒号\n```\nwhile 判断条件：\n    执行语句\n```\n```\nfor 变量 in 区间\n    表达式\n```\nrange()函数用来遍历数字序列\n\nbreak 退出整个循环\ncontinue 退出当前循环\npass 空语句\n\n## 函数定义\n```\ndef 函数名（参数列表）:\n    函数体\n```\n\n## 输入输出\ninput(\"提示\");\nprint(“打印内容”)\n\n","slug":"2022-11-5_python","published":1,"updated":"2022-11-06T02:12:56.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8u000nu19kemzo0xfy","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>因为我所使用的项目需要使用到Python这门语言，而去玩之前也学过一些，所以就快速过了一道<br>在实际中，你只需要了解如何使用，不懂的可以在网上查</p>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>单行 #<br>多行 ‘’‘</p>\n<h2 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h2><p>要注意代码的缩进<br>语句行长，用\\来划分成多行</p>\n<h2 id=\"类型\"><a href=\"#类型\" class=\"headerlink\" title=\"类型\"></a>类型</h2><p>int<br>bool<br>float complex复数</p>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p>int(),float(),str()强制转换为整型，浮点型，字符串型</p>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><p>/除法得到float<br>//除法得到int<br>**乘方<br>%取余</p>\n<p>字符串<br>变量[头下标:尾下标]<br>字符串用‘和“括</p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><p>创建：name=[v1, v2,v3,…]</p>\n<p>引用：name[下标]</p>\n<p>列表元素可以修改</p>\n<h2 id=\"元组\"><a href=\"#元组\" class=\"headerlink\" title=\"元组\"></a>元组</h2><p>创建：元组用()小括号扩起来</p>\n<p>引用：[下标]</p>\n<p>元素不能修改</p>\n<h2 id=\"集合-创建\"><a href=\"#集合-创建\" class=\"headerlink\" title=\"集合 创建\"></a>集合 创建</h2><p>name = {value01,value02,…}<br>或者<br>set(value)</p>\n<p>name.add(x)添加元素</p>\n<h2 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = &#123;key1 : value1, key2 : value2, key3 : value3 &#125;</span><br></pre></td></tr></table></figure>\n<p>引用：name[‘key’]</p>\n<p>每对用冒号:分割</p>\n<h2 id=\"结构语句\"><a href=\"#结构语句\" class=\"headerlink\" title=\"结构语句\"></a>结构语句</h2><p>条件控制 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if 条件表达式:</span><br><span class=\"line\">    表达式</span><br><span class=\"line\">elif 条件表达式:</span><br><span class=\"line\">    表达式</span><br><span class=\"line\">else:</span><br><span class=\"line\">    表达式</span><br></pre></td></tr></table></figure>\n<p>if，elif，else都要加:冒号</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while 判断条件：</span><br><span class=\"line\">    执行语句</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for 变量 in 区间</span><br><span class=\"line\">    表达式</span><br></pre></td></tr></table></figure>\n<p>range()函数用来遍历数字序列</p>\n<p>break 退出整个循环<br>continue 退出当前循环<br>pass 空语句</p>\n<h2 id=\"函数定义\"><a href=\"#函数定义\" class=\"headerlink\" title=\"函数定义\"></a>函数定义</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def 函数名（参数列表）:</span><br><span class=\"line\">    函数体</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"输入输出\"><a href=\"#输入输出\" class=\"headerlink\" title=\"输入输出\"></a>输入输出</h2><p>input(“提示”);<br>print(“打印内容”)</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>因为我所使用的项目需要使用到Python这门语言，而去玩之前也学过一些，所以就快速过了一道<br>在实际中，你只需要了解如何使用，不懂的可以在网上查</p>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>单行 #<br>多行 ‘’‘</p>\n<h2 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h2><p>要注意代码的缩进<br>语句行长，用\\来划分成多行</p>\n<h2 id=\"类型\"><a href=\"#类型\" class=\"headerlink\" title=\"类型\"></a>类型</h2><p>int<br>bool<br>float complex复数</p>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p>int(),float(),str()强制转换为整型，浮点型，字符串型</p>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><p>/除法得到float<br>//除法得到int<br>**乘方<br>%取余</p>\n<p>字符串<br>变量[头下标:尾下标]<br>字符串用‘和“括</p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><p>创建：name=[v1, v2,v3,…]</p>\n<p>引用：name[下标]</p>\n<p>列表元素可以修改</p>\n<h2 id=\"元组\"><a href=\"#元组\" class=\"headerlink\" title=\"元组\"></a>元组</h2><p>创建：元组用()小括号扩起来</p>\n<p>引用：[下标]</p>\n<p>元素不能修改</p>\n<h2 id=\"集合-创建\"><a href=\"#集合-创建\" class=\"headerlink\" title=\"集合 创建\"></a>集合 创建</h2><p>name = {value01,value02,…}<br>或者<br>set(value)</p>\n<p>name.add(x)添加元素</p>\n<h2 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = &#123;key1 : value1, key2 : value2, key3 : value3 &#125;</span><br></pre></td></tr></table></figure>\n<p>引用：name[‘key’]</p>\n<p>每对用冒号:分割</p>\n<h2 id=\"结构语句\"><a href=\"#结构语句\" class=\"headerlink\" title=\"结构语句\"></a>结构语句</h2><p>条件控制 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if 条件表达式:</span><br><span class=\"line\">    表达式</span><br><span class=\"line\">elif 条件表达式:</span><br><span class=\"line\">    表达式</span><br><span class=\"line\">else:</span><br><span class=\"line\">    表达式</span><br></pre></td></tr></table></figure>\n<p>if，elif，else都要加:冒号</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while 判断条件：</span><br><span class=\"line\">    执行语句</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for 变量 in 区间</span><br><span class=\"line\">    表达式</span><br></pre></td></tr></table></figure>\n<p>range()函数用来遍历数字序列</p>\n<p>break 退出整个循环<br>continue 退出当前循环<br>pass 空语句</p>\n<h2 id=\"函数定义\"><a href=\"#函数定义\" class=\"headerlink\" title=\"函数定义\"></a>函数定义</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def 函数名（参数列表）:</span><br><span class=\"line\">    函数体</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"输入输出\"><a href=\"#输入输出\" class=\"headerlink\" title=\"输入输出\"></a>输入输出</h2><p>input(“提示”);<br>print(“打印内容”)</p>\n"},{"title":"灵感01-公告栏","date":"2022-12-09T13:36:00.000Z","_content":"## 公告栏\n---雏形---\n## 环境\n大学由于使用qq且消息与通知并存，随着大学社交增加，导致许多人无法准时接受到通知，尤其是专心升学的同学。\n\n## 具体内容\n一款多平台应用，具有管理员和只读用户等多种权限，管理员用于发布公告（通知），且公告划分等级，例如：填写档案，为重要通知，学校活动，放为普通通知  \n学生端只给予只读权限，教端授予管理权限\n功能：\n    1、通知消息、重要公告、活动通知\n    2、识别是否已读，如果未读，在结束前，自动电话通知\n    3、自动划分任务等级\n    ...\n\n扩展功能：\n    1、失物招领\n    2、学校通报批评\n    3、电子奖状\n    4、校园群\n    5、人员管理","source":"_posts/2022-12-9-lg1.md","raw":"---\ntitle: 灵感01-公告栏\ndate: 2022/12/9 21:36:00\ntag: [灵感]\n---\n## 公告栏\n---雏形---\n## 环境\n大学由于使用qq且消息与通知并存，随着大学社交增加，导致许多人无法准时接受到通知，尤其是专心升学的同学。\n\n## 具体内容\n一款多平台应用，具有管理员和只读用户等多种权限，管理员用于发布公告（通知），且公告划分等级，例如：填写档案，为重要通知，学校活动，放为普通通知  \n学生端只给予只读权限，教端授予管理权限\n功能：\n    1、通知消息、重要公告、活动通知\n    2、识别是否已读，如果未读，在结束前，自动电话通知\n    3、自动划分任务等级\n    ...\n\n扩展功能：\n    1、失物招领\n    2、学校通报批评\n    3、电子奖状\n    4、校园群\n    5、人员管理","slug":"2022-12-9-lg1","published":1,"updated":"2022-12-09T13:50:30.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8v000ru19k6v3j5hs8","content":"<h2 id=\"公告栏\"><a href=\"#公告栏\" class=\"headerlink\" title=\"公告栏\"></a>公告栏</h2><p>—雏形—</p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>大学由于使用qq且消息与通知并存，随着大学社交增加，导致许多人无法准时接受到通知，尤其是专心升学的同学。</p>\n<h2 id=\"具体内容\"><a href=\"#具体内容\" class=\"headerlink\" title=\"具体内容\"></a>具体内容</h2><p>一款多平台应用，具有管理员和只读用户等多种权限，管理员用于发布公告（通知），且公告划分等级，例如：填写档案，为重要通知，学校活动，放为普通通知<br>学生端只给予只读权限，教端授予管理权限<br>功能：<br>    1、通知消息、重要公告、活动通知<br>    2、识别是否已读，如果未读，在结束前，自动电话通知<br>    3、自动划分任务等级<br>    …</p>\n<p>扩展功能：<br>    1、失物招领<br>    2、学校通报批评<br>    3、电子奖状<br>    4、校园群<br>    5、人员管理</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"公告栏\"><a href=\"#公告栏\" class=\"headerlink\" title=\"公告栏\"></a>公告栏</h2><p>—雏形—</p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>大学由于使用qq且消息与通知并存，随着大学社交增加，导致许多人无法准时接受到通知，尤其是专心升学的同学。</p>\n<h2 id=\"具体内容\"><a href=\"#具体内容\" class=\"headerlink\" title=\"具体内容\"></a>具体内容</h2><p>一款多平台应用，具有管理员和只读用户等多种权限，管理员用于发布公告（通知），且公告划分等级，例如：填写档案，为重要通知，学校活动，放为普通通知<br>学生端只给予只读权限，教端授予管理权限<br>功能：<br>    1、通知消息、重要公告、活动通知<br>    2、识别是否已读，如果未读，在结束前，自动电话通知<br>    3、自动划分任务等级<br>    …</p>\n<p>扩展功能：<br>    1、失物招领<br>    2、学校通报批评<br>    3、电子奖状<br>    4、校园群<br>    5、人员管理</p>\n"},{"title":"白鲸记摘录","date":"2022-12-09T23:30:32.000Z","_content":"任何事情只要做得冷静，便是做得文雅得体\n如果有谁能为大家带来笑料，让大家开怀一笑，那就请他千万不要退缩，不妨高高兴兴地装疯卖傻，让大家笑个够。一个人身上如果有足以让大家捧腹大笑的地方，那就可以肯定，他必定拥有比你想象的多的多的价值\n\n","source":"_posts/bjj.md","raw":"---\ntitle: 白鲸记摘录\ndate: 2022/12/10 07:30:32\ntags: [摘录]\n---\n任何事情只要做得冷静，便是做得文雅得体\n如果有谁能为大家带来笑料，让大家开怀一笑，那就请他千万不要退缩，不妨高高兴兴地装疯卖傻，让大家笑个够。一个人身上如果有足以让大家捧腹大笑的地方，那就可以肯定，他必定拥有比你想象的多的多的价值\n\n","slug":"bjj","published":1,"updated":"2022-12-10T02:35:02.488Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8w000tu19k3ukfgcju","content":"<p>任何事情只要做得冷静，便是做得文雅得体<br>如果有谁能为大家带来笑料，让大家开怀一笑，那就请他千万不要退缩，不妨高高兴兴地装疯卖傻，让大家笑个够。一个人身上如果有足以让大家捧腹大笑的地方，那就可以肯定，他必定拥有比你想象的多的多的价值</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<p>任何事情只要做得冷静，便是做得文雅得体<br>如果有谁能为大家带来笑料，让大家开怀一笑，那就请他千万不要退缩，不妨高高兴兴地装疯卖傻，让大家笑个够。一个人身上如果有足以让大家捧腹大笑的地方，那就可以肯定，他必定拥有比你想象的多的多的价值</p>\n"},{"title":"灵感02","date":"2022-12-09T13:36:00.000Z","_content":"## 第二个自己\n用程序实现一个类似自己的程序，来记录心中所想的一个人的行为，达到了解的管家的效果\n\n## 功能\n输入：\n    1、视觉\n    2、听觉\n    3、嗅觉\n    4、触觉\n输出：\n    1、画面（动作）\n    2、声音（说话）\n    3、震动（反馈触觉）\n    \n具有空间感，我认为人并没有空间感，而是通过视觉、听觉、嗅觉、触觉所混合运算所产生，激光雷达，相当于机器的视觉，而并没产生空间感\n....\n\n","source":"_posts/2022-12-9-lg2.md","raw":"---\ntitle: 灵感02\ndate: 2022/12/9 21:36:00\ntag: [灵感]\n---\n## 第二个自己\n用程序实现一个类似自己的程序，来记录心中所想的一个人的行为，达到了解的管家的效果\n\n## 功能\n输入：\n    1、视觉\n    2、听觉\n    3、嗅觉\n    4、触觉\n输出：\n    1、画面（动作）\n    2、声音（说话）\n    3、震动（反馈触觉）\n    \n具有空间感，我认为人并没有空间感，而是通过视觉、听觉、嗅觉、触觉所混合运算所产生，激光雷达，相当于机器的视觉，而并没产生空间感\n....\n\n","slug":"2022-12-9-lg2","published":1,"updated":"2022-12-09T13:57:30.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8x000wu19k401x8hre","content":"<h2 id=\"第二个自己\"><a href=\"#第二个自己\" class=\"headerlink\" title=\"第二个自己\"></a>第二个自己</h2><p>用程序实现一个类似自己的程序，来记录心中所想的一个人的行为，达到了解的管家的效果</p>\n<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><p>输入：<br>    1、视觉<br>    2、听觉<br>    3、嗅觉<br>    4、触觉<br>输出：<br>    1、画面（动作）<br>    2、声音（说话）<br>    3、震动（反馈触觉）</p>\n<p>具有空间感，我认为人并没有空间感，而是通过视觉、听觉、嗅觉、触觉所混合运算所产生，激光雷达，相当于机器的视觉，而并没产生空间感<br>….</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"第二个自己\"><a href=\"#第二个自己\" class=\"headerlink\" title=\"第二个自己\"></a>第二个自己</h2><p>用程序实现一个类似自己的程序，来记录心中所想的一个人的行为，达到了解的管家的效果</p>\n<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><p>输入：<br>    1、视觉<br>    2、听觉<br>    3、嗅觉<br>    4、触觉<br>输出：<br>    1、画面（动作）<br>    2、声音（说话）<br>    3、震动（反馈触觉）</p>\n<p>具有空间感，我认为人并没有空间感，而是通过视觉、听觉、嗅觉、触觉所混合运算所产生，激光雷达，相当于机器的视觉，而并没产生空间感<br>….</p>\n"},{"title":"爱因斯坦名言摘录","date":"2022-12-10T02:08:22.000Z","_content":"\n1.教育就是当一个人把在学校所学全部忘光之后剩下的东西。 Education is what remains after one has forgotten everything one has learned in school.  \n2.不要努力成为一个成功者，要努力成为一个有价值的人。  \n3.如果一个想法在一开始不是荒谬的，那它就是没有希望的。  \n4.生活就像骑自行车，要想保持平衡就要不断运动. 《爱因斯坦：生活和宇宙》\n5.每个人都身怀天赋，但如果用会不会爬树的能力来评判一只鱼，它会终其一生以为自己愚蠢。\n6.一个从未犯错的人是因为他不曾尝试新鲜事物。\n7.我喜欢旅行，但不喜欢到达目的地。\n8.把你的手放在滚热的炉子上一分钟，感觉起来像一小时。坐在一个漂亮姑娘身边整整一小时，感觉起来像一分钟。这就是相对论。\n9.我从不去想未来。因为它来得已经够快的了。\n10.Only two things are infinite, the universe and human stupidity, and I'm not sure about the universe. 有两种东西是无限的，宇宙和人类的愚蠢。 《翻译来自一张海报》\n11.态度上的弱点会变成性格上的弱点。\n12.成功＝艰苦劳动＋正确的方法＋少说空话。\n13.世间最美好的东西，莫过于有几个头脑和心地都很正直的朋友。\n14.人的成就和差异决定于其业余时间。\n15.我不知道第三次世界大战会用哪些武器，但第四次世界大战中人们肯定用的是木棍和石块。\n16.一个人最高的本领就是适应客观世界的能力。\n17.天才和愚蠢之间的区别就是天才是有极限的。\n18.要打破人的偏见比崩解一个原子还难。\n19.这世界不会被那些作恶多端的人毁灭，而是冷眼旁观、选择保持缄默的人。\n20.并不是我很聪明，而只是我和问题相处得比较久一点。\n21.不要抱怨生活，那只能说明你的无能。强者从来不抱怨生活。\n22.为了惩罚我对权威的蔑视，命运把我自己变成了一个权威. 《爱因斯坦：生活和宇宙》\n23.没有侥幸这回事，最偶然的意外，似乎也都是事有必然的。 《教育论》\n24.常识就是人到十八岁为止所累积的各种偏见。\n25.想像力比知识更重要。因为知识是有限的，而想像力是无限,它包含了一切,推动着进步,是人类进化的源泉。\n26.道德毫无神圣之处，它纯粹只是人之常情。\n27.逻辑会把你从A带到B，想象力能带你去任何地方。\n28.如果你不能简单说清楚，就是你没完全明白。\n原文：If you can't explain it simply, you don't understand it well enough.\n29.万有引力可无法对坠入爱河的人负责。\n30.用一个大圆圈代表我学到的知识，但是圆圈之外是那么多的空白，对我来说就意味着无知。而且圆圈越大，它的圆周就越长，它与外界空白的接触面也就越大。由此可见，我感到不懂的地方还大得很呢！ 《获奖致辞》\n31.精神错乱：一遍又一遍地重复作同一件事，而期待会有不同的结果。\n32.生命会给你所要的东西，只要你不断地向它要，只要你在要的时候讲得清楚。\n33.在天才和勤奋之间，我毫不犹豫地选择后者。她几乎是世界上一切成就的催产婆。\n34.人的差异产生于业余时间。业余时间能成就一个人，也能毁灭一个人。\n35.\"If at first the idea is not absurd, then there will be no hope for it.\"- Albert Einstein。 如果一个想法一开始不荒谬，那么它就毫无希望。\n36.一个人的价值,应当看他贡献什么,而不应当看他取得什么.\n37.每个人都有一定的理想，这种理想决定着他的努力和判断的方向。就在这个意义上，我从来不把安逸和快乐看作生活目的的本身－－ 这种伦理基础，我叫它猪栏的理想。\n38.一个人的真正价值首先决定于他在什么程度上和在什么意义上从自我解放出来。\n39.人们都把我的成功归功于天才，其实我的天才只是刻苦而已。\n40.真正有价值的是直觉。在探索的道路上智力无甚用处。\n41.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高尚的品质，超脱时代和社会，走自己正确的道路。现在，大家都为了电冰箱、汽车、房子而奔波、追逐、竞争。这就是我们这个时代的特征了。但是也还有不少人，他们不追求这些物质的东西，他们追求理想和真理，得到了内心的自由和安宁。\n42.独立思考和独立判断的一般能力，应当始终放在首位。\n43.苦和甜来自外界，坚强则来自内心，来自一个人的自我努力。\n44.提出一个问题往往比解决一个问题更重要\n45.人生就像骑单车。想保持平衡就得往前走。\n46.创新的秘密在于知道如何把你的智谋藏而不露。\n47.The reason for time is so that everything doesn't happen at once. 时间存在的意义就是任何事都不可能立刻实现\n48.有一个现象的明显程度已经让我毛骨悚然，这便是我们的人性已经远远落后我们的科学技术了。\n49.一个快乐的人总是满足于当下，而不太浪费时间去想未来的事。\n50.耐心和恒心总会得到报酬的。\n51.如果我的相对论被证明是正确的，德国人就会说我是德国人，法国佬会说我是一个世界公民。如果我的相对论被否定了，法国佬就会骂我德国鬼子，而德国人就会把我归为犹太人。\n52.如果A代表一个人的成功，那么A等于x加y加z。勤奋工作是x；y是玩耍，而z是把嘴闭上。\n53.莫扎特从不为永恒作曲，但是正因为这个理由，所以他的许多作品均是永恒的。\n54.爱因斯坦曾说过，“每个人都身怀天赋”，如此说来，若单用爬树的能力来评判一只鱼，那便是愚蠢\n55.对一切来说，只有热爱才是最好的老师，它远远胜过责任感。 To All, only love is the best teacher, it is far better than the responsibility.\n56.一切都应该尽可能地简单，但不要太简单。\n57.Reality is merely an illusion,albeit a very persistent one. 现实只是一抹幻影，尽管它从不消散。《犯罪心理》\n58.无论什么时候，就当自己生活在火星吧，周围全是陌生的怪物，对怪物的行为无需产生浓厚的兴趣。\n59.有时候一个人为不花钱得到的东西付出的代价最高。《教育论》\n60.凡在小事上对真理持轻率态度的人，在大事上也是不可信任的。\n61.“我从来不记忆和思考那些词典、手册里的东西，我的脑袋只用来记忆和思考那些还没有载入书本的东西。” 《口述》\n62.只要你有一件合理的事去做，你的生活就会显得特别美好。\n63.世界上最让我难以理解的就是所得税。\n64.Try not to become a man of success but rather try to become a man of value. —— A. Einstein 不要为成功而努力，要为做一个有价值的人而努力。\n65.我们一来到世间，社会就在我们面前树起了一个巨大的问号：你怎样度过自己的一生。\n66.所谓现实只不过是一个错觉，虽然这个错觉非常持久。\n67.我们不能用制造问题时的同一水平思维来解决问题。\n68.“学校的目标应当是培养有独立行动和独立思考的个人，不过他们要把为社会服务看作是自己人生的最高目标。”\n69.不要担心你在数学上遇到的困难；我敢保证我遇到的困难比你还大得多。\n70.学习知识要善于思考，思考，再思考。我就是靠这个方法成为科学家的。\n71.最好把一个人的爱好和职业尽可能远的分开。把一个的生计所在和上帝所赐的秉赋硬凑在一起，那是不明智的。\n72.真理就是在经验面前站得住脚的东西。\n73.使学生对教师尊敬的惟一源泉在于教师的德和才。\n74.宇宙中唯有两件事物是无限的：那就是宇宙的大小与人的愚蠢。而宇宙的大小我却不能肯定。\n75.科学没有宗教是瘸子，宗教没有科学是瞎子。\n76.不要试图去做一个成功的人，要努力成为一个有价值的人。\n77.宇宙中最不能理解的事情是，宇宙是可以被理解的。\n78.把人们引向艺术和科学的最强烈的动机之一，是要逃避日常生活中令人厌恶的粗俗和使人绝望的沉闷，是要摆脱人们自己反复无常的欲望的桎梏。一个修养有素的人总是渴望逃避个人生活而进入客观知觉和思维的世界。《普朗克文集科学往何处去？的序言》\n79.巧合是上帝保持匿名的方式。\n80.在一个崇高的目的的支持下，不停地工作。即使慢，也一定会获得成功。\n81.人只有献身于社会，才能找出那短暂而有风险的生命的意义。\n82.我从来不把安逸和享乐看作是生活的目的——这种理论，我把它叫做猪栏式的理想。\n83.上帝难以捉摸，但并不心怀恶意。\n84.我评定一个人的真正的价值只有一个标准，即：看他在多大程度上摆脱了“自我”，他摆脱了“自我”，又是为什么。\n85.婚姻的确是披着文明外衣的奴隶制。《爱因斯坦语录》\n86.当我们的知识之圆扩大之时，我们所面临的未知的圆周也一样。\n87.武力不能维持和平。只有互相理解才可以。\n88.哲学、艺术和科学，其目的都是为了让人类的生活趋向高深，使它从单纯的生理存在中升华，并把个人引向自由。\n89.我没有什么特殊的才能，不过是喜欢寻根刨底地追究问题罢了\n90.我从不想未来，它来得太快。\n91.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高贵的品质，超脱时代和社会，走自己正确的道路。\n92.提出一个问题往往比解决一个问题更重要，因为解决问题也许仅是一个数学上或实验上的技能而已。而提出新的问题新的可能性，从新的角度去看旧的问题，都需要有创造性的想象力，而且标志着科学的真正进步。\n93.世间最好的东西，莫过于有几个头脑和心地都很正直的严正的朋友。\n94.我每天提醒自己一百遍，我的生活，不管内在或是外在，都是以他人（包括活着的和逝去的）努力的成果为基础。所以我必须尽力奉献自己，希望能以同等的贡献，来回报长久以来从他人身上所获得的一切。\n95.任何物体以光速运动时，其长度将会缩短为零。\n96.人做事如果要成功，在之前必须脑海中有画面。\n97.任何天才不能在孤独的状态中发展。\n98.创新不是由逻辑思维带来的，尽管最后的产物有赖于一个符合逻辑的结构。\n99.人是为别人而生存的——首先是为那样一些人，他们的喜悦和健康关系着我们自己全部的幸福，然而是为许多我们所不认识的人，他们的命运通过同情的纽带同我们密切结合在一起。我每天上百次地提醒自己，我的精神生活和物质生活都依靠着别人（包括活着的和死去的）的劳动，我必须尽力以同样的分量来报偿我所领受了的和至今还在领受着的东西。我强烈地向往着俭朴的生活，并且常为发觉自己占有了同胞过多的劳动而难以忍受。\n100.我不信仰一个人格化的神。\n101.在真理和认识方面，任何以权威者自居的人，必将在上帝的戏笑中垮台！\n102.很少人是用自己的眼睛去看，和用自己的心去感觉的。\n103.我害怕有一天，科技会取代人与人之间的交流，我们的世界将会充斥着一群白痴\n104.量子力学的确让人印象深刻。但是我的内心却有一个声音告诉我，它还不是正确的理论。这个理论是说了很多，但它并没有引领我们更接近上帝的秘密。我，无论如何，深信上帝不掷骰子。\n105.在科学上，每一条道路都应该走一走，发现一条走不通的道路，就是对科学的一大贡献。那种证明“此路不通”的吃力不讨好的工作，就让我来做吧！\n106.我们的科学史，只写某人某人取得成功，在成功者之前探索道路的，发现“此路不通”的失败者统统不写，这是很不公平的。\n107.对于我来说，生命的意义在于设身处地替别人着想，忧他人之忧，乐他人之乐。\n108.真正使我感兴趣的是上帝创造世界的时候有没有别的方案可选\n109.在上帝面前，我们都一样聪明——也都一样愚蠢。\n110.旦我们接受了自己的限制， 我们就超越它们了！ Once we accept our limits, we go beyond them.\n111.任何一个有智力的笨蛋都可以把事情搞得更大，更复杂，也更激烈。往相反的方向前进则需要天份，以及很大的勇气。\n112.有两种看待人生的方式， 一种是生活不存在奇迹， 另一种则是， 所有的一切都是奇迹。\n113.有一种无穷无尽的能量源，迄今为止科学都没有对他找到一个合理的解释。这是一种生命力，包含并统领所有其它的一切。而且在任何宇宙的运行现象之后，甚至还没有被我们定义。这种生命力叫“爱”。\n114.人所具备的智力仅够使自己清楚地认识到，在大自然面前自己的智力是何等的欠缺。如果这种谦卑精神能为世人所共有，那么人类活动的世界就会更加具有吸引力。\n115.我想知道上帝的构思；其他的都只是细节。\n116.倘若A代表人生的成功，那么公式是：A=X+Y+Z。X是工作，Y是游戏，Z是保持缄默。\n117.我认为只有大胆的臆测，而不是事实的积累，才能引领我们往前迈进。\n118.我绝对相信，在这个世界上，财富绝不能使人类进步。\n119.只有利他的生活才是值得过的生活。\n120.幸福来自于有目标的生活，而不是来自他人或物质。\n121.我实在是一个“孤独的旅客”，我未曾全心全意地属于我的国家，我的家庭，我的朋友，甚至我最接近的亲人；在所有这些关系面前，我总是感觉到有一定距离并且需要保持孤独——而这种感受正与年俱增。人们会清楚地发觉，同别人的相互了解和协调一致是有限度的，但这不足惋惜。这样的人无疑有点失去他的天真无邪和无忧无虑的心境；但另一方面，他却能够在很大程度上不为别人的意见、习惯和判断所左右，并且能够不受诱惑要去把他的内心平衡建立在这样一些不可靠的基础之上。\n122.不进行调查就谴责，那是最高的无知。\n123.情感和愿望是人类一切努力和创造背后的动力，不管呈现在我们面前的这种努力和创造外表上是多么高超。\n124.人们所努力追求的庸俗的目标——财产、虚荣、奢侈的生活——我总觉得都是可鄙的。\n125.对一个人来说，所期望的不是别的，而仅仅是他能全力以赴和献身于一种美好事业。\n126.Everyone is a genius. But if you judge a fish by its ability to climb a tree, it will spend its whole life believing it is stupid. 每个人都是天才。但如果硬要以鱼儿爬树的本领，来评估它的能力，它这辈子都会觉得自己是条蠢鱼。\n127.有些理想曾为我们引过道路，并不断给我新的勇气以欣然面对人生，那些理想就是——真、善、美。\n128.小事小节斤斤计较而淡漠大事、大节的人是不会有什么作为的。我从来不把安逸和快乐看作是生活目的本身-----这种伦理基础，我叫它猪栏的理想。\n129.科学的全部不过就是日常思考的提炼。\n130.世界上，宇宙中，有多少难解的谜啊……还是抓紧时间工作吧！\n131.等你们六十岁的时候，你们就会珍惜由你们支配的每一个钟头了。\n132.所有的宗教、艺术和科学，都是生长在同一棵树上的枝叶。人类对这三方面的追求，都是为了使生命从单纯的物质世界里提升，而达到自由。\n133.若无某种大胆放肆的猜想，一般是不可能有知识的进展的。\n134.我生平喜欢步行，运动给我带来了无穷的乐趣。\n135.凡在小事上对真理持轻率态度的人，在大事上也是不足信的。\n136.科学研究能破除迷信，因为它鼓励人们根据因果关系来思考和观察事物。\n137.雄心壮志或单纯的责任感不会产生任何真正有价值的东西，只有对于人类和对于客观事物的热爱与献身精神，才能产生真正有价值的东西。\n138.Great spirits have often encountered violent opposition from weaker minds. 伟大的思想经常会受懦弱世俗的强烈反对\n139.法律本身并不能保证言论自由；要做到这一点，必需要所有的人都有着包容的心。\n140.是鸡过了马路还是马路过了鸡取决于你的参考系。\n141.为了让爱能够清晰可见，我用最著名的方程式做了个简单的替代法。如果不是E=mc²，我们接受治愈世界的能量可通过爱乘以光速的平方来获得，我们就得出一个结论：爱是最强大的的力量，因为爱没有限制。\n142.You never fail until you stop trying. 只要你不放弃尝试，就永远不会失败。\n143.爱因斯坦说：有些人认为宗教不合乎科学道理。我是一位研究科学的人，我深切知道，今天的科学，只能证明某种物体存在，而不能证明某种物体不存在。\n144.方程式对我更重要，因为政治只看眼前，而方程式是永恒的。\n145.宇宙中一切物质都不存在，唯有精神永恒！\n146.只有为别人而活的生命才是值得的。\n147.在科学思维中常常伴着诗的因素，真正的科学和真正的音乐要求同样的想象过程。\n148.如果我给你一个芬尼，你的财富增长而我的财富缩减，幅度都是一个芬尼。但如果我给你一点想法，尽管你有了新的想法，我却并没损失什么。\n149.科学的不朽荣誉，在于它通过对人类心灵的作用，克服了人们在自己面前和在自然界面前的不安全感。\n150.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高贵的品质，超脱时代和社会，走自己正确的道路。现在，大家都为了电冰箱、汽车、房子而奔波、追逐、竞争。这是我们这个时代的特征了。但是也有不少人，他们不追求这些物质的东西，他们追求理想和真理，得到了内心的自由和安宁。\n151.恶是一种失去善的状态，暗是一种失去光的状态，死是一种失去生的状态……\n152.在一个崇高的目标支持下，不停地工作，即使慢，也一定会获得成功\n153.推动你的事业，不要让你的事业推动你。\n154.要追究一个人自己或一切生物生存的意义或目的，从客观的观点来看，我总觉得是愚蠢可笑的。可是每个人都有一定的理想，这种理想决定着他的努力和判断的方向。就在这个意义上，我从来不把安逸和享乐看作是生活目的本身———这种伦理基础，我叫它猪栏的理想。照亮我的道路，并且不断地给我新的勇气去愉快地正视生活的理想，是善、美和真。要是没有志同道合者之间的亲切感情，要不是全神贯注于客观世界———那个在艺术和科学工作领域里永远达不到的对象，那末在我看来，生活就会是空虚的。人们所努力追求的庸俗的目标———财产、虚荣、奢侈的生活———我总觉得都是可鄙的。”\n155.不要为成功而努力，要为作一个有价值的人而努力。\n156.照亮我的道路，并且不断地给我新的勇气去愉快地正视生活的理想，是善、美和真。要是没有志同道合者之间的亲切感情，要不是全神贯注于客观世界——那个在艺术和科学工作领域里永远达不到的对象，那末在我看来，生活就会是空虚的。人们所努力追求的庸俗的目标——财产、虚荣、奢侈的生活——我总觉得都是可鄙的。\n157.过去、现在、和未来的区别只是执着的幻觉。\n158.凡是对人类生活提高最有贡献的人，应当是最受爱戴的人，这在原则上是对的。但是如果要求别人承认自己比同伴或者同学更高更强，或者更有才智，那就容易在心理上产生惟我独尊的态度，这无论对个人对社会都是有害的。\n159.想像力比知识更重要，因为知识是有限的，而想像力概括着世界上的一切，推动着进步，并且是知识进步的源泉。\n160.在一个崇高的目的支持下，不停地工作，即使慢、也一定会获得成功。\n161.一个人对社会的价值首先取决于他的感情、思想和行动对增进人类利益有多大作用。《爱因斯坦文集》\n162.I know not with what weapons World War III will be fought, but World War IV will be fought with sticks and stones。 我不知道第三次世界大战会使用什么样的武器，但是我知道第四次世界大战会使用木棍和石块\n163.爱为学问之始\n164.上帝不掷骰子。\n165.如果给我1个小时解答一道决定我生死的问题，我会花55分钟弄清楚这道题到底在问什么。一旦清楚它到底在问什么，剩下的5分钟足够回答这个问题。\n166.“真理不在你的眼睛里，只存在于你的心智里。”人们眼中的世界只是有限时空中低级感官的特殊映像，而不是本来的真实世界。“物理学是从概念上掌握实在的一种努力，至于实在是否被观察，则被认为是无关的。”“实证论者声称：凡是不能观察到的，都是不存在的。很显然这种观点在科学上是占不住脚的。倒是必须说：只有我们观察到的东西才是存在的。这种说法显然也是错误的，因为可观察的世界并不'存在’。认为我们知觉到这个世界，那是幻想。我们所观察到的不是真实的世界。世界并不是由我们的感觉给予我们的，我们看到的只是宇宙的假象，时空的错觉。”“现实即幻象，只不过比较稳定罢了。”\n167.我的每一项发现都不是通过理性思考获得的，不，是通过进入一种觉知和意识，而不是通过低级白痴的理性思考。\n168.每一个有良好愿望的人的责任，就是要尽其所能，在他自己的小天地里做坚定的努力，使纯粹人性的教义，成为一种有生命的力量。如果他们在这方面，作了一番忠诚的努力，而没有被他同时代的人践踏在脚下，那么，他可以认为他自己和他个人处的社会都是幸福的了。\n169.在天才和勤奋两者之间，我毫不迟疑地选择勤奋，她是几乎世界上一切成就的催产婆。\n170.想象比知识更重要。你的 头脑是你最有用的资产，但如果使用不 当，它会是你最大的负债。\n171.你要知道科学方法的实质，不要去听一个科学家对你说些什么，而要仔细看他在做什么。\n172.爱因斯坦的一封信：\n“我们这个时代诞生了许多天才的人物，他们的发明可以使我们的生活更加的便捷。我们已经可以利用机械横跨海洋，还使人类从各种辛苦繁重的体力劳动中最后解脱出来。我们已经学会了飞行，用电磁波从地球的一个角落与另一个角落传递信息，方便的沟通。然而，商品的生产和分配却是无序的，使每个人都生活在恐惧的阴影里，生怕失业而导致贫困潦倒。同时，生活在不同国家里的人民还经常互相残杀。由于这些原因，所有的人对未来充满了恐惧。所有这一切，都是由于大多数人的才智和品格，较之那些对社会产生真正价值的少数人的才智和品格来，是无比的低下。”\n173.态度上的弱点会变成性格上的弱点。所谓有一定的见识或修养的人，通常都是能够注意或掌握自己态度的人。\n174.上帝不为我们那些数学难题而费心。祂信手拈来，将万物合一。\n175.在科学上，每一条道路都应该走一走。发现一条走不通的道路，就是对于科学的一大贡献。\n176.如果你无法简单地解释，就说明你没有理解透彻。\n177.一个人的真正价值首先决定于他在什么程度上和什么意义上从自我解放出来。\n178.我们所经历的最美妙的事情就是神秘。\n179.追求真理比占有真理更加难能可贵。\n180.踩着别人脚步走路的人，永远不会留下自己的脚印。\n181.一个人在科学探索的道路上，走过弯路，犯过错误，并不是坏事，更不是什么耻辱，要在实践中勇于承认和改正错误。\n182.在所阅读的书本中找出可以把自己引到深处的东西，而把其他一切抛掉，就是抛掉使头脑负担过重并会使自己远离要点的一切。有舍才能有得，轻装才能高速前进。\n183.为了惩罚我蔑视权威，命运也将我变成了一个权威。\n184.生命会给你所需要的东西，只要你不断地向它要，只要你在向它要地时候说得一清二楚。\n185.一再做重复的事而期待会有不同的结果，完全是发疯最明显的征兆。\n186.虽然我一直因为外界环境的限制，不能成为一名严格的素食者，但我一直坚持着这个原则。在我看来，除了赞同为了审美和道德的目标而素食外，素食者的生活方式，纯粹在物质上对人的性情的影响来看，就能极有益地改变全人类的命运。《The Expanded Quotable Einstein》\n187.“我确实相信：在我们的教育中，往往只是为着实用和实际的目的，过分强调单纯智育的态度，已经直接导致对伦理教育的损害。”\n188.在我看来，现在有许多人—甚至包括科学家—似乎都只是见树不见林。关于历史与哲学背景的知识，可以提供给那些大部份正受到当代偏颇观念所左右的科学家们一种不随波逐流的独立性。这种由哲学的洞察力所创造的独立性，依我来看，正是一个工匠或专家，与一个真正的真理追寻者之间，最大的区别。\n189.你们只懂得应用科学本身是不够的。关心人的本身，应当始终成为一切技术上奋斗的主要目标;关心怎样组织人的劳动和产品分配这样一些尚未解决的重大问题，用以保证我们科学思想的成果会造福于人类,而不致成为祸害。在你们埋头于图标和方程时,千万不要忘记这一点! 《爱因斯坦文集》\n190.成功＝艰苦劳动＋正确方法＋少说空话。\n191.想像力比知识更重要，因为知识是有限的，而想像力概括着世界的一切，推动着进步，并且是知识进化的源泉。严格地说，想像力是科学研究的实在因素。\n192.在混乱之中发现单纯。 《教育论》\n193.有的放矢，带着问题学习的人，容易提出自己的见解，因为他对这个问题思索已久，脑海里储存了许多有关的信息，大有一触即发之势，易于发现并抓住自己所需的精华，从而解决问题。\n194.这世界不会被那些作恶多端的人毁灭，而是冷眼旁观、选择保持缄默的人。 原文: The world will not be destroyed by those who do evil,but by those who watch them without doing anything.\n195.由百折不挠的信念所支持的人的意志，比那些似乎是无敌的物质力量具有更大的威力。\n196.我孤寂地生活着，年轻时痛苦万分，而在成熟之年里却甘之如饴。 《爱因斯坦晚年文集》\n197.谁要是把自己标榜为真理和知识领域里的裁判官，他就会被神的笑声所覆灭。\n198.大学培养的目标是独立思考的能力。\n199.一个人从未犯错是因为他不曾尝试新鲜事物。——爱因斯坦","source":"_posts/ayst.md","raw":"---\ntitle: 爱因斯坦名言摘录\ndate: 2022/12/10 10:08:22\ntag: [摘录]\n---\n\n1.教育就是当一个人把在学校所学全部忘光之后剩下的东西。 Education is what remains after one has forgotten everything one has learned in school.  \n2.不要努力成为一个成功者，要努力成为一个有价值的人。  \n3.如果一个想法在一开始不是荒谬的，那它就是没有希望的。  \n4.生活就像骑自行车，要想保持平衡就要不断运动. 《爱因斯坦：生活和宇宙》\n5.每个人都身怀天赋，但如果用会不会爬树的能力来评判一只鱼，它会终其一生以为自己愚蠢。\n6.一个从未犯错的人是因为他不曾尝试新鲜事物。\n7.我喜欢旅行，但不喜欢到达目的地。\n8.把你的手放在滚热的炉子上一分钟，感觉起来像一小时。坐在一个漂亮姑娘身边整整一小时，感觉起来像一分钟。这就是相对论。\n9.我从不去想未来。因为它来得已经够快的了。\n10.Only two things are infinite, the universe and human stupidity, and I'm not sure about the universe. 有两种东西是无限的，宇宙和人类的愚蠢。 《翻译来自一张海报》\n11.态度上的弱点会变成性格上的弱点。\n12.成功＝艰苦劳动＋正确的方法＋少说空话。\n13.世间最美好的东西，莫过于有几个头脑和心地都很正直的朋友。\n14.人的成就和差异决定于其业余时间。\n15.我不知道第三次世界大战会用哪些武器，但第四次世界大战中人们肯定用的是木棍和石块。\n16.一个人最高的本领就是适应客观世界的能力。\n17.天才和愚蠢之间的区别就是天才是有极限的。\n18.要打破人的偏见比崩解一个原子还难。\n19.这世界不会被那些作恶多端的人毁灭，而是冷眼旁观、选择保持缄默的人。\n20.并不是我很聪明，而只是我和问题相处得比较久一点。\n21.不要抱怨生活，那只能说明你的无能。强者从来不抱怨生活。\n22.为了惩罚我对权威的蔑视，命运把我自己变成了一个权威. 《爱因斯坦：生活和宇宙》\n23.没有侥幸这回事，最偶然的意外，似乎也都是事有必然的。 《教育论》\n24.常识就是人到十八岁为止所累积的各种偏见。\n25.想像力比知识更重要。因为知识是有限的，而想像力是无限,它包含了一切,推动着进步,是人类进化的源泉。\n26.道德毫无神圣之处，它纯粹只是人之常情。\n27.逻辑会把你从A带到B，想象力能带你去任何地方。\n28.如果你不能简单说清楚，就是你没完全明白。\n原文：If you can't explain it simply, you don't understand it well enough.\n29.万有引力可无法对坠入爱河的人负责。\n30.用一个大圆圈代表我学到的知识，但是圆圈之外是那么多的空白，对我来说就意味着无知。而且圆圈越大，它的圆周就越长，它与外界空白的接触面也就越大。由此可见，我感到不懂的地方还大得很呢！ 《获奖致辞》\n31.精神错乱：一遍又一遍地重复作同一件事，而期待会有不同的结果。\n32.生命会给你所要的东西，只要你不断地向它要，只要你在要的时候讲得清楚。\n33.在天才和勤奋之间，我毫不犹豫地选择后者。她几乎是世界上一切成就的催产婆。\n34.人的差异产生于业余时间。业余时间能成就一个人，也能毁灭一个人。\n35.\"If at first the idea is not absurd, then there will be no hope for it.\"- Albert Einstein。 如果一个想法一开始不荒谬，那么它就毫无希望。\n36.一个人的价值,应当看他贡献什么,而不应当看他取得什么.\n37.每个人都有一定的理想，这种理想决定着他的努力和判断的方向。就在这个意义上，我从来不把安逸和快乐看作生活目的的本身－－ 这种伦理基础，我叫它猪栏的理想。\n38.一个人的真正价值首先决定于他在什么程度上和在什么意义上从自我解放出来。\n39.人们都把我的成功归功于天才，其实我的天才只是刻苦而已。\n40.真正有价值的是直觉。在探索的道路上智力无甚用处。\n41.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高尚的品质，超脱时代和社会，走自己正确的道路。现在，大家都为了电冰箱、汽车、房子而奔波、追逐、竞争。这就是我们这个时代的特征了。但是也还有不少人，他们不追求这些物质的东西，他们追求理想和真理，得到了内心的自由和安宁。\n42.独立思考和独立判断的一般能力，应当始终放在首位。\n43.苦和甜来自外界，坚强则来自内心，来自一个人的自我努力。\n44.提出一个问题往往比解决一个问题更重要\n45.人生就像骑单车。想保持平衡就得往前走。\n46.创新的秘密在于知道如何把你的智谋藏而不露。\n47.The reason for time is so that everything doesn't happen at once. 时间存在的意义就是任何事都不可能立刻实现\n48.有一个现象的明显程度已经让我毛骨悚然，这便是我们的人性已经远远落后我们的科学技术了。\n49.一个快乐的人总是满足于当下，而不太浪费时间去想未来的事。\n50.耐心和恒心总会得到报酬的。\n51.如果我的相对论被证明是正确的，德国人就会说我是德国人，法国佬会说我是一个世界公民。如果我的相对论被否定了，法国佬就会骂我德国鬼子，而德国人就会把我归为犹太人。\n52.如果A代表一个人的成功，那么A等于x加y加z。勤奋工作是x；y是玩耍，而z是把嘴闭上。\n53.莫扎特从不为永恒作曲，但是正因为这个理由，所以他的许多作品均是永恒的。\n54.爱因斯坦曾说过，“每个人都身怀天赋”，如此说来，若单用爬树的能力来评判一只鱼，那便是愚蠢\n55.对一切来说，只有热爱才是最好的老师，它远远胜过责任感。 To All, only love is the best teacher, it is far better than the responsibility.\n56.一切都应该尽可能地简单，但不要太简单。\n57.Reality is merely an illusion,albeit a very persistent one. 现实只是一抹幻影，尽管它从不消散。《犯罪心理》\n58.无论什么时候，就当自己生活在火星吧，周围全是陌生的怪物，对怪物的行为无需产生浓厚的兴趣。\n59.有时候一个人为不花钱得到的东西付出的代价最高。《教育论》\n60.凡在小事上对真理持轻率态度的人，在大事上也是不可信任的。\n61.“我从来不记忆和思考那些词典、手册里的东西，我的脑袋只用来记忆和思考那些还没有载入书本的东西。” 《口述》\n62.只要你有一件合理的事去做，你的生活就会显得特别美好。\n63.世界上最让我难以理解的就是所得税。\n64.Try not to become a man of success but rather try to become a man of value. —— A. Einstein 不要为成功而努力，要为做一个有价值的人而努力。\n65.我们一来到世间，社会就在我们面前树起了一个巨大的问号：你怎样度过自己的一生。\n66.所谓现实只不过是一个错觉，虽然这个错觉非常持久。\n67.我们不能用制造问题时的同一水平思维来解决问题。\n68.“学校的目标应当是培养有独立行动和独立思考的个人，不过他们要把为社会服务看作是自己人生的最高目标。”\n69.不要担心你在数学上遇到的困难；我敢保证我遇到的困难比你还大得多。\n70.学习知识要善于思考，思考，再思考。我就是靠这个方法成为科学家的。\n71.最好把一个人的爱好和职业尽可能远的分开。把一个的生计所在和上帝所赐的秉赋硬凑在一起，那是不明智的。\n72.真理就是在经验面前站得住脚的东西。\n73.使学生对教师尊敬的惟一源泉在于教师的德和才。\n74.宇宙中唯有两件事物是无限的：那就是宇宙的大小与人的愚蠢。而宇宙的大小我却不能肯定。\n75.科学没有宗教是瘸子，宗教没有科学是瞎子。\n76.不要试图去做一个成功的人，要努力成为一个有价值的人。\n77.宇宙中最不能理解的事情是，宇宙是可以被理解的。\n78.把人们引向艺术和科学的最强烈的动机之一，是要逃避日常生活中令人厌恶的粗俗和使人绝望的沉闷，是要摆脱人们自己反复无常的欲望的桎梏。一个修养有素的人总是渴望逃避个人生活而进入客观知觉和思维的世界。《普朗克文集科学往何处去？的序言》\n79.巧合是上帝保持匿名的方式。\n80.在一个崇高的目的的支持下，不停地工作。即使慢，也一定会获得成功。\n81.人只有献身于社会，才能找出那短暂而有风险的生命的意义。\n82.我从来不把安逸和享乐看作是生活的目的——这种理论，我把它叫做猪栏式的理想。\n83.上帝难以捉摸，但并不心怀恶意。\n84.我评定一个人的真正的价值只有一个标准，即：看他在多大程度上摆脱了“自我”，他摆脱了“自我”，又是为什么。\n85.婚姻的确是披着文明外衣的奴隶制。《爱因斯坦语录》\n86.当我们的知识之圆扩大之时，我们所面临的未知的圆周也一样。\n87.武力不能维持和平。只有互相理解才可以。\n88.哲学、艺术和科学，其目的都是为了让人类的生活趋向高深，使它从单纯的生理存在中升华，并把个人引向自由。\n89.我没有什么特殊的才能，不过是喜欢寻根刨底地追究问题罢了\n90.我从不想未来，它来得太快。\n91.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高贵的品质，超脱时代和社会，走自己正确的道路。\n92.提出一个问题往往比解决一个问题更重要，因为解决问题也许仅是一个数学上或实验上的技能而已。而提出新的问题新的可能性，从新的角度去看旧的问题，都需要有创造性的想象力，而且标志着科学的真正进步。\n93.世间最好的东西，莫过于有几个头脑和心地都很正直的严正的朋友。\n94.我每天提醒自己一百遍，我的生活，不管内在或是外在，都是以他人（包括活着的和逝去的）努力的成果为基础。所以我必须尽力奉献自己，希望能以同等的贡献，来回报长久以来从他人身上所获得的一切。\n95.任何物体以光速运动时，其长度将会缩短为零。\n96.人做事如果要成功，在之前必须脑海中有画面。\n97.任何天才不能在孤独的状态中发展。\n98.创新不是由逻辑思维带来的，尽管最后的产物有赖于一个符合逻辑的结构。\n99.人是为别人而生存的——首先是为那样一些人，他们的喜悦和健康关系着我们自己全部的幸福，然而是为许多我们所不认识的人，他们的命运通过同情的纽带同我们密切结合在一起。我每天上百次地提醒自己，我的精神生活和物质生活都依靠着别人（包括活着的和死去的）的劳动，我必须尽力以同样的分量来报偿我所领受了的和至今还在领受着的东西。我强烈地向往着俭朴的生活，并且常为发觉自己占有了同胞过多的劳动而难以忍受。\n100.我不信仰一个人格化的神。\n101.在真理和认识方面，任何以权威者自居的人，必将在上帝的戏笑中垮台！\n102.很少人是用自己的眼睛去看，和用自己的心去感觉的。\n103.我害怕有一天，科技会取代人与人之间的交流，我们的世界将会充斥着一群白痴\n104.量子力学的确让人印象深刻。但是我的内心却有一个声音告诉我，它还不是正确的理论。这个理论是说了很多，但它并没有引领我们更接近上帝的秘密。我，无论如何，深信上帝不掷骰子。\n105.在科学上，每一条道路都应该走一走，发现一条走不通的道路，就是对科学的一大贡献。那种证明“此路不通”的吃力不讨好的工作，就让我来做吧！\n106.我们的科学史，只写某人某人取得成功，在成功者之前探索道路的，发现“此路不通”的失败者统统不写，这是很不公平的。\n107.对于我来说，生命的意义在于设身处地替别人着想，忧他人之忧，乐他人之乐。\n108.真正使我感兴趣的是上帝创造世界的时候有没有别的方案可选\n109.在上帝面前，我们都一样聪明——也都一样愚蠢。\n110.旦我们接受了自己的限制， 我们就超越它们了！ Once we accept our limits, we go beyond them.\n111.任何一个有智力的笨蛋都可以把事情搞得更大，更复杂，也更激烈。往相反的方向前进则需要天份，以及很大的勇气。\n112.有两种看待人生的方式， 一种是生活不存在奇迹， 另一种则是， 所有的一切都是奇迹。\n113.有一种无穷无尽的能量源，迄今为止科学都没有对他找到一个合理的解释。这是一种生命力，包含并统领所有其它的一切。而且在任何宇宙的运行现象之后，甚至还没有被我们定义。这种生命力叫“爱”。\n114.人所具备的智力仅够使自己清楚地认识到，在大自然面前自己的智力是何等的欠缺。如果这种谦卑精神能为世人所共有，那么人类活动的世界就会更加具有吸引力。\n115.我想知道上帝的构思；其他的都只是细节。\n116.倘若A代表人生的成功，那么公式是：A=X+Y+Z。X是工作，Y是游戏，Z是保持缄默。\n117.我认为只有大胆的臆测，而不是事实的积累，才能引领我们往前迈进。\n118.我绝对相信，在这个世界上，财富绝不能使人类进步。\n119.只有利他的生活才是值得过的生活。\n120.幸福来自于有目标的生活，而不是来自他人或物质。\n121.我实在是一个“孤独的旅客”，我未曾全心全意地属于我的国家，我的家庭，我的朋友，甚至我最接近的亲人；在所有这些关系面前，我总是感觉到有一定距离并且需要保持孤独——而这种感受正与年俱增。人们会清楚地发觉，同别人的相互了解和协调一致是有限度的，但这不足惋惜。这样的人无疑有点失去他的天真无邪和无忧无虑的心境；但另一方面，他却能够在很大程度上不为别人的意见、习惯和判断所左右，并且能够不受诱惑要去把他的内心平衡建立在这样一些不可靠的基础之上。\n122.不进行调查就谴责，那是最高的无知。\n123.情感和愿望是人类一切努力和创造背后的动力，不管呈现在我们面前的这种努力和创造外表上是多么高超。\n124.人们所努力追求的庸俗的目标——财产、虚荣、奢侈的生活——我总觉得都是可鄙的。\n125.对一个人来说，所期望的不是别的，而仅仅是他能全力以赴和献身于一种美好事业。\n126.Everyone is a genius. But if you judge a fish by its ability to climb a tree, it will spend its whole life believing it is stupid. 每个人都是天才。但如果硬要以鱼儿爬树的本领，来评估它的能力，它这辈子都会觉得自己是条蠢鱼。\n127.有些理想曾为我们引过道路，并不断给我新的勇气以欣然面对人生，那些理想就是——真、善、美。\n128.小事小节斤斤计较而淡漠大事、大节的人是不会有什么作为的。我从来不把安逸和快乐看作是生活目的本身-----这种伦理基础，我叫它猪栏的理想。\n129.科学的全部不过就是日常思考的提炼。\n130.世界上，宇宙中，有多少难解的谜啊……还是抓紧时间工作吧！\n131.等你们六十岁的时候，你们就会珍惜由你们支配的每一个钟头了。\n132.所有的宗教、艺术和科学，都是生长在同一棵树上的枝叶。人类对这三方面的追求，都是为了使生命从单纯的物质世界里提升，而达到自由。\n133.若无某种大胆放肆的猜想，一般是不可能有知识的进展的。\n134.我生平喜欢步行，运动给我带来了无穷的乐趣。\n135.凡在小事上对真理持轻率态度的人，在大事上也是不足信的。\n136.科学研究能破除迷信，因为它鼓励人们根据因果关系来思考和观察事物。\n137.雄心壮志或单纯的责任感不会产生任何真正有价值的东西，只有对于人类和对于客观事物的热爱与献身精神，才能产生真正有价值的东西。\n138.Great spirits have often encountered violent opposition from weaker minds. 伟大的思想经常会受懦弱世俗的强烈反对\n139.法律本身并不能保证言论自由；要做到这一点，必需要所有的人都有着包容的心。\n140.是鸡过了马路还是马路过了鸡取决于你的参考系。\n141.为了让爱能够清晰可见，我用最著名的方程式做了个简单的替代法。如果不是E=mc²，我们接受治愈世界的能量可通过爱乘以光速的平方来获得，我们就得出一个结论：爱是最强大的的力量，因为爱没有限制。\n142.You never fail until you stop trying. 只要你不放弃尝试，就永远不会失败。\n143.爱因斯坦说：有些人认为宗教不合乎科学道理。我是一位研究科学的人，我深切知道，今天的科学，只能证明某种物体存在，而不能证明某种物体不存在。\n144.方程式对我更重要，因为政治只看眼前，而方程式是永恒的。\n145.宇宙中一切物质都不存在，唯有精神永恒！\n146.只有为别人而活的生命才是值得的。\n147.在科学思维中常常伴着诗的因素，真正的科学和真正的音乐要求同样的想象过程。\n148.如果我给你一个芬尼，你的财富增长而我的财富缩减，幅度都是一个芬尼。但如果我给你一点想法，尽管你有了新的想法，我却并没损失什么。\n149.科学的不朽荣誉，在于它通过对人类心灵的作用，克服了人们在自己面前和在自然界面前的不安全感。\n150.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高贵的品质，超脱时代和社会，走自己正确的道路。现在，大家都为了电冰箱、汽车、房子而奔波、追逐、竞争。这是我们这个时代的特征了。但是也有不少人，他们不追求这些物质的东西，他们追求理想和真理，得到了内心的自由和安宁。\n151.恶是一种失去善的状态，暗是一种失去光的状态，死是一种失去生的状态……\n152.在一个崇高的目标支持下，不停地工作，即使慢，也一定会获得成功\n153.推动你的事业，不要让你的事业推动你。\n154.要追究一个人自己或一切生物生存的意义或目的，从客观的观点来看，我总觉得是愚蠢可笑的。可是每个人都有一定的理想，这种理想决定着他的努力和判断的方向。就在这个意义上，我从来不把安逸和享乐看作是生活目的本身———这种伦理基础，我叫它猪栏的理想。照亮我的道路，并且不断地给我新的勇气去愉快地正视生活的理想，是善、美和真。要是没有志同道合者之间的亲切感情，要不是全神贯注于客观世界———那个在艺术和科学工作领域里永远达不到的对象，那末在我看来，生活就会是空虚的。人们所努力追求的庸俗的目标———财产、虚荣、奢侈的生活———我总觉得都是可鄙的。”\n155.不要为成功而努力，要为作一个有价值的人而努力。\n156.照亮我的道路，并且不断地给我新的勇气去愉快地正视生活的理想，是善、美和真。要是没有志同道合者之间的亲切感情，要不是全神贯注于客观世界——那个在艺术和科学工作领域里永远达不到的对象，那末在我看来，生活就会是空虚的。人们所努力追求的庸俗的目标——财产、虚荣、奢侈的生活——我总觉得都是可鄙的。\n157.过去、现在、和未来的区别只是执着的幻觉。\n158.凡是对人类生活提高最有贡献的人，应当是最受爱戴的人，这在原则上是对的。但是如果要求别人承认自己比同伴或者同学更高更强，或者更有才智，那就容易在心理上产生惟我独尊的态度，这无论对个人对社会都是有害的。\n159.想像力比知识更重要，因为知识是有限的，而想像力概括着世界上的一切，推动着进步，并且是知识进步的源泉。\n160.在一个崇高的目的支持下，不停地工作，即使慢、也一定会获得成功。\n161.一个人对社会的价值首先取决于他的感情、思想和行动对增进人类利益有多大作用。《爱因斯坦文集》\n162.I know not with what weapons World War III will be fought, but World War IV will be fought with sticks and stones。 我不知道第三次世界大战会使用什么样的武器，但是我知道第四次世界大战会使用木棍和石块\n163.爱为学问之始\n164.上帝不掷骰子。\n165.如果给我1个小时解答一道决定我生死的问题，我会花55分钟弄清楚这道题到底在问什么。一旦清楚它到底在问什么，剩下的5分钟足够回答这个问题。\n166.“真理不在你的眼睛里，只存在于你的心智里。”人们眼中的世界只是有限时空中低级感官的特殊映像，而不是本来的真实世界。“物理学是从概念上掌握实在的一种努力，至于实在是否被观察，则被认为是无关的。”“实证论者声称：凡是不能观察到的，都是不存在的。很显然这种观点在科学上是占不住脚的。倒是必须说：只有我们观察到的东西才是存在的。这种说法显然也是错误的，因为可观察的世界并不'存在’。认为我们知觉到这个世界，那是幻想。我们所观察到的不是真实的世界。世界并不是由我们的感觉给予我们的，我们看到的只是宇宙的假象，时空的错觉。”“现实即幻象，只不过比较稳定罢了。”\n167.我的每一项发现都不是通过理性思考获得的，不，是通过进入一种觉知和意识，而不是通过低级白痴的理性思考。\n168.每一个有良好愿望的人的责任，就是要尽其所能，在他自己的小天地里做坚定的努力，使纯粹人性的教义，成为一种有生命的力量。如果他们在这方面，作了一番忠诚的努力，而没有被他同时代的人践踏在脚下，那么，他可以认为他自己和他个人处的社会都是幸福的了。\n169.在天才和勤奋两者之间，我毫不迟疑地选择勤奋，她是几乎世界上一切成就的催产婆。\n170.想象比知识更重要。你的 头脑是你最有用的资产，但如果使用不 当，它会是你最大的负债。\n171.你要知道科学方法的实质，不要去听一个科学家对你说些什么，而要仔细看他在做什么。\n172.爱因斯坦的一封信：\n“我们这个时代诞生了许多天才的人物，他们的发明可以使我们的生活更加的便捷。我们已经可以利用机械横跨海洋，还使人类从各种辛苦繁重的体力劳动中最后解脱出来。我们已经学会了飞行，用电磁波从地球的一个角落与另一个角落传递信息，方便的沟通。然而，商品的生产和分配却是无序的，使每个人都生活在恐惧的阴影里，生怕失业而导致贫困潦倒。同时，生活在不同国家里的人民还经常互相残杀。由于这些原因，所有的人对未来充满了恐惧。所有这一切，都是由于大多数人的才智和品格，较之那些对社会产生真正价值的少数人的才智和品格来，是无比的低下。”\n173.态度上的弱点会变成性格上的弱点。所谓有一定的见识或修养的人，通常都是能够注意或掌握自己态度的人。\n174.上帝不为我们那些数学难题而费心。祂信手拈来，将万物合一。\n175.在科学上，每一条道路都应该走一走。发现一条走不通的道路，就是对于科学的一大贡献。\n176.如果你无法简单地解释，就说明你没有理解透彻。\n177.一个人的真正价值首先决定于他在什么程度上和什么意义上从自我解放出来。\n178.我们所经历的最美妙的事情就是神秘。\n179.追求真理比占有真理更加难能可贵。\n180.踩着别人脚步走路的人，永远不会留下自己的脚印。\n181.一个人在科学探索的道路上，走过弯路，犯过错误，并不是坏事，更不是什么耻辱，要在实践中勇于承认和改正错误。\n182.在所阅读的书本中找出可以把自己引到深处的东西，而把其他一切抛掉，就是抛掉使头脑负担过重并会使自己远离要点的一切。有舍才能有得，轻装才能高速前进。\n183.为了惩罚我蔑视权威，命运也将我变成了一个权威。\n184.生命会给你所需要的东西，只要你不断地向它要，只要你在向它要地时候说得一清二楚。\n185.一再做重复的事而期待会有不同的结果，完全是发疯最明显的征兆。\n186.虽然我一直因为外界环境的限制，不能成为一名严格的素食者，但我一直坚持着这个原则。在我看来，除了赞同为了审美和道德的目标而素食外，素食者的生活方式，纯粹在物质上对人的性情的影响来看，就能极有益地改变全人类的命运。《The Expanded Quotable Einstein》\n187.“我确实相信：在我们的教育中，往往只是为着实用和实际的目的，过分强调单纯智育的态度，已经直接导致对伦理教育的损害。”\n188.在我看来，现在有许多人—甚至包括科学家—似乎都只是见树不见林。关于历史与哲学背景的知识，可以提供给那些大部份正受到当代偏颇观念所左右的科学家们一种不随波逐流的独立性。这种由哲学的洞察力所创造的独立性，依我来看，正是一个工匠或专家，与一个真正的真理追寻者之间，最大的区别。\n189.你们只懂得应用科学本身是不够的。关心人的本身，应当始终成为一切技术上奋斗的主要目标;关心怎样组织人的劳动和产品分配这样一些尚未解决的重大问题，用以保证我们科学思想的成果会造福于人类,而不致成为祸害。在你们埋头于图标和方程时,千万不要忘记这一点! 《爱因斯坦文集》\n190.成功＝艰苦劳动＋正确方法＋少说空话。\n191.想像力比知识更重要，因为知识是有限的，而想像力概括着世界的一切，推动着进步，并且是知识进化的源泉。严格地说，想像力是科学研究的实在因素。\n192.在混乱之中发现单纯。 《教育论》\n193.有的放矢，带着问题学习的人，容易提出自己的见解，因为他对这个问题思索已久，脑海里储存了许多有关的信息，大有一触即发之势，易于发现并抓住自己所需的精华，从而解决问题。\n194.这世界不会被那些作恶多端的人毁灭，而是冷眼旁观、选择保持缄默的人。 原文: The world will not be destroyed by those who do evil,but by those who watch them without doing anything.\n195.由百折不挠的信念所支持的人的意志，比那些似乎是无敌的物质力量具有更大的威力。\n196.我孤寂地生活着，年轻时痛苦万分，而在成熟之年里却甘之如饴。 《爱因斯坦晚年文集》\n197.谁要是把自己标榜为真理和知识领域里的裁判官，他就会被神的笑声所覆灭。\n198.大学培养的目标是独立思考的能力。\n199.一个人从未犯错是因为他不曾尝试新鲜事物。——爱因斯坦","slug":"ayst","published":1,"updated":"2022-12-10T02:36:19.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8x000yu19k69zj18xa","content":"<p>1.教育就是当一个人把在学校所学全部忘光之后剩下的东西。 Education is what remains after one has forgotten everything one has learned in school.<br>2.不要努力成为一个成功者，要努力成为一个有价值的人。<br>3.如果一个想法在一开始不是荒谬的，那它就是没有希望的。<br>4.生活就像骑自行车，要想保持平衡就要不断运动. 《爱因斯坦：生活和宇宙》<br>5.每个人都身怀天赋，但如果用会不会爬树的能力来评判一只鱼，它会终其一生以为自己愚蠢。<br>6.一个从未犯错的人是因为他不曾尝试新鲜事物。<br>7.我喜欢旅行，但不喜欢到达目的地。<br>8.把你的手放在滚热的炉子上一分钟，感觉起来像一小时。坐在一个漂亮姑娘身边整整一小时，感觉起来像一分钟。这就是相对论。<br>9.我从不去想未来。因为它来得已经够快的了。<br>10.Only two things are infinite, the universe and human stupidity, and I’m not sure about the universe. 有两种东西是无限的，宇宙和人类的愚蠢。 《翻译来自一张海报》<br>11.态度上的弱点会变成性格上的弱点。<br>12.成功＝艰苦劳动＋正确的方法＋少说空话。<br>13.世间最美好的东西，莫过于有几个头脑和心地都很正直的朋友。<br>14.人的成就和差异决定于其业余时间。<br>15.我不知道第三次世界大战会用哪些武器，但第四次世界大战中人们肯定用的是木棍和石块。<br>16.一个人最高的本领就是适应客观世界的能力。<br>17.天才和愚蠢之间的区别就是天才是有极限的。<br>18.要打破人的偏见比崩解一个原子还难。<br>19.这世界不会被那些作恶多端的人毁灭，而是冷眼旁观、选择保持缄默的人。<br>20.并不是我很聪明，而只是我和问题相处得比较久一点。<br>21.不要抱怨生活，那只能说明你的无能。强者从来不抱怨生活。<br>22.为了惩罚我对权威的蔑视，命运把我自己变成了一个权威. 《爱因斯坦：生活和宇宙》<br>23.没有侥幸这回事，最偶然的意外，似乎也都是事有必然的。 《教育论》<br>24.常识就是人到十八岁为止所累积的各种偏见。<br>25.想像力比知识更重要。因为知识是有限的，而想像力是无限,它包含了一切,推动着进步,是人类进化的源泉。<br>26.道德毫无神圣之处，它纯粹只是人之常情。<br>27.逻辑会把你从A带到B，想象力能带你去任何地方。<br>28.如果你不能简单说清楚，就是你没完全明白。<br>原文：If you can’t explain it simply, you don’t understand it well enough.<br>29.万有引力可无法对坠入爱河的人负责。<br>30.用一个大圆圈代表我学到的知识，但是圆圈之外是那么多的空白，对我来说就意味着无知。而且圆圈越大，它的圆周就越长，它与外界空白的接触面也就越大。由此可见，我感到不懂的地方还大得很呢！ 《获奖致辞》<br>31.精神错乱：一遍又一遍地重复作同一件事，而期待会有不同的结果。<br>32.生命会给你所要的东西，只要你不断地向它要，只要你在要的时候讲得清楚。<br>33.在天才和勤奋之间，我毫不犹豫地选择后者。她几乎是世界上一切成就的催产婆。<br>34.人的差异产生于业余时间。业余时间能成就一个人，也能毁灭一个人。<br>35.”If at first the idea is not absurd, then there will be no hope for it.”- Albert Einstein。 如果一个想法一开始不荒谬，那么它就毫无希望。<br>36.一个人的价值,应当看他贡献什么,而不应当看他取得什么.<br>37.每个人都有一定的理想，这种理想决定着他的努力和判断的方向。就在这个意义上，我从来不把安逸和快乐看作生活目的的本身－－ 这种伦理基础，我叫它猪栏的理想。<br>38.一个人的真正价值首先决定于他在什么程度上和在什么意义上从自我解放出来。<br>39.人们都把我的成功归功于天才，其实我的天才只是刻苦而已。<br>40.真正有价值的是直觉。在探索的道路上智力无甚用处。<br>41.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高尚的品质，超脱时代和社会，走自己正确的道路。现在，大家都为了电冰箱、汽车、房子而奔波、追逐、竞争。这就是我们这个时代的特征了。但是也还有不少人，他们不追求这些物质的东西，他们追求理想和真理，得到了内心的自由和安宁。<br>42.独立思考和独立判断的一般能力，应当始终放在首位。<br>43.苦和甜来自外界，坚强则来自内心，来自一个人的自我努力。<br>44.提出一个问题往往比解决一个问题更重要<br>45.人生就像骑单车。想保持平衡就得往前走。<br>46.创新的秘密在于知道如何把你的智谋藏而不露。<br>47.The reason for time is so that everything doesn’t happen at once. 时间存在的意义就是任何事都不可能立刻实现<br>48.有一个现象的明显程度已经让我毛骨悚然，这便是我们的人性已经远远落后我们的科学技术了。<br>49.一个快乐的人总是满足于当下，而不太浪费时间去想未来的事。<br>50.耐心和恒心总会得到报酬的。<br>51.如果我的相对论被证明是正确的，德国人就会说我是德国人，法国佬会说我是一个世界公民。如果我的相对论被否定了，法国佬就会骂我德国鬼子，而德国人就会把我归为犹太人。<br>52.如果A代表一个人的成功，那么A等于x加y加z。勤奋工作是x；y是玩耍，而z是把嘴闭上。<br>53.莫扎特从不为永恒作曲，但是正因为这个理由，所以他的许多作品均是永恒的。<br>54.爱因斯坦曾说过，“每个人都身怀天赋”，如此说来，若单用爬树的能力来评判一只鱼，那便是愚蠢<br>55.对一切来说，只有热爱才是最好的老师，它远远胜过责任感。 To All, only love is the best teacher, it is far better than the responsibility.<br>56.一切都应该尽可能地简单，但不要太简单。<br>57.Reality is merely an illusion,albeit a very persistent one. 现实只是一抹幻影，尽管它从不消散。《犯罪心理》<br>58.无论什么时候，就当自己生活在火星吧，周围全是陌生的怪物，对怪物的行为无需产生浓厚的兴趣。<br>59.有时候一个人为不花钱得到的东西付出的代价最高。《教育论》<br>60.凡在小事上对真理持轻率态度的人，在大事上也是不可信任的。<br>61.“我从来不记忆和思考那些词典、手册里的东西，我的脑袋只用来记忆和思考那些还没有载入书本的东西。” 《口述》<br>62.只要你有一件合理的事去做，你的生活就会显得特别美好。<br>63.世界上最让我难以理解的就是所得税。<br>64.Try not to become a man of success but rather try to become a man of value. —— A. Einstein 不要为成功而努力，要为做一个有价值的人而努力。<br>65.我们一来到世间，社会就在我们面前树起了一个巨大的问号：你怎样度过自己的一生。<br>66.所谓现实只不过是一个错觉，虽然这个错觉非常持久。<br>67.我们不能用制造问题时的同一水平思维来解决问题。<br>68.“学校的目标应当是培养有独立行动和独立思考的个人，不过他们要把为社会服务看作是自己人生的最高目标。”<br>69.不要担心你在数学上遇到的困难；我敢保证我遇到的困难比你还大得多。<br>70.学习知识要善于思考，思考，再思考。我就是靠这个方法成为科学家的。<br>71.最好把一个人的爱好和职业尽可能远的分开。把一个的生计所在和上帝所赐的秉赋硬凑在一起，那是不明智的。<br>72.真理就是在经验面前站得住脚的东西。<br>73.使学生对教师尊敬的惟一源泉在于教师的德和才。<br>74.宇宙中唯有两件事物是无限的：那就是宇宙的大小与人的愚蠢。而宇宙的大小我却不能肯定。<br>75.科学没有宗教是瘸子，宗教没有科学是瞎子。<br>76.不要试图去做一个成功的人，要努力成为一个有价值的人。<br>77.宇宙中最不能理解的事情是，宇宙是可以被理解的。<br>78.把人们引向艺术和科学的最强烈的动机之一，是要逃避日常生活中令人厌恶的粗俗和使人绝望的沉闷，是要摆脱人们自己反复无常的欲望的桎梏。一个修养有素的人总是渴望逃避个人生活而进入客观知觉和思维的世界。《普朗克文集科学往何处去？的序言》<br>79.巧合是上帝保持匿名的方式。<br>80.在一个崇高的目的的支持下，不停地工作。即使慢，也一定会获得成功。<br>81.人只有献身于社会，才能找出那短暂而有风险的生命的意义。<br>82.我从来不把安逸和享乐看作是生活的目的——这种理论，我把它叫做猪栏式的理想。<br>83.上帝难以捉摸，但并不心怀恶意。<br>84.我评定一个人的真正的价值只有一个标准，即：看他在多大程度上摆脱了“自我”，他摆脱了“自我”，又是为什么。<br>85.婚姻的确是披着文明外衣的奴隶制。《爱因斯坦语录》<br>86.当我们的知识之圆扩大之时，我们所面临的未知的圆周也一样。<br>87.武力不能维持和平。只有互相理解才可以。<br>88.哲学、艺术和科学，其目的都是为了让人类的生活趋向高深，使它从单纯的生理存在中升华，并把个人引向自由。<br>89.我没有什么特殊的才能，不过是喜欢寻根刨底地追究问题罢了<br>90.我从不想未来，它来得太快。<br>91.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高贵的品质，超脱时代和社会，走自己正确的道路。<br>92.提出一个问题往往比解决一个问题更重要，因为解决问题也许仅是一个数学上或实验上的技能而已。而提出新的问题新的可能性，从新的角度去看旧的问题，都需要有创造性的想象力，而且标志着科学的真正进步。<br>93.世间最好的东西，莫过于有几个头脑和心地都很正直的严正的朋友。<br>94.我每天提醒自己一百遍，我的生活，不管内在或是外在，都是以他人（包括活着的和逝去的）努力的成果为基础。所以我必须尽力奉献自己，希望能以同等的贡献，来回报长久以来从他人身上所获得的一切。<br>95.任何物体以光速运动时，其长度将会缩短为零。<br>96.人做事如果要成功，在之前必须脑海中有画面。<br>97.任何天才不能在孤独的状态中发展。<br>98.创新不是由逻辑思维带来的，尽管最后的产物有赖于一个符合逻辑的结构。<br>99.人是为别人而生存的——首先是为那样一些人，他们的喜悦和健康关系着我们自己全部的幸福，然而是为许多我们所不认识的人，他们的命运通过同情的纽带同我们密切结合在一起。我每天上百次地提醒自己，我的精神生活和物质生活都依靠着别人（包括活着的和死去的）的劳动，我必须尽力以同样的分量来报偿我所领受了的和至今还在领受着的东西。我强烈地向往着俭朴的生活，并且常为发觉自己占有了同胞过多的劳动而难以忍受。<br>100.我不信仰一个人格化的神。<br>101.在真理和认识方面，任何以权威者自居的人，必将在上帝的戏笑中垮台！<br>102.很少人是用自己的眼睛去看，和用自己的心去感觉的。<br>103.我害怕有一天，科技会取代人与人之间的交流，我们的世界将会充斥着一群白痴<br>104.量子力学的确让人印象深刻。但是我的内心却有一个声音告诉我，它还不是正确的理论。这个理论是说了很多，但它并没有引领我们更接近上帝的秘密。我，无论如何，深信上帝不掷骰子。<br>105.在科学上，每一条道路都应该走一走，发现一条走不通的道路，就是对科学的一大贡献。那种证明“此路不通”的吃力不讨好的工作，就让我来做吧！<br>106.我们的科学史，只写某人某人取得成功，在成功者之前探索道路的，发现“此路不通”的失败者统统不写，这是很不公平的。<br>107.对于我来说，生命的意义在于设身处地替别人着想，忧他人之忧，乐他人之乐。<br>108.真正使我感兴趣的是上帝创造世界的时候有没有别的方案可选<br>109.在上帝面前，我们都一样聪明——也都一样愚蠢。<br>110.旦我们接受了自己的限制， 我们就超越它们了！ Once we accept our limits, we go beyond them.<br>111.任何一个有智力的笨蛋都可以把事情搞得更大，更复杂，也更激烈。往相反的方向前进则需要天份，以及很大的勇气。<br>112.有两种看待人生的方式， 一种是生活不存在奇迹， 另一种则是， 所有的一切都是奇迹。<br>113.有一种无穷无尽的能量源，迄今为止科学都没有对他找到一个合理的解释。这是一种生命力，包含并统领所有其它的一切。而且在任何宇宙的运行现象之后，甚至还没有被我们定义。这种生命力叫“爱”。<br>114.人所具备的智力仅够使自己清楚地认识到，在大自然面前自己的智力是何等的欠缺。如果这种谦卑精神能为世人所共有，那么人类活动的世界就会更加具有吸引力。<br>115.我想知道上帝的构思；其他的都只是细节。<br>116.倘若A代表人生的成功，那么公式是：A=X+Y+Z。X是工作，Y是游戏，Z是保持缄默。<br>117.我认为只有大胆的臆测，而不是事实的积累，才能引领我们往前迈进。<br>118.我绝对相信，在这个世界上，财富绝不能使人类进步。<br>119.只有利他的生活才是值得过的生活。<br>120.幸福来自于有目标的生活，而不是来自他人或物质。<br>121.我实在是一个“孤独的旅客”，我未曾全心全意地属于我的国家，我的家庭，我的朋友，甚至我最接近的亲人；在所有这些关系面前，我总是感觉到有一定距离并且需要保持孤独——而这种感受正与年俱增。人们会清楚地发觉，同别人的相互了解和协调一致是有限度的，但这不足惋惜。这样的人无疑有点失去他的天真无邪和无忧无虑的心境；但另一方面，他却能够在很大程度上不为别人的意见、习惯和判断所左右，并且能够不受诱惑要去把他的内心平衡建立在这样一些不可靠的基础之上。<br>122.不进行调查就谴责，那是最高的无知。<br>123.情感和愿望是人类一切努力和创造背后的动力，不管呈现在我们面前的这种努力和创造外表上是多么高超。<br>124.人们所努力追求的庸俗的目标——财产、虚荣、奢侈的生活——我总觉得都是可鄙的。<br>125.对一个人来说，所期望的不是别的，而仅仅是他能全力以赴和献身于一种美好事业。<br>126.Everyone is a genius. But if you judge a fish by its ability to climb a tree, it will spend its whole life believing it is stupid. 每个人都是天才。但如果硬要以鱼儿爬树的本领，来评估它的能力，它这辈子都会觉得自己是条蠢鱼。<br>127.有些理想曾为我们引过道路，并不断给我新的勇气以欣然面对人生，那些理想就是——真、善、美。<br>128.小事小节斤斤计较而淡漠大事、大节的人是不会有什么作为的。我从来不把安逸和快乐看作是生活目的本身—–这种伦理基础，我叫它猪栏的理想。<br>129.科学的全部不过就是日常思考的提炼。<br>130.世界上，宇宙中，有多少难解的谜啊……还是抓紧时间工作吧！<br>131.等你们六十岁的时候，你们就会珍惜由你们支配的每一个钟头了。<br>132.所有的宗教、艺术和科学，都是生长在同一棵树上的枝叶。人类对这三方面的追求，都是为了使生命从单纯的物质世界里提升，而达到自由。<br>133.若无某种大胆放肆的猜想，一般是不可能有知识的进展的。<br>134.我生平喜欢步行，运动给我带来了无穷的乐趣。<br>135.凡在小事上对真理持轻率态度的人，在大事上也是不足信的。<br>136.科学研究能破除迷信，因为它鼓励人们根据因果关系来思考和观察事物。<br>137.雄心壮志或单纯的责任感不会产生任何真正有价值的东西，只有对于人类和对于客观事物的热爱与献身精神，才能产生真正有价值的东西。<br>138.Great spirits have often encountered violent opposition from weaker minds. 伟大的思想经常会受懦弱世俗的强烈反对<br>139.法律本身并不能保证言论自由；要做到这一点，必需要所有的人都有着包容的心。<br>140.是鸡过了马路还是马路过了鸡取决于你的参考系。<br>141.为了让爱能够清晰可见，我用最著名的方程式做了个简单的替代法。如果不是E=mc²，我们接受治愈世界的能量可通过爱乘以光速的平方来获得，我们就得出一个结论：爱是最强大的的力量，因为爱没有限制。<br>142.You never fail until you stop trying. 只要你不放弃尝试，就永远不会失败。<br>143.爱因斯坦说：有些人认为宗教不合乎科学道理。我是一位研究科学的人，我深切知道，今天的科学，只能证明某种物体存在，而不能证明某种物体不存在。<br>144.方程式对我更重要，因为政治只看眼前，而方程式是永恒的。<br>145.宇宙中一切物质都不存在，唯有精神永恒！<br>146.只有为别人而活的生命才是值得的。<br>147.在科学思维中常常伴着诗的因素，真正的科学和真正的音乐要求同样的想象过程。<br>148.如果我给你一个芬尼，你的财富增长而我的财富缩减，幅度都是一个芬尼。但如果我给你一点想法，尽管你有了新的想法，我却并没损失什么。<br>149.科学的不朽荣誉，在于它通过对人类心灵的作用，克服了人们在自己面前和在自然界面前的不安全感。<br>150.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高贵的品质，超脱时代和社会，走自己正确的道路。现在，大家都为了电冰箱、汽车、房子而奔波、追逐、竞争。这是我们这个时代的特征了。但是也有不少人，他们不追求这些物质的东西，他们追求理想和真理，得到了内心的自由和安宁。<br>151.恶是一种失去善的状态，暗是一种失去光的状态，死是一种失去生的状态……<br>152.在一个崇高的目标支持下，不停地工作，即使慢，也一定会获得成功<br>153.推动你的事业，不要让你的事业推动你。<br>154.要追究一个人自己或一切生物生存的意义或目的，从客观的观点来看，我总觉得是愚蠢可笑的。可是每个人都有一定的理想，这种理想决定着他的努力和判断的方向。就在这个意义上，我从来不把安逸和享乐看作是生活目的本身———这种伦理基础，我叫它猪栏的理想。照亮我的道路，并且不断地给我新的勇气去愉快地正视生活的理想，是善、美和真。要是没有志同道合者之间的亲切感情，要不是全神贯注于客观世界———那个在艺术和科学工作领域里永远达不到的对象，那末在我看来，生活就会是空虚的。人们所努力追求的庸俗的目标———财产、虚荣、奢侈的生活———我总觉得都是可鄙的。”<br>155.不要为成功而努力，要为作一个有价值的人而努力。<br>156.照亮我的道路，并且不断地给我新的勇气去愉快地正视生活的理想，是善、美和真。要是没有志同道合者之间的亲切感情，要不是全神贯注于客观世界——那个在艺术和科学工作领域里永远达不到的对象，那末在我看来，生活就会是空虚的。人们所努力追求的庸俗的目标——财产、虚荣、奢侈的生活——我总觉得都是可鄙的。<br>157.过去、现在、和未来的区别只是执着的幻觉。<br>158.凡是对人类生活提高最有贡献的人，应当是最受爱戴的人，这在原则上是对的。但是如果要求别人承认自己比同伴或者同学更高更强，或者更有才智，那就容易在心理上产生惟我独尊的态度，这无论对个人对社会都是有害的。<br>159.想像力比知识更重要，因为知识是有限的，而想像力概括着世界上的一切，推动着进步，并且是知识进步的源泉。<br>160.在一个崇高的目的支持下，不停地工作，即使慢、也一定会获得成功。<br>161.一个人对社会的价值首先取决于他的感情、思想和行动对增进人类利益有多大作用。《爱因斯坦文集》<br>162.I know not with what weapons World War III will be fought, but World War IV will be fought with sticks and stones。 我不知道第三次世界大战会使用什么样的武器，但是我知道第四次世界大战会使用木棍和石块<br>163.爱为学问之始<br>164.上帝不掷骰子。<br>165.如果给我1个小时解答一道决定我生死的问题，我会花55分钟弄清楚这道题到底在问什么。一旦清楚它到底在问什么，剩下的5分钟足够回答这个问题。<br>166.“真理不在你的眼睛里，只存在于你的心智里。”人们眼中的世界只是有限时空中低级感官的特殊映像，而不是本来的真实世界。“物理学是从概念上掌握实在的一种努力，至于实在是否被观察，则被认为是无关的。”“实证论者声称：凡是不能观察到的，都是不存在的。很显然这种观点在科学上是占不住脚的。倒是必须说：只有我们观察到的东西才是存在的。这种说法显然也是错误的，因为可观察的世界并不’存在’。认为我们知觉到这个世界，那是幻想。我们所观察到的不是真实的世界。世界并不是由我们的感觉给予我们的，我们看到的只是宇宙的假象，时空的错觉。”“现实即幻象，只不过比较稳定罢了。”<br>167.我的每一项发现都不是通过理性思考获得的，不，是通过进入一种觉知和意识，而不是通过低级白痴的理性思考。<br>168.每一个有良好愿望的人的责任，就是要尽其所能，在他自己的小天地里做坚定的努力，使纯粹人性的教义，成为一种有生命的力量。如果他们在这方面，作了一番忠诚的努力，而没有被他同时代的人践踏在脚下，那么，他可以认为他自己和他个人处的社会都是幸福的了。<br>169.在天才和勤奋两者之间，我毫不迟疑地选择勤奋，她是几乎世界上一切成就的催产婆。<br>170.想象比知识更重要。你的 头脑是你最有用的资产，但如果使用不 当，它会是你最大的负债。<br>171.你要知道科学方法的实质，不要去听一个科学家对你说些什么，而要仔细看他在做什么。<br>172.爱因斯坦的一封信：<br>“我们这个时代诞生了许多天才的人物，他们的发明可以使我们的生活更加的便捷。我们已经可以利用机械横跨海洋，还使人类从各种辛苦繁重的体力劳动中最后解脱出来。我们已经学会了飞行，用电磁波从地球的一个角落与另一个角落传递信息，方便的沟通。然而，商品的生产和分配却是无序的，使每个人都生活在恐惧的阴影里，生怕失业而导致贫困潦倒。同时，生活在不同国家里的人民还经常互相残杀。由于这些原因，所有的人对未来充满了恐惧。所有这一切，都是由于大多数人的才智和品格，较之那些对社会产生真正价值的少数人的才智和品格来，是无比的低下。”<br>173.态度上的弱点会变成性格上的弱点。所谓有一定的见识或修养的人，通常都是能够注意或掌握自己态度的人。<br>174.上帝不为我们那些数学难题而费心。祂信手拈来，将万物合一。<br>175.在科学上，每一条道路都应该走一走。发现一条走不通的道路，就是对于科学的一大贡献。<br>176.如果你无法简单地解释，就说明你没有理解透彻。<br>177.一个人的真正价值首先决定于他在什么程度上和什么意义上从自我解放出来。<br>178.我们所经历的最美妙的事情就是神秘。<br>179.追求真理比占有真理更加难能可贵。<br>180.踩着别人脚步走路的人，永远不会留下自己的脚印。<br>181.一个人在科学探索的道路上，走过弯路，犯过错误，并不是坏事，更不是什么耻辱，要在实践中勇于承认和改正错误。<br>182.在所阅读的书本中找出可以把自己引到深处的东西，而把其他一切抛掉，就是抛掉使头脑负担过重并会使自己远离要点的一切。有舍才能有得，轻装才能高速前进。<br>183.为了惩罚我蔑视权威，命运也将我变成了一个权威。<br>184.生命会给你所需要的东西，只要你不断地向它要，只要你在向它要地时候说得一清二楚。<br>185.一再做重复的事而期待会有不同的结果，完全是发疯最明显的征兆。<br>186.虽然我一直因为外界环境的限制，不能成为一名严格的素食者，但我一直坚持着这个原则。在我看来，除了赞同为了审美和道德的目标而素食外，素食者的生活方式，纯粹在物质上对人的性情的影响来看，就能极有益地改变全人类的命运。《The Expanded Quotable Einstein》<br>187.“我确实相信：在我们的教育中，往往只是为着实用和实际的目的，过分强调单纯智育的态度，已经直接导致对伦理教育的损害。”<br>188.在我看来，现在有许多人—甚至包括科学家—似乎都只是见树不见林。关于历史与哲学背景的知识，可以提供给那些大部份正受到当代偏颇观念所左右的科学家们一种不随波逐流的独立性。这种由哲学的洞察力所创造的独立性，依我来看，正是一个工匠或专家，与一个真正的真理追寻者之间，最大的区别。<br>189.你们只懂得应用科学本身是不够的。关心人的本身，应当始终成为一切技术上奋斗的主要目标;关心怎样组织人的劳动和产品分配这样一些尚未解决的重大问题，用以保证我们科学思想的成果会造福于人类,而不致成为祸害。在你们埋头于图标和方程时,千万不要忘记这一点! 《爱因斯坦文集》<br>190.成功＝艰苦劳动＋正确方法＋少说空话。<br>191.想像力比知识更重要，因为知识是有限的，而想像力概括着世界的一切，推动着进步，并且是知识进化的源泉。严格地说，想像力是科学研究的实在因素。<br>192.在混乱之中发现单纯。 《教育论》<br>193.有的放矢，带着问题学习的人，容易提出自己的见解，因为他对这个问题思索已久，脑海里储存了许多有关的信息，大有一触即发之势，易于发现并抓住自己所需的精华，从而解决问题。<br>194.这世界不会被那些作恶多端的人毁灭，而是冷眼旁观、选择保持缄默的人。 原文: The world will not be destroyed by those who do evil,but by those who watch them without doing anything.<br>195.由百折不挠的信念所支持的人的意志，比那些似乎是无敌的物质力量具有更大的威力。<br>196.我孤寂地生活着，年轻时痛苦万分，而在成熟之年里却甘之如饴。 《爱因斯坦晚年文集》<br>197.谁要是把自己标榜为真理和知识领域里的裁判官，他就会被神的笑声所覆灭。<br>198.大学培养的目标是独立思考的能力。<br>199.一个人从未犯错是因为他不曾尝试新鲜事物。——爱因斯坦</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<p>1.教育就是当一个人把在学校所学全部忘光之后剩下的东西。 Education is what remains after one has forgotten everything one has learned in school.<br>2.不要努力成为一个成功者，要努力成为一个有价值的人。<br>3.如果一个想法在一开始不是荒谬的，那它就是没有希望的。<br>4.生活就像骑自行车，要想保持平衡就要不断运动. 《爱因斯坦：生活和宇宙》<br>5.每个人都身怀天赋，但如果用会不会爬树的能力来评判一只鱼，它会终其一生以为自己愚蠢。<br>6.一个从未犯错的人是因为他不曾尝试新鲜事物。<br>7.我喜欢旅行，但不喜欢到达目的地。<br>8.把你的手放在滚热的炉子上一分钟，感觉起来像一小时。坐在一个漂亮姑娘身边整整一小时，感觉起来像一分钟。这就是相对论。<br>9.我从不去想未来。因为它来得已经够快的了。<br>10.Only two things are infinite, the universe and human stupidity, and I’m not sure about the universe. 有两种东西是无限的，宇宙和人类的愚蠢。 《翻译来自一张海报》<br>11.态度上的弱点会变成性格上的弱点。<br>12.成功＝艰苦劳动＋正确的方法＋少说空话。<br>13.世间最美好的东西，莫过于有几个头脑和心地都很正直的朋友。<br>14.人的成就和差异决定于其业余时间。<br>15.我不知道第三次世界大战会用哪些武器，但第四次世界大战中人们肯定用的是木棍和石块。<br>16.一个人最高的本领就是适应客观世界的能力。<br>17.天才和愚蠢之间的区别就是天才是有极限的。<br>18.要打破人的偏见比崩解一个原子还难。<br>19.这世界不会被那些作恶多端的人毁灭，而是冷眼旁观、选择保持缄默的人。<br>20.并不是我很聪明，而只是我和问题相处得比较久一点。<br>21.不要抱怨生活，那只能说明你的无能。强者从来不抱怨生活。<br>22.为了惩罚我对权威的蔑视，命运把我自己变成了一个权威. 《爱因斯坦：生活和宇宙》<br>23.没有侥幸这回事，最偶然的意外，似乎也都是事有必然的。 《教育论》<br>24.常识就是人到十八岁为止所累积的各种偏见。<br>25.想像力比知识更重要。因为知识是有限的，而想像力是无限,它包含了一切,推动着进步,是人类进化的源泉。<br>26.道德毫无神圣之处，它纯粹只是人之常情。<br>27.逻辑会把你从A带到B，想象力能带你去任何地方。<br>28.如果你不能简单说清楚，就是你没完全明白。<br>原文：If you can’t explain it simply, you don’t understand it well enough.<br>29.万有引力可无法对坠入爱河的人负责。<br>30.用一个大圆圈代表我学到的知识，但是圆圈之外是那么多的空白，对我来说就意味着无知。而且圆圈越大，它的圆周就越长，它与外界空白的接触面也就越大。由此可见，我感到不懂的地方还大得很呢！ 《获奖致辞》<br>31.精神错乱：一遍又一遍地重复作同一件事，而期待会有不同的结果。<br>32.生命会给你所要的东西，只要你不断地向它要，只要你在要的时候讲得清楚。<br>33.在天才和勤奋之间，我毫不犹豫地选择后者。她几乎是世界上一切成就的催产婆。<br>34.人的差异产生于业余时间。业余时间能成就一个人，也能毁灭一个人。<br>35.”If at first the idea is not absurd, then there will be no hope for it.”- Albert Einstein。 如果一个想法一开始不荒谬，那么它就毫无希望。<br>36.一个人的价值,应当看他贡献什么,而不应当看他取得什么.<br>37.每个人都有一定的理想，这种理想决定着他的努力和判断的方向。就在这个意义上，我从来不把安逸和快乐看作生活目的的本身－－ 这种伦理基础，我叫它猪栏的理想。<br>38.一个人的真正价值首先决定于他在什么程度上和在什么意义上从自我解放出来。<br>39.人们都把我的成功归功于天才，其实我的天才只是刻苦而已。<br>40.真正有价值的是直觉。在探索的道路上智力无甚用处。<br>41.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高尚的品质，超脱时代和社会，走自己正确的道路。现在，大家都为了电冰箱、汽车、房子而奔波、追逐、竞争。这就是我们这个时代的特征了。但是也还有不少人，他们不追求这些物质的东西，他们追求理想和真理，得到了内心的自由和安宁。<br>42.独立思考和独立判断的一般能力，应当始终放在首位。<br>43.苦和甜来自外界，坚强则来自内心，来自一个人的自我努力。<br>44.提出一个问题往往比解决一个问题更重要<br>45.人生就像骑单车。想保持平衡就得往前走。<br>46.创新的秘密在于知道如何把你的智谋藏而不露。<br>47.The reason for time is so that everything doesn’t happen at once. 时间存在的意义就是任何事都不可能立刻实现<br>48.有一个现象的明显程度已经让我毛骨悚然，这便是我们的人性已经远远落后我们的科学技术了。<br>49.一个快乐的人总是满足于当下，而不太浪费时间去想未来的事。<br>50.耐心和恒心总会得到报酬的。<br>51.如果我的相对论被证明是正确的，德国人就会说我是德国人，法国佬会说我是一个世界公民。如果我的相对论被否定了，法国佬就会骂我德国鬼子，而德国人就会把我归为犹太人。<br>52.如果A代表一个人的成功，那么A等于x加y加z。勤奋工作是x；y是玩耍，而z是把嘴闭上。<br>53.莫扎特从不为永恒作曲，但是正因为这个理由，所以他的许多作品均是永恒的。<br>54.爱因斯坦曾说过，“每个人都身怀天赋”，如此说来，若单用爬树的能力来评判一只鱼，那便是愚蠢<br>55.对一切来说，只有热爱才是最好的老师，它远远胜过责任感。 To All, only love is the best teacher, it is far better than the responsibility.<br>56.一切都应该尽可能地简单，但不要太简单。<br>57.Reality is merely an illusion,albeit a very persistent one. 现实只是一抹幻影，尽管它从不消散。《犯罪心理》<br>58.无论什么时候，就当自己生活在火星吧，周围全是陌生的怪物，对怪物的行为无需产生浓厚的兴趣。<br>59.有时候一个人为不花钱得到的东西付出的代价最高。《教育论》<br>60.凡在小事上对真理持轻率态度的人，在大事上也是不可信任的。<br>61.“我从来不记忆和思考那些词典、手册里的东西，我的脑袋只用来记忆和思考那些还没有载入书本的东西。” 《口述》<br>62.只要你有一件合理的事去做，你的生活就会显得特别美好。<br>63.世界上最让我难以理解的就是所得税。<br>64.Try not to become a man of success but rather try to become a man of value. —— A. Einstein 不要为成功而努力，要为做一个有价值的人而努力。<br>65.我们一来到世间，社会就在我们面前树起了一个巨大的问号：你怎样度过自己的一生。<br>66.所谓现实只不过是一个错觉，虽然这个错觉非常持久。<br>67.我们不能用制造问题时的同一水平思维来解决问题。<br>68.“学校的目标应当是培养有独立行动和独立思考的个人，不过他们要把为社会服务看作是自己人生的最高目标。”<br>69.不要担心你在数学上遇到的困难；我敢保证我遇到的困难比你还大得多。<br>70.学习知识要善于思考，思考，再思考。我就是靠这个方法成为科学家的。<br>71.最好把一个人的爱好和职业尽可能远的分开。把一个的生计所在和上帝所赐的秉赋硬凑在一起，那是不明智的。<br>72.真理就是在经验面前站得住脚的东西。<br>73.使学生对教师尊敬的惟一源泉在于教师的德和才。<br>74.宇宙中唯有两件事物是无限的：那就是宇宙的大小与人的愚蠢。而宇宙的大小我却不能肯定。<br>75.科学没有宗教是瘸子，宗教没有科学是瞎子。<br>76.不要试图去做一个成功的人，要努力成为一个有价值的人。<br>77.宇宙中最不能理解的事情是，宇宙是可以被理解的。<br>78.把人们引向艺术和科学的最强烈的动机之一，是要逃避日常生活中令人厌恶的粗俗和使人绝望的沉闷，是要摆脱人们自己反复无常的欲望的桎梏。一个修养有素的人总是渴望逃避个人生活而进入客观知觉和思维的世界。《普朗克文集科学往何处去？的序言》<br>79.巧合是上帝保持匿名的方式。<br>80.在一个崇高的目的的支持下，不停地工作。即使慢，也一定会获得成功。<br>81.人只有献身于社会，才能找出那短暂而有风险的生命的意义。<br>82.我从来不把安逸和享乐看作是生活的目的——这种理论，我把它叫做猪栏式的理想。<br>83.上帝难以捉摸，但并不心怀恶意。<br>84.我评定一个人的真正的价值只有一个标准，即：看他在多大程度上摆脱了“自我”，他摆脱了“自我”，又是为什么。<br>85.婚姻的确是披着文明外衣的奴隶制。《爱因斯坦语录》<br>86.当我们的知识之圆扩大之时，我们所面临的未知的圆周也一样。<br>87.武力不能维持和平。只有互相理解才可以。<br>88.哲学、艺术和科学，其目的都是为了让人类的生活趋向高深，使它从单纯的生理存在中升华，并把个人引向自由。<br>89.我没有什么特殊的才能，不过是喜欢寻根刨底地追究问题罢了<br>90.我从不想未来，它来得太快。<br>91.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高贵的品质，超脱时代和社会，走自己正确的道路。<br>92.提出一个问题往往比解决一个问题更重要，因为解决问题也许仅是一个数学上或实验上的技能而已。而提出新的问题新的可能性，从新的角度去看旧的问题，都需要有创造性的想象力，而且标志着科学的真正进步。<br>93.世间最好的东西，莫过于有几个头脑和心地都很正直的严正的朋友。<br>94.我每天提醒自己一百遍，我的生活，不管内在或是外在，都是以他人（包括活着的和逝去的）努力的成果为基础。所以我必须尽力奉献自己，希望能以同等的贡献，来回报长久以来从他人身上所获得的一切。<br>95.任何物体以光速运动时，其长度将会缩短为零。<br>96.人做事如果要成功，在之前必须脑海中有画面。<br>97.任何天才不能在孤独的状态中发展。<br>98.创新不是由逻辑思维带来的，尽管最后的产物有赖于一个符合逻辑的结构。<br>99.人是为别人而生存的——首先是为那样一些人，他们的喜悦和健康关系着我们自己全部的幸福，然而是为许多我们所不认识的人，他们的命运通过同情的纽带同我们密切结合在一起。我每天上百次地提醒自己，我的精神生活和物质生活都依靠着别人（包括活着的和死去的）的劳动，我必须尽力以同样的分量来报偿我所领受了的和至今还在领受着的东西。我强烈地向往着俭朴的生活，并且常为发觉自己占有了同胞过多的劳动而难以忍受。<br>100.我不信仰一个人格化的神。<br>101.在真理和认识方面，任何以权威者自居的人，必将在上帝的戏笑中垮台！<br>102.很少人是用自己的眼睛去看，和用自己的心去感觉的。<br>103.我害怕有一天，科技会取代人与人之间的交流，我们的世界将会充斥着一群白痴<br>104.量子力学的确让人印象深刻。但是我的内心却有一个声音告诉我，它还不是正确的理论。这个理论是说了很多，但它并没有引领我们更接近上帝的秘密。我，无论如何，深信上帝不掷骰子。<br>105.在科学上，每一条道路都应该走一走，发现一条走不通的道路，就是对科学的一大贡献。那种证明“此路不通”的吃力不讨好的工作，就让我来做吧！<br>106.我们的科学史，只写某人某人取得成功，在成功者之前探索道路的，发现“此路不通”的失败者统统不写，这是很不公平的。<br>107.对于我来说，生命的意义在于设身处地替别人着想，忧他人之忧，乐他人之乐。<br>108.真正使我感兴趣的是上帝创造世界的时候有没有别的方案可选<br>109.在上帝面前，我们都一样聪明——也都一样愚蠢。<br>110.旦我们接受了自己的限制， 我们就超越它们了！ Once we accept our limits, we go beyond them.<br>111.任何一个有智力的笨蛋都可以把事情搞得更大，更复杂，也更激烈。往相反的方向前进则需要天份，以及很大的勇气。<br>112.有两种看待人生的方式， 一种是生活不存在奇迹， 另一种则是， 所有的一切都是奇迹。<br>113.有一种无穷无尽的能量源，迄今为止科学都没有对他找到一个合理的解释。这是一种生命力，包含并统领所有其它的一切。而且在任何宇宙的运行现象之后，甚至还没有被我们定义。这种生命力叫“爱”。<br>114.人所具备的智力仅够使自己清楚地认识到，在大自然面前自己的智力是何等的欠缺。如果这种谦卑精神能为世人所共有，那么人类活动的世界就会更加具有吸引力。<br>115.我想知道上帝的构思；其他的都只是细节。<br>116.倘若A代表人生的成功，那么公式是：A=X+Y+Z。X是工作，Y是游戏，Z是保持缄默。<br>117.我认为只有大胆的臆测，而不是事实的积累，才能引领我们往前迈进。<br>118.我绝对相信，在这个世界上，财富绝不能使人类进步。<br>119.只有利他的生活才是值得过的生活。<br>120.幸福来自于有目标的生活，而不是来自他人或物质。<br>121.我实在是一个“孤独的旅客”，我未曾全心全意地属于我的国家，我的家庭，我的朋友，甚至我最接近的亲人；在所有这些关系面前，我总是感觉到有一定距离并且需要保持孤独——而这种感受正与年俱增。人们会清楚地发觉，同别人的相互了解和协调一致是有限度的，但这不足惋惜。这样的人无疑有点失去他的天真无邪和无忧无虑的心境；但另一方面，他却能够在很大程度上不为别人的意见、习惯和判断所左右，并且能够不受诱惑要去把他的内心平衡建立在这样一些不可靠的基础之上。<br>122.不进行调查就谴责，那是最高的无知。<br>123.情感和愿望是人类一切努力和创造背后的动力，不管呈现在我们面前的这种努力和创造外表上是多么高超。<br>124.人们所努力追求的庸俗的目标——财产、虚荣、奢侈的生活——我总觉得都是可鄙的。<br>125.对一个人来说，所期望的不是别的，而仅仅是他能全力以赴和献身于一种美好事业。<br>126.Everyone is a genius. But if you judge a fish by its ability to climb a tree, it will spend its whole life believing it is stupid. 每个人都是天才。但如果硬要以鱼儿爬树的本领，来评估它的能力，它这辈子都会觉得自己是条蠢鱼。<br>127.有些理想曾为我们引过道路，并不断给我新的勇气以欣然面对人生，那些理想就是——真、善、美。<br>128.小事小节斤斤计较而淡漠大事、大节的人是不会有什么作为的。我从来不把安逸和快乐看作是生活目的本身—–这种伦理基础，我叫它猪栏的理想。<br>129.科学的全部不过就是日常思考的提炼。<br>130.世界上，宇宙中，有多少难解的谜啊……还是抓紧时间工作吧！<br>131.等你们六十岁的时候，你们就会珍惜由你们支配的每一个钟头了。<br>132.所有的宗教、艺术和科学，都是生长在同一棵树上的枝叶。人类对这三方面的追求，都是为了使生命从单纯的物质世界里提升，而达到自由。<br>133.若无某种大胆放肆的猜想，一般是不可能有知识的进展的。<br>134.我生平喜欢步行，运动给我带来了无穷的乐趣。<br>135.凡在小事上对真理持轻率态度的人，在大事上也是不足信的。<br>136.科学研究能破除迷信，因为它鼓励人们根据因果关系来思考和观察事物。<br>137.雄心壮志或单纯的责任感不会产生任何真正有价值的东西，只有对于人类和对于客观事物的热爱与献身精神，才能产生真正有价值的东西。<br>138.Great spirits have often encountered violent opposition from weaker minds. 伟大的思想经常会受懦弱世俗的强烈反对<br>139.法律本身并不能保证言论自由；要做到这一点，必需要所有的人都有着包容的心。<br>140.是鸡过了马路还是马路过了鸡取决于你的参考系。<br>141.为了让爱能够清晰可见，我用最著名的方程式做了个简单的替代法。如果不是E=mc²，我们接受治愈世界的能量可通过爱乘以光速的平方来获得，我们就得出一个结论：爱是最强大的的力量，因为爱没有限制。<br>142.You never fail until you stop trying. 只要你不放弃尝试，就永远不会失败。<br>143.爱因斯坦说：有些人认为宗教不合乎科学道理。我是一位研究科学的人，我深切知道，今天的科学，只能证明某种物体存在，而不能证明某种物体不存在。<br>144.方程式对我更重要，因为政治只看眼前，而方程式是永恒的。<br>145.宇宙中一切物质都不存在，唯有精神永恒！<br>146.只有为别人而活的生命才是值得的。<br>147.在科学思维中常常伴着诗的因素，真正的科学和真正的音乐要求同样的想象过程。<br>148.如果我给你一个芬尼，你的财富增长而我的财富缩减，幅度都是一个芬尼。但如果我给你一点想法，尽管你有了新的想法，我却并没损失什么。<br>149.科学的不朽荣誉，在于它通过对人类心灵的作用，克服了人们在自己面前和在自然界面前的不安全感。<br>150.不管时代的潮流和社会的风尚怎样，人总可以凭着自己高贵的品质，超脱时代和社会，走自己正确的道路。现在，大家都为了电冰箱、汽车、房子而奔波、追逐、竞争。这是我们这个时代的特征了。但是也有不少人，他们不追求这些物质的东西，他们追求理想和真理，得到了内心的自由和安宁。<br>151.恶是一种失去善的状态，暗是一种失去光的状态，死是一种失去生的状态……<br>152.在一个崇高的目标支持下，不停地工作，即使慢，也一定会获得成功<br>153.推动你的事业，不要让你的事业推动你。<br>154.要追究一个人自己或一切生物生存的意义或目的，从客观的观点来看，我总觉得是愚蠢可笑的。可是每个人都有一定的理想，这种理想决定着他的努力和判断的方向。就在这个意义上，我从来不把安逸和享乐看作是生活目的本身———这种伦理基础，我叫它猪栏的理想。照亮我的道路，并且不断地给我新的勇气去愉快地正视生活的理想，是善、美和真。要是没有志同道合者之间的亲切感情，要不是全神贯注于客观世界———那个在艺术和科学工作领域里永远达不到的对象，那末在我看来，生活就会是空虚的。人们所努力追求的庸俗的目标———财产、虚荣、奢侈的生活———我总觉得都是可鄙的。”<br>155.不要为成功而努力，要为作一个有价值的人而努力。<br>156.照亮我的道路，并且不断地给我新的勇气去愉快地正视生活的理想，是善、美和真。要是没有志同道合者之间的亲切感情，要不是全神贯注于客观世界——那个在艺术和科学工作领域里永远达不到的对象，那末在我看来，生活就会是空虚的。人们所努力追求的庸俗的目标——财产、虚荣、奢侈的生活——我总觉得都是可鄙的。<br>157.过去、现在、和未来的区别只是执着的幻觉。<br>158.凡是对人类生活提高最有贡献的人，应当是最受爱戴的人，这在原则上是对的。但是如果要求别人承认自己比同伴或者同学更高更强，或者更有才智，那就容易在心理上产生惟我独尊的态度，这无论对个人对社会都是有害的。<br>159.想像力比知识更重要，因为知识是有限的，而想像力概括着世界上的一切，推动着进步，并且是知识进步的源泉。<br>160.在一个崇高的目的支持下，不停地工作，即使慢、也一定会获得成功。<br>161.一个人对社会的价值首先取决于他的感情、思想和行动对增进人类利益有多大作用。《爱因斯坦文集》<br>162.I know not with what weapons World War III will be fought, but World War IV will be fought with sticks and stones。 我不知道第三次世界大战会使用什么样的武器，但是我知道第四次世界大战会使用木棍和石块<br>163.爱为学问之始<br>164.上帝不掷骰子。<br>165.如果给我1个小时解答一道决定我生死的问题，我会花55分钟弄清楚这道题到底在问什么。一旦清楚它到底在问什么，剩下的5分钟足够回答这个问题。<br>166.“真理不在你的眼睛里，只存在于你的心智里。”人们眼中的世界只是有限时空中低级感官的特殊映像，而不是本来的真实世界。“物理学是从概念上掌握实在的一种努力，至于实在是否被观察，则被认为是无关的。”“实证论者声称：凡是不能观察到的，都是不存在的。很显然这种观点在科学上是占不住脚的。倒是必须说：只有我们观察到的东西才是存在的。这种说法显然也是错误的，因为可观察的世界并不’存在’。认为我们知觉到这个世界，那是幻想。我们所观察到的不是真实的世界。世界并不是由我们的感觉给予我们的，我们看到的只是宇宙的假象，时空的错觉。”“现实即幻象，只不过比较稳定罢了。”<br>167.我的每一项发现都不是通过理性思考获得的，不，是通过进入一种觉知和意识，而不是通过低级白痴的理性思考。<br>168.每一个有良好愿望的人的责任，就是要尽其所能，在他自己的小天地里做坚定的努力，使纯粹人性的教义，成为一种有生命的力量。如果他们在这方面，作了一番忠诚的努力，而没有被他同时代的人践踏在脚下，那么，他可以认为他自己和他个人处的社会都是幸福的了。<br>169.在天才和勤奋两者之间，我毫不迟疑地选择勤奋，她是几乎世界上一切成就的催产婆。<br>170.想象比知识更重要。你的 头脑是你最有用的资产，但如果使用不 当，它会是你最大的负债。<br>171.你要知道科学方法的实质，不要去听一个科学家对你说些什么，而要仔细看他在做什么。<br>172.爱因斯坦的一封信：<br>“我们这个时代诞生了许多天才的人物，他们的发明可以使我们的生活更加的便捷。我们已经可以利用机械横跨海洋，还使人类从各种辛苦繁重的体力劳动中最后解脱出来。我们已经学会了飞行，用电磁波从地球的一个角落与另一个角落传递信息，方便的沟通。然而，商品的生产和分配却是无序的，使每个人都生活在恐惧的阴影里，生怕失业而导致贫困潦倒。同时，生活在不同国家里的人民还经常互相残杀。由于这些原因，所有的人对未来充满了恐惧。所有这一切，都是由于大多数人的才智和品格，较之那些对社会产生真正价值的少数人的才智和品格来，是无比的低下。”<br>173.态度上的弱点会变成性格上的弱点。所谓有一定的见识或修养的人，通常都是能够注意或掌握自己态度的人。<br>174.上帝不为我们那些数学难题而费心。祂信手拈来，将万物合一。<br>175.在科学上，每一条道路都应该走一走。发现一条走不通的道路，就是对于科学的一大贡献。<br>176.如果你无法简单地解释，就说明你没有理解透彻。<br>177.一个人的真正价值首先决定于他在什么程度上和什么意义上从自我解放出来。<br>178.我们所经历的最美妙的事情就是神秘。<br>179.追求真理比占有真理更加难能可贵。<br>180.踩着别人脚步走路的人，永远不会留下自己的脚印。<br>181.一个人在科学探索的道路上，走过弯路，犯过错误，并不是坏事，更不是什么耻辱，要在实践中勇于承认和改正错误。<br>182.在所阅读的书本中找出可以把自己引到深处的东西，而把其他一切抛掉，就是抛掉使头脑负担过重并会使自己远离要点的一切。有舍才能有得，轻装才能高速前进。<br>183.为了惩罚我蔑视权威，命运也将我变成了一个权威。<br>184.生命会给你所需要的东西，只要你不断地向它要，只要你在向它要地时候说得一清二楚。<br>185.一再做重复的事而期待会有不同的结果，完全是发疯最明显的征兆。<br>186.虽然我一直因为外界环境的限制，不能成为一名严格的素食者，但我一直坚持着这个原则。在我看来，除了赞同为了审美和道德的目标而素食外，素食者的生活方式，纯粹在物质上对人的性情的影响来看，就能极有益地改变全人类的命运。《The Expanded Quotable Einstein》<br>187.“我确实相信：在我们的教育中，往往只是为着实用和实际的目的，过分强调单纯智育的态度，已经直接导致对伦理教育的损害。”<br>188.在我看来，现在有许多人—甚至包括科学家—似乎都只是见树不见林。关于历史与哲学背景的知识，可以提供给那些大部份正受到当代偏颇观念所左右的科学家们一种不随波逐流的独立性。这种由哲学的洞察力所创造的独立性，依我来看，正是一个工匠或专家，与一个真正的真理追寻者之间，最大的区别。<br>189.你们只懂得应用科学本身是不够的。关心人的本身，应当始终成为一切技术上奋斗的主要目标;关心怎样组织人的劳动和产品分配这样一些尚未解决的重大问题，用以保证我们科学思想的成果会造福于人类,而不致成为祸害。在你们埋头于图标和方程时,千万不要忘记这一点! 《爱因斯坦文集》<br>190.成功＝艰苦劳动＋正确方法＋少说空话。<br>191.想像力比知识更重要，因为知识是有限的，而想像力概括着世界的一切，推动着进步，并且是知识进化的源泉。严格地说，想像力是科学研究的实在因素。<br>192.在混乱之中发现单纯。 《教育论》<br>193.有的放矢，带着问题学习的人，容易提出自己的见解，因为他对这个问题思索已久，脑海里储存了许多有关的信息，大有一触即发之势，易于发现并抓住自己所需的精华，从而解决问题。<br>194.这世界不会被那些作恶多端的人毁灭，而是冷眼旁观、选择保持缄默的人。 原文: The world will not be destroyed by those who do evil,but by those who watch them without doing anything.<br>195.由百折不挠的信念所支持的人的意志，比那些似乎是无敌的物质力量具有更大的威力。<br>196.我孤寂地生活着，年轻时痛苦万分，而在成熟之年里却甘之如饴。 《爱因斯坦晚年文集》<br>197.谁要是把自己标榜为真理和知识领域里的裁判官，他就会被神的笑声所覆灭。<br>198.大学培养的目标是独立思考的能力。<br>199.一个人从未犯错是因为他不曾尝试新鲜事物。——爱因斯坦</p>\n"},{"title":"爱因斯坦传摘录","date":"2022-12-10T02:31:32.000Z","_content":"一切概念背后都潜藏着一种统一性和简单性\n要为思想而思想，就像音乐一样！\n妻子是一种奢侈品，一个男人只有在生活宽裕之后才能负担得起。\n一定更很好的方法\n对吵吵闹闹无动于衷，而喜欢“专注于更安静对事情”\n沉闷神父\n不合群，容易发脾气\n系统化（确定支配系统对规律）的能力要远远超过他的“移情”（体察和在乎他人的感受）\n生活就像骑自行车，要想保持平衡就要不断运动。\n创造性与自由息息相关，亦可折射出时代的胜利与喧嚣。\n在所有的理论背后，包括相对论在内，都潜藏着一种对不变性、确定性和绝对性的追求。\n宇宙定律背后是一种和谐的实在，科学的目标就是去发现这种实在。\n他秉持着一种信念，这种信念闪现在他炯炯的目光之中，体现为那歌不会通过掷骰子让事情随机发生的上帝。\n将其奉为尘世中的圣徒。\n他是否有资格进入亚里士多德，伽利略，牛顿等人居住的神殿？\n其内心对大自然的安宁源于对大自然的敬畏和谦卑。\n他们甚至可以以业余爱好的身份涉足其中。\n应当多讲一些凭借性格和判断的独立性对人类有所贡献的人\n学生们的批评意见应当友好地加以斟酌，资料的积累不应当扼杀学生的独立性。\n数学是大自然用来描述奇迹的语言，所以他回想象方程是如何在实在中得到的表达的\n想象远比知识更重要\n放肆无礼万岁！\n为了惩罚我对权威的不敬，命运使我自己成了一个权威。\n他的成功源于对传统文化观念的质疑，对权威的挑战善于在他人不以为然的寻常事物中发现秘密。\n尊重自由的思想，自由的精神和自由的个体。\n培养个性很重要，因为只有个人才能提出新的思想。\n对自然和谐充敬畏的叛逆者，他将想象和智慧有机地结合起来。改变了我们对宇宙的理解。\n顶撞老师，不负从权威对权威的蔑视，使他很容易对一般人的看法提出质疑\n充满好奇心，去观察被认为是理所当然的日常现象\n当我们抓不住猎物时，就暂时称之为X，然后继续追赶、直至将其俘获。\n12岁的时候，我发现仅仅通过推理，而不借助任何外在经验的帮助，就可以找到真理，这使我激动不已。\n我越来越确信，大自然可以作为一种现对简单的数学结构而得到理解。\n伟哉，天文学！伟哉，他的成就者！伟哉，人的思想，你比人的眼睛看的更远更清！\n一切概念背后都潜藏着一种统一性和简单性。\n宗教倾向潜藏于人的一种模糊意识中，认为包括人在内的整个世界绝非一种偶然的游戏，而是受规律支配的产物、万事万物都有一个根本的理由。\n其结果就是一种真正狂热的自由思想。\n对任何一种权威的怀疑源出于一种经验、一种对任何特定的社会环境所深信不疑的东西的怀疑态度。这种态度再也没有离开过我。\n一个人能够洋洋自得地随着军乐队在队列里进行，单凭这一点就足以使我对他鄙夷不屑。他之所以长了一个大脑，知识出于误会。\n盲目地迷信权威是真理最大的敌人\n没有这种怀疑，他的思想就不可能如此独立，就不可能有足够的勇气去挑战业已确定的科学信念，从而给物理学带来革命。\n爱因斯坦喜欢站在群山之巅体验那种崇高的孤独感。\n甚至在喧闹的人群中，他也能独自做到沙发上，拿出笔和纸，将墨水瓶晃晃悠悠地搁在扶手上，专注地思考一个问题，周围的喧哗与其说是干扰了他，不如说激励了他。\n裴斯泰洛齐主张，应当让学生们一步步得出自己的结论，即从亲身观察开始，逐渐过渡到直觉，概念思维和视觉意象。甚至可以用这样的方法来学习——并且真正理解——数学和物理学的定律！机械的练习和背诵和填鸭式的教学都应当避免。\n独立的思考比迂腐的剥削更受重视，年轻人不是把教师当成权威人物，而是看做与学生一样的有独立个性的人。\n我清楚地认识到，强调自由行动和个体责任感的教育是多么优越与崇尚外在的权威的教育。\n视觉理解是教导如何正确判断事物的重要方法，也是唯一正确的方法\n必须把算术和语言的学习放到首位\n怎么会呢？它就在我的血液里。\n在爱因斯坦俏皮而讽刺的外表下面，隐藏着一个温柔的灵魂。\n即人应当将自己看作成一个世界共公民。\n但一想到把创造力话费在这些事情上，目的无非是要让实际的日常生活变得更加精致，让冷酷无情的资本变得更多，我就感到不可忍受。要为思想而思想，就想音乐一样\n我们对物理学的过去一清二楚、而对它的现在和未来却一无所知。\n爱因斯坦想来直来直去、丝毫不掩饰自己的感受\n爱因斯坦的科学和个人生活多么受制于哪个施瓦本灵魂深处的东西，即习惯与挑战权威，不服管制，对公认的观点缺乏尊重。\n一个流浪者和不合群的人\n","source":"_posts/ayst_2.md","raw":"---\ntitle: 爱因斯坦传摘录\ndate: 2022/12/10 10:31:32\ntags: [摘录]\n---\n一切概念背后都潜藏着一种统一性和简单性\n要为思想而思想，就像音乐一样！\n妻子是一种奢侈品，一个男人只有在生活宽裕之后才能负担得起。\n一定更很好的方法\n对吵吵闹闹无动于衷，而喜欢“专注于更安静对事情”\n沉闷神父\n不合群，容易发脾气\n系统化（确定支配系统对规律）的能力要远远超过他的“移情”（体察和在乎他人的感受）\n生活就像骑自行车，要想保持平衡就要不断运动。\n创造性与自由息息相关，亦可折射出时代的胜利与喧嚣。\n在所有的理论背后，包括相对论在内，都潜藏着一种对不变性、确定性和绝对性的追求。\n宇宙定律背后是一种和谐的实在，科学的目标就是去发现这种实在。\n他秉持着一种信念，这种信念闪现在他炯炯的目光之中，体现为那歌不会通过掷骰子让事情随机发生的上帝。\n将其奉为尘世中的圣徒。\n他是否有资格进入亚里士多德，伽利略，牛顿等人居住的神殿？\n其内心对大自然的安宁源于对大自然的敬畏和谦卑。\n他们甚至可以以业余爱好的身份涉足其中。\n应当多讲一些凭借性格和判断的独立性对人类有所贡献的人\n学生们的批评意见应当友好地加以斟酌，资料的积累不应当扼杀学生的独立性。\n数学是大自然用来描述奇迹的语言，所以他回想象方程是如何在实在中得到的表达的\n想象远比知识更重要\n放肆无礼万岁！\n为了惩罚我对权威的不敬，命运使我自己成了一个权威。\n他的成功源于对传统文化观念的质疑，对权威的挑战善于在他人不以为然的寻常事物中发现秘密。\n尊重自由的思想，自由的精神和自由的个体。\n培养个性很重要，因为只有个人才能提出新的思想。\n对自然和谐充敬畏的叛逆者，他将想象和智慧有机地结合起来。改变了我们对宇宙的理解。\n顶撞老师，不负从权威对权威的蔑视，使他很容易对一般人的看法提出质疑\n充满好奇心，去观察被认为是理所当然的日常现象\n当我们抓不住猎物时，就暂时称之为X，然后继续追赶、直至将其俘获。\n12岁的时候，我发现仅仅通过推理，而不借助任何外在经验的帮助，就可以找到真理，这使我激动不已。\n我越来越确信，大自然可以作为一种现对简单的数学结构而得到理解。\n伟哉，天文学！伟哉，他的成就者！伟哉，人的思想，你比人的眼睛看的更远更清！\n一切概念背后都潜藏着一种统一性和简单性。\n宗教倾向潜藏于人的一种模糊意识中，认为包括人在内的整个世界绝非一种偶然的游戏，而是受规律支配的产物、万事万物都有一个根本的理由。\n其结果就是一种真正狂热的自由思想。\n对任何一种权威的怀疑源出于一种经验、一种对任何特定的社会环境所深信不疑的东西的怀疑态度。这种态度再也没有离开过我。\n一个人能够洋洋自得地随着军乐队在队列里进行，单凭这一点就足以使我对他鄙夷不屑。他之所以长了一个大脑，知识出于误会。\n盲目地迷信权威是真理最大的敌人\n没有这种怀疑，他的思想就不可能如此独立，就不可能有足够的勇气去挑战业已确定的科学信念，从而给物理学带来革命。\n爱因斯坦喜欢站在群山之巅体验那种崇高的孤独感。\n甚至在喧闹的人群中，他也能独自做到沙发上，拿出笔和纸，将墨水瓶晃晃悠悠地搁在扶手上，专注地思考一个问题，周围的喧哗与其说是干扰了他，不如说激励了他。\n裴斯泰洛齐主张，应当让学生们一步步得出自己的结论，即从亲身观察开始，逐渐过渡到直觉，概念思维和视觉意象。甚至可以用这样的方法来学习——并且真正理解——数学和物理学的定律！机械的练习和背诵和填鸭式的教学都应当避免。\n独立的思考比迂腐的剥削更受重视，年轻人不是把教师当成权威人物，而是看做与学生一样的有独立个性的人。\n我清楚地认识到，强调自由行动和个体责任感的教育是多么优越与崇尚外在的权威的教育。\n视觉理解是教导如何正确判断事物的重要方法，也是唯一正确的方法\n必须把算术和语言的学习放到首位\n怎么会呢？它就在我的血液里。\n在爱因斯坦俏皮而讽刺的外表下面，隐藏着一个温柔的灵魂。\n即人应当将自己看作成一个世界共公民。\n但一想到把创造力话费在这些事情上，目的无非是要让实际的日常生活变得更加精致，让冷酷无情的资本变得更多，我就感到不可忍受。要为思想而思想，就想音乐一样\n我们对物理学的过去一清二楚、而对它的现在和未来却一无所知。\n爱因斯坦想来直来直去、丝毫不掩饰自己的感受\n爱因斯坦的科学和个人生活多么受制于哪个施瓦本灵魂深处的东西，即习惯与挑战权威，不服管制，对公认的观点缺乏尊重。\n一个流浪者和不合群的人\n","slug":"ayst_2","published":1,"updated":"2022-12-10T02:36:12.592Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8y0012u19k05eoe9fc","content":"<p>一切概念背后都潜藏着一种统一性和简单性<br>要为思想而思想，就像音乐一样！<br>妻子是一种奢侈品，一个男人只有在生活宽裕之后才能负担得起。<br>一定更很好的方法<br>对吵吵闹闹无动于衷，而喜欢“专注于更安静对事情”<br>沉闷神父<br>不合群，容易发脾气<br>系统化（确定支配系统对规律）的能力要远远超过他的“移情”（体察和在乎他人的感受）<br>生活就像骑自行车，要想保持平衡就要不断运动。<br>创造性与自由息息相关，亦可折射出时代的胜利与喧嚣。<br>在所有的理论背后，包括相对论在内，都潜藏着一种对不变性、确定性和绝对性的追求。<br>宇宙定律背后是一种和谐的实在，科学的目标就是去发现这种实在。<br>他秉持着一种信念，这种信念闪现在他炯炯的目光之中，体现为那歌不会通过掷骰子让事情随机发生的上帝。<br>将其奉为尘世中的圣徒。<br>他是否有资格进入亚里士多德，伽利略，牛顿等人居住的神殿？<br>其内心对大自然的安宁源于对大自然的敬畏和谦卑。<br>他们甚至可以以业余爱好的身份涉足其中。<br>应当多讲一些凭借性格和判断的独立性对人类有所贡献的人<br>学生们的批评意见应当友好地加以斟酌，资料的积累不应当扼杀学生的独立性。<br>数学是大自然用来描述奇迹的语言，所以他回想象方程是如何在实在中得到的表达的<br>想象远比知识更重要<br>放肆无礼万岁！<br>为了惩罚我对权威的不敬，命运使我自己成了一个权威。<br>他的成功源于对传统文化观念的质疑，对权威的挑战善于在他人不以为然的寻常事物中发现秘密。<br>尊重自由的思想，自由的精神和自由的个体。<br>培养个性很重要，因为只有个人才能提出新的思想。<br>对自然和谐充敬畏的叛逆者，他将想象和智慧有机地结合起来。改变了我们对宇宙的理解。<br>顶撞老师，不负从权威对权威的蔑视，使他很容易对一般人的看法提出质疑<br>充满好奇心，去观察被认为是理所当然的日常现象<br>当我们抓不住猎物时，就暂时称之为X，然后继续追赶、直至将其俘获。<br>12岁的时候，我发现仅仅通过推理，而不借助任何外在经验的帮助，就可以找到真理，这使我激动不已。<br>我越来越确信，大自然可以作为一种现对简单的数学结构而得到理解。<br>伟哉，天文学！伟哉，他的成就者！伟哉，人的思想，你比人的眼睛看的更远更清！<br>一切概念背后都潜藏着一种统一性和简单性。<br>宗教倾向潜藏于人的一种模糊意识中，认为包括人在内的整个世界绝非一种偶然的游戏，而是受规律支配的产物、万事万物都有一个根本的理由。<br>其结果就是一种真正狂热的自由思想。<br>对任何一种权威的怀疑源出于一种经验、一种对任何特定的社会环境所深信不疑的东西的怀疑态度。这种态度再也没有离开过我。<br>一个人能够洋洋自得地随着军乐队在队列里进行，单凭这一点就足以使我对他鄙夷不屑。他之所以长了一个大脑，知识出于误会。<br>盲目地迷信权威是真理最大的敌人<br>没有这种怀疑，他的思想就不可能如此独立，就不可能有足够的勇气去挑战业已确定的科学信念，从而给物理学带来革命。<br>爱因斯坦喜欢站在群山之巅体验那种崇高的孤独感。<br>甚至在喧闹的人群中，他也能独自做到沙发上，拿出笔和纸，将墨水瓶晃晃悠悠地搁在扶手上，专注地思考一个问题，周围的喧哗与其说是干扰了他，不如说激励了他。<br>裴斯泰洛齐主张，应当让学生们一步步得出自己的结论，即从亲身观察开始，逐渐过渡到直觉，概念思维和视觉意象。甚至可以用这样的方法来学习——并且真正理解——数学和物理学的定律！机械的练习和背诵和填鸭式的教学都应当避免。<br>独立的思考比迂腐的剥削更受重视，年轻人不是把教师当成权威人物，而是看做与学生一样的有独立个性的人。<br>我清楚地认识到，强调自由行动和个体责任感的教育是多么优越与崇尚外在的权威的教育。<br>视觉理解是教导如何正确判断事物的重要方法，也是唯一正确的方法<br>必须把算术和语言的学习放到首位<br>怎么会呢？它就在我的血液里。<br>在爱因斯坦俏皮而讽刺的外表下面，隐藏着一个温柔的灵魂。<br>即人应当将自己看作成一个世界共公民。<br>但一想到把创造力话费在这些事情上，目的无非是要让实际的日常生活变得更加精致，让冷酷无情的资本变得更多，我就感到不可忍受。要为思想而思想，就想音乐一样<br>我们对物理学的过去一清二楚、而对它的现在和未来却一无所知。<br>爱因斯坦想来直来直去、丝毫不掩饰自己的感受<br>爱因斯坦的科学和个人生活多么受制于哪个施瓦本灵魂深处的东西，即习惯与挑战权威，不服管制，对公认的观点缺乏尊重。<br>一个流浪者和不合群的人</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<p>一切概念背后都潜藏着一种统一性和简单性<br>要为思想而思想，就像音乐一样！<br>妻子是一种奢侈品，一个男人只有在生活宽裕之后才能负担得起。<br>一定更很好的方法<br>对吵吵闹闹无动于衷，而喜欢“专注于更安静对事情”<br>沉闷神父<br>不合群，容易发脾气<br>系统化（确定支配系统对规律）的能力要远远超过他的“移情”（体察和在乎他人的感受）<br>生活就像骑自行车，要想保持平衡就要不断运动。<br>创造性与自由息息相关，亦可折射出时代的胜利与喧嚣。<br>在所有的理论背后，包括相对论在内，都潜藏着一种对不变性、确定性和绝对性的追求。<br>宇宙定律背后是一种和谐的实在，科学的目标就是去发现这种实在。<br>他秉持着一种信念，这种信念闪现在他炯炯的目光之中，体现为那歌不会通过掷骰子让事情随机发生的上帝。<br>将其奉为尘世中的圣徒。<br>他是否有资格进入亚里士多德，伽利略，牛顿等人居住的神殿？<br>其内心对大自然的安宁源于对大自然的敬畏和谦卑。<br>他们甚至可以以业余爱好的身份涉足其中。<br>应当多讲一些凭借性格和判断的独立性对人类有所贡献的人<br>学生们的批评意见应当友好地加以斟酌，资料的积累不应当扼杀学生的独立性。<br>数学是大自然用来描述奇迹的语言，所以他回想象方程是如何在实在中得到的表达的<br>想象远比知识更重要<br>放肆无礼万岁！<br>为了惩罚我对权威的不敬，命运使我自己成了一个权威。<br>他的成功源于对传统文化观念的质疑，对权威的挑战善于在他人不以为然的寻常事物中发现秘密。<br>尊重自由的思想，自由的精神和自由的个体。<br>培养个性很重要，因为只有个人才能提出新的思想。<br>对自然和谐充敬畏的叛逆者，他将想象和智慧有机地结合起来。改变了我们对宇宙的理解。<br>顶撞老师，不负从权威对权威的蔑视，使他很容易对一般人的看法提出质疑<br>充满好奇心，去观察被认为是理所当然的日常现象<br>当我们抓不住猎物时，就暂时称之为X，然后继续追赶、直至将其俘获。<br>12岁的时候，我发现仅仅通过推理，而不借助任何外在经验的帮助，就可以找到真理，这使我激动不已。<br>我越来越确信，大自然可以作为一种现对简单的数学结构而得到理解。<br>伟哉，天文学！伟哉，他的成就者！伟哉，人的思想，你比人的眼睛看的更远更清！<br>一切概念背后都潜藏着一种统一性和简单性。<br>宗教倾向潜藏于人的一种模糊意识中，认为包括人在内的整个世界绝非一种偶然的游戏，而是受规律支配的产物、万事万物都有一个根本的理由。<br>其结果就是一种真正狂热的自由思想。<br>对任何一种权威的怀疑源出于一种经验、一种对任何特定的社会环境所深信不疑的东西的怀疑态度。这种态度再也没有离开过我。<br>一个人能够洋洋自得地随着军乐队在队列里进行，单凭这一点就足以使我对他鄙夷不屑。他之所以长了一个大脑，知识出于误会。<br>盲目地迷信权威是真理最大的敌人<br>没有这种怀疑，他的思想就不可能如此独立，就不可能有足够的勇气去挑战业已确定的科学信念，从而给物理学带来革命。<br>爱因斯坦喜欢站在群山之巅体验那种崇高的孤独感。<br>甚至在喧闹的人群中，他也能独自做到沙发上，拿出笔和纸，将墨水瓶晃晃悠悠地搁在扶手上，专注地思考一个问题，周围的喧哗与其说是干扰了他，不如说激励了他。<br>裴斯泰洛齐主张，应当让学生们一步步得出自己的结论，即从亲身观察开始，逐渐过渡到直觉，概念思维和视觉意象。甚至可以用这样的方法来学习——并且真正理解——数学和物理学的定律！机械的练习和背诵和填鸭式的教学都应当避免。<br>独立的思考比迂腐的剥削更受重视，年轻人不是把教师当成权威人物，而是看做与学生一样的有独立个性的人。<br>我清楚地认识到，强调自由行动和个体责任感的教育是多么优越与崇尚外在的权威的教育。<br>视觉理解是教导如何正确判断事物的重要方法，也是唯一正确的方法<br>必须把算术和语言的学习放到首位<br>怎么会呢？它就在我的血液里。<br>在爱因斯坦俏皮而讽刺的外表下面，隐藏着一个温柔的灵魂。<br>即人应当将自己看作成一个世界共公民。<br>但一想到把创造力话费在这些事情上，目的无非是要让实际的日常生活变得更加精致，让冷酷无情的资本变得更多，我就感到不可忍受。要为思想而思想，就想音乐一样<br>我们对物理学的过去一清二楚、而对它的现在和未来却一无所知。<br>爱因斯坦想来直来直去、丝毫不掩饰自己的感受<br>爱因斯坦的科学和个人生活多么受制于哪个施瓦本灵魂深处的东西，即习惯与挑战权威，不服管制，对公认的观点缺乏尊重。<br>一个流浪者和不合群的人</p>\n"},{"title":"费曼语录","date":"2022-12-09T23:30:32.000Z","_content":"我没有义务去成全别人对我的期望，我不必因为它们认为我能做得好就非得做很好，这样想我就会轻松一些，我对自己说，我过去没有干成惊天动地的事情，以后也不会做成什么大事\n所以我决定只为了取悦而去做事","source":"_posts/fm.md","raw":"---\ntitle: 费曼语录\ndate: 2022/12/10 07:30:32\ntags: [摘录]\n---\n我没有义务去成全别人对我的期望，我不必因为它们认为我能做得好就非得做很好，这样想我就会轻松一些，我对自己说，我过去没有干成惊天动地的事情，以后也不会做成什么大事\n所以我决定只为了取悦而去做事","slug":"fm","published":1,"updated":"2022-12-10T02:29:45.629Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva8z0015u19kcm21elbh","content":"<p>我没有义务去成全别人对我的期望，我不必因为它们认为我能做得好就非得做很好，这样想我就会轻松一些，我对自己说，我过去没有干成惊天动地的事情，以后也不会做成什么大事<br>所以我决定只为了取悦而去做事</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<p>我没有义务去成全别人对我的期望，我不必因为它们认为我能做得好就非得做很好，这样想我就会轻松一些，我对自己说，我过去没有干成惊天动地的事情，以后也不会做成什么大事<br>所以我决定只为了取悦而去做事</p>\n"},{"title":"乔布斯传摘录","date":"2022-12-10T03:20:32.000Z","_content":"他看到了一只小牛犊的出生，让他惊讶的是，这只小动物落地几分钟就挣扎着站起来开始走路。“着不是通过学习获得的技能，而是与生俱来的”他回忆说：人类的婴儿就没有这种能力。我觉得着很了不起，虽然别人都不这么想。”就好像是设计好的一样；动物身体里的某些东西和它大脑里的某些东西在他出生后立刻开始协同工作，而不需要去学习。\n他已经不再掩饰自己对权威的厌恶，他的态度结合了怪异而顽固的激情和超然的叛逆。“他经常一个人在角落里做自己的事情，压根儿不想跟或者班上的其他人有任何交流”\n我记得他告诉我，工程学是世界上最重要的\n去念斯坦福的人，他们已经知道自己想要什么了，他说：“他们一点儿艺术细胞都没有，我想要上的是更富有艺术性的，更有趣的学校”\n就如果过去所有我们在其中寻找神性的伟大宗教一样，那些古老的目标都隐喻着现在。\n我开始意识到；基于直觉的理解和意识，比抽象思维和逻辑分析更为重要。他后来说到\nTurn on,turn in,drop out\n擅长人文又能驾驭科学的人的重要性\n一个具有强烈个性的人身上集合了人文和科学的天赋后所能产生的那种创造力，我相信这种创造力也是在21世纪创立创新型经济的关键因素\n要么伤害过，遗弃过，抑或他人以其他方式记录过\n集中了一群极富想象力的设计师和大胆创新的工程师，他们能将他的设想发扬光大。\n将创造力与科技结合起来\n他们所做的并非是针对目标人群的普通产品改进，而是消费者还没有意识到需求的时候，就为其提供全新的设备和服务。\n他就像被恶魔驱使一样，可以让身边的人狂怒和绝望\n被遗弃，被选择，很特别。 我们是专门挑选你的\n把柜子和栅栏的背面制作好也十分重要，尽管这些地方人们看不到。“他喜欢最求完美，即使别人看不到的地方会很关心”\n我喜欢把很棒的设计和简便的功能融入产品中，而且不会太贵\n“我遭遇的是自己从未遇到过的另一种形式的权威，而且我不喜欢它。他们几乎都要制服我了，差一点而他们就要把我身上所有好奇心都赶走了”\n如果你提不起他的兴趣，那是你的错\n开始展现出性格多面性，敏感又偶尔迟钝，易怒而又超然，这也是他以后的生活状态\n让我感到震撼的是他的激情。他只要对一样东西感兴趣，就会把这种兴趣发挥到非理性的极致状态\n乔布斯熟练掌握了利用凝视和沉默来征服别的技巧\n他的招数之一就是死死盯着正在和他讲话的人。他会一直注视着对方的眼睛，然后问一个问题，要对方在不回避目光的情况下回答\n他极富魅力，他会骗人，可以让事态屈从于他的超强意志，他很机智，充满自信，还有一点儿独断专行。\n怎样让自己成为焦点，怎样销售产品，怎样与别人交往，怎样展现自我，怎样控制局面\n在一些碰巧跟人交流的场合，他会肆无忌惮地称别为“蠢货”，我那么耀眼的唯一原因就是，其他人都太糟糕了\n现实扭曲力场，如果你相信他，你就能做成事情，诺兰是不允许别对他说不的\n如果你表现得好像你能做某件事，那就能起作用，我告诉他，你装得好像自己掌控了一切，别人就会以为你真的掌控了一切。\n追求完美：即便是别看不到的地方，对其工艺也必须尽心尽力\n他的观念与我也十分一致，他强调说，你永远不该怀揣赚钱的目的去创办一家公司。你的目标应该是做出让你自己深信不疑的产品，创办一家生命很强的公司\n意志的力量可以改变现实\n我们运用我们运用思维，而他们运用直觉\n科特基说弗里德兰极富魅力，很会骗人，可以让事态屈从于他的超强意志，“他很机智，充满自信，还有一点儿独断专行”。科特基观察到，乔布斯跟弗里德兰在一起时间久了后，也变成了弗里德兰的样子。 “罗伯特教会了他怎样销售产品，怎样与别人交往，怎样展现自我，怎样控制局面。跟罗伯特相处一段时间后，乔布斯身上的羞涩开始逐渐褪去。”\n如果你把每一天都当作生命中最后一天去过，总有一天你会如愿以偿。\n你们的时间是有限的，所以不要浪费时间在活成别人的生命上。不要被教条主义所困，教条主义是仅仅活在别人的思考结果的人。不要让别人的意见淹没掉你自己内心的声音。要有勇气追随你自己的本心和直觉。他们已经知道你真正想成为什么样的人，其他事情都是次要的。\n时间有限，不要按照别人的意愿来活，这是浪费时间。\n不要囤于成见，那是为别人的设想而活。不要让他人的聒噪声淹没自己的心声。\n最重要的是，鼓起勇气，跟着自己的心和直觉前行。不管怎样，感觉和直觉早就知道你想成为什么样的人，其它都是次要的。\n我坚信唯一使我一直坚持下去的就是我对所做事情的无比热爱。所以你一定要清楚自己喜欢什么，选择爱人时如此，找寻工作时亦如此。\n唯一的不同就是处处不同\n正应为这种精神有人宁愿当诗人也不愿做银行家，\n有些时候，生活会拿起一块砖头猛拍向你的脑袋。不要失去信心。我很清楚唯一使我一直走下去的，就是我无比钟爱我做的事情。你得去找到你所爱的东西。\n我觉得优秀的同事都不是为了计算机而工作，而是因为计算机是传达某种情感的最佳媒介\n如果今天是我生命中的最后一天，你会不会完成你今天将要做的事情呢？”\n商业观点创新决定了你是领袖还是跟随者乔布斯的苹果禅乔布斯认为创新是无极限的，有限的是想象力。他认为，如果是一个成长性行业，创新就是要让产品使人更有效率，更容易使用，更容易用来工作。如果是一个萎缩的行业，创新就是要快速的从原有模式退出来，在产品及服务变得过时，不好用之前迅速改变自己。和最优秀的人一起工作乔布斯认为，一个创业公司的前十个员工决定了这个公司的水平，因为每个人都要能负担公司十分之一的工作。他也常用甲壳虫乐队做比喻团队的力量：没有一项主要工作可以由单独的一个，或者两个、三个、四个人来完成。为了把事请办好，工作不能仅仅由一个人完成，必须找到能力非凡的人来合作。最终把个体互动产生的力量汇总，这样整体的力量就会远远大于个体的力量的总和。注重质量乔布斯早期照片(23张)乔布斯是个完美主义者。他认为，完美的质量没有捷径，必须将优秀的质量定位给自己的承诺，并坚定不移的坚持下去。当对自己要求更高，并关注所有的细节后，产品就会和别人不一样。 [22]在产品中置入美学因素乔布斯深知美学的重要性。1998年，乔布斯意识到苹果产品看上去已经过时，乔布斯召开了苹果的一个会议，并提出了这样的问题——苹果产品的问题就是出在没有美学因素。了解消费者需求而不掌握消费者反馈意见乔布斯没有使用关注焦点人群的方案，相反，他告诉消费者，让消费者说出他们的需求。对此，市场研究机构Yankee Group的消费者研究部门负责人卡尔·霍威（Carl Howe）表示：苹果在了解用户需求方面表现很好连接关联事物苹果发布了自主创新的产品，但也整合了自己的理念。iPod与iTunes进行了完美的融合，iPad和iPhone也与应用商店进行很好地融合。乔布斯表示：创造力就是把所有相关的事物连接起来。 [23]不招聘俗套的员工苹果发布会上的乔布斯(32张)常春藤联盟的毕业生并非能够运营公司的唯一人选。乔布斯曾经宣称：能够让Macintosh成为伟大产品的部分因素就得益于从事此产品相关的工作人员都是音乐家、诗人以及艺术家等，甚至还有动物学家和历史学家，巧合的是，他们又是世界上最优秀的电脑科学家。鼓励其他人另类思考苹果“另类思考”广告活动开始于20世纪90年代末，此活动也一直是最有效的活动之一。而且这一活动还拉动了创新与创造，而这正是苹果的一切所在。不追求复杂简单就是快乐。苹果的设计师乔纳森·艾维（Jonathan Ives）对此战略证实称：苹果绝对是努力研发简单的应用方案，因为人们喜欢简单明了。出售梦想而非产品乔布斯让人们对苹果公司产生了这样的印象，即苹果打动消费者的不是其生产的产品本身，而是这些产品所代表的具体涵义。 [24]\n三要素共鸣：就是要紧密结合顾客的感受。“我们要比其他任何公司都要更好理解使用者的需求”专注：为了做好我们的决定做的事情，我们必须拒绝所有不重要的机会。第三点也是同样重要的一点原则，有一个让人困惑的措辞灌输：这涉及人们是佮根据一家公司或一个产品传达的信号，来形成对它的判断。“人们确实会以貌取人”，他写道“我们也许有最好的产品，最高的质量，最实用的软件等，如果我们用一中潦草马虎的方式来展示，顾客就会认为我们的产品也是潦草马虎的，如果我们以创新的，专业的方式展示产品，那么优秀的形象也会被灌输到客户的思想中。”\n","source":"_posts/jobs.md","raw":"---\ntitle: 乔布斯传摘录\ndate: 2022/12/10 11:20:32\ntags: [摘录]\n---\n他看到了一只小牛犊的出生，让他惊讶的是，这只小动物落地几分钟就挣扎着站起来开始走路。“着不是通过学习获得的技能，而是与生俱来的”他回忆说：人类的婴儿就没有这种能力。我觉得着很了不起，虽然别人都不这么想。”就好像是设计好的一样；动物身体里的某些东西和它大脑里的某些东西在他出生后立刻开始协同工作，而不需要去学习。\n他已经不再掩饰自己对权威的厌恶，他的态度结合了怪异而顽固的激情和超然的叛逆。“他经常一个人在角落里做自己的事情，压根儿不想跟或者班上的其他人有任何交流”\n我记得他告诉我，工程学是世界上最重要的\n去念斯坦福的人，他们已经知道自己想要什么了，他说：“他们一点儿艺术细胞都没有，我想要上的是更富有艺术性的，更有趣的学校”\n就如果过去所有我们在其中寻找神性的伟大宗教一样，那些古老的目标都隐喻着现在。\n我开始意识到；基于直觉的理解和意识，比抽象思维和逻辑分析更为重要。他后来说到\nTurn on,turn in,drop out\n擅长人文又能驾驭科学的人的重要性\n一个具有强烈个性的人身上集合了人文和科学的天赋后所能产生的那种创造力，我相信这种创造力也是在21世纪创立创新型经济的关键因素\n要么伤害过，遗弃过，抑或他人以其他方式记录过\n集中了一群极富想象力的设计师和大胆创新的工程师，他们能将他的设想发扬光大。\n将创造力与科技结合起来\n他们所做的并非是针对目标人群的普通产品改进，而是消费者还没有意识到需求的时候，就为其提供全新的设备和服务。\n他就像被恶魔驱使一样，可以让身边的人狂怒和绝望\n被遗弃，被选择，很特别。 我们是专门挑选你的\n把柜子和栅栏的背面制作好也十分重要，尽管这些地方人们看不到。“他喜欢最求完美，即使别人看不到的地方会很关心”\n我喜欢把很棒的设计和简便的功能融入产品中，而且不会太贵\n“我遭遇的是自己从未遇到过的另一种形式的权威，而且我不喜欢它。他们几乎都要制服我了，差一点而他们就要把我身上所有好奇心都赶走了”\n如果你提不起他的兴趣，那是你的错\n开始展现出性格多面性，敏感又偶尔迟钝，易怒而又超然，这也是他以后的生活状态\n让我感到震撼的是他的激情。他只要对一样东西感兴趣，就会把这种兴趣发挥到非理性的极致状态\n乔布斯熟练掌握了利用凝视和沉默来征服别的技巧\n他的招数之一就是死死盯着正在和他讲话的人。他会一直注视着对方的眼睛，然后问一个问题，要对方在不回避目光的情况下回答\n他极富魅力，他会骗人，可以让事态屈从于他的超强意志，他很机智，充满自信，还有一点儿独断专行。\n怎样让自己成为焦点，怎样销售产品，怎样与别人交往，怎样展现自我，怎样控制局面\n在一些碰巧跟人交流的场合，他会肆无忌惮地称别为“蠢货”，我那么耀眼的唯一原因就是，其他人都太糟糕了\n现实扭曲力场，如果你相信他，你就能做成事情，诺兰是不允许别对他说不的\n如果你表现得好像你能做某件事，那就能起作用，我告诉他，你装得好像自己掌控了一切，别人就会以为你真的掌控了一切。\n追求完美：即便是别看不到的地方，对其工艺也必须尽心尽力\n他的观念与我也十分一致，他强调说，你永远不该怀揣赚钱的目的去创办一家公司。你的目标应该是做出让你自己深信不疑的产品，创办一家生命很强的公司\n意志的力量可以改变现实\n我们运用我们运用思维，而他们运用直觉\n科特基说弗里德兰极富魅力，很会骗人，可以让事态屈从于他的超强意志，“他很机智，充满自信，还有一点儿独断专行”。科特基观察到，乔布斯跟弗里德兰在一起时间久了后，也变成了弗里德兰的样子。 “罗伯特教会了他怎样销售产品，怎样与别人交往，怎样展现自我，怎样控制局面。跟罗伯特相处一段时间后，乔布斯身上的羞涩开始逐渐褪去。”\n如果你把每一天都当作生命中最后一天去过，总有一天你会如愿以偿。\n你们的时间是有限的，所以不要浪费时间在活成别人的生命上。不要被教条主义所困，教条主义是仅仅活在别人的思考结果的人。不要让别人的意见淹没掉你自己内心的声音。要有勇气追随你自己的本心和直觉。他们已经知道你真正想成为什么样的人，其他事情都是次要的。\n时间有限，不要按照别人的意愿来活，这是浪费时间。\n不要囤于成见，那是为别人的设想而活。不要让他人的聒噪声淹没自己的心声。\n最重要的是，鼓起勇气，跟着自己的心和直觉前行。不管怎样，感觉和直觉早就知道你想成为什么样的人，其它都是次要的。\n我坚信唯一使我一直坚持下去的就是我对所做事情的无比热爱。所以你一定要清楚自己喜欢什么，选择爱人时如此，找寻工作时亦如此。\n唯一的不同就是处处不同\n正应为这种精神有人宁愿当诗人也不愿做银行家，\n有些时候，生活会拿起一块砖头猛拍向你的脑袋。不要失去信心。我很清楚唯一使我一直走下去的，就是我无比钟爱我做的事情。你得去找到你所爱的东西。\n我觉得优秀的同事都不是为了计算机而工作，而是因为计算机是传达某种情感的最佳媒介\n如果今天是我生命中的最后一天，你会不会完成你今天将要做的事情呢？”\n商业观点创新决定了你是领袖还是跟随者乔布斯的苹果禅乔布斯认为创新是无极限的，有限的是想象力。他认为，如果是一个成长性行业，创新就是要让产品使人更有效率，更容易使用，更容易用来工作。如果是一个萎缩的行业，创新就是要快速的从原有模式退出来，在产品及服务变得过时，不好用之前迅速改变自己。和最优秀的人一起工作乔布斯认为，一个创业公司的前十个员工决定了这个公司的水平，因为每个人都要能负担公司十分之一的工作。他也常用甲壳虫乐队做比喻团队的力量：没有一项主要工作可以由单独的一个，或者两个、三个、四个人来完成。为了把事请办好，工作不能仅仅由一个人完成，必须找到能力非凡的人来合作。最终把个体互动产生的力量汇总，这样整体的力量就会远远大于个体的力量的总和。注重质量乔布斯早期照片(23张)乔布斯是个完美主义者。他认为，完美的质量没有捷径，必须将优秀的质量定位给自己的承诺，并坚定不移的坚持下去。当对自己要求更高，并关注所有的细节后，产品就会和别人不一样。 [22]在产品中置入美学因素乔布斯深知美学的重要性。1998年，乔布斯意识到苹果产品看上去已经过时，乔布斯召开了苹果的一个会议，并提出了这样的问题——苹果产品的问题就是出在没有美学因素。了解消费者需求而不掌握消费者反馈意见乔布斯没有使用关注焦点人群的方案，相反，他告诉消费者，让消费者说出他们的需求。对此，市场研究机构Yankee Group的消费者研究部门负责人卡尔·霍威（Carl Howe）表示：苹果在了解用户需求方面表现很好连接关联事物苹果发布了自主创新的产品，但也整合了自己的理念。iPod与iTunes进行了完美的融合，iPad和iPhone也与应用商店进行很好地融合。乔布斯表示：创造力就是把所有相关的事物连接起来。 [23]不招聘俗套的员工苹果发布会上的乔布斯(32张)常春藤联盟的毕业生并非能够运营公司的唯一人选。乔布斯曾经宣称：能够让Macintosh成为伟大产品的部分因素就得益于从事此产品相关的工作人员都是音乐家、诗人以及艺术家等，甚至还有动物学家和历史学家，巧合的是，他们又是世界上最优秀的电脑科学家。鼓励其他人另类思考苹果“另类思考”广告活动开始于20世纪90年代末，此活动也一直是最有效的活动之一。而且这一活动还拉动了创新与创造，而这正是苹果的一切所在。不追求复杂简单就是快乐。苹果的设计师乔纳森·艾维（Jonathan Ives）对此战略证实称：苹果绝对是努力研发简单的应用方案，因为人们喜欢简单明了。出售梦想而非产品乔布斯让人们对苹果公司产生了这样的印象，即苹果打动消费者的不是其生产的产品本身，而是这些产品所代表的具体涵义。 [24]\n三要素共鸣：就是要紧密结合顾客的感受。“我们要比其他任何公司都要更好理解使用者的需求”专注：为了做好我们的决定做的事情，我们必须拒绝所有不重要的机会。第三点也是同样重要的一点原则，有一个让人困惑的措辞灌输：这涉及人们是佮根据一家公司或一个产品传达的信号，来形成对它的判断。“人们确实会以貌取人”，他写道“我们也许有最好的产品，最高的质量，最实用的软件等，如果我们用一中潦草马虎的方式来展示，顾客就会认为我们的产品也是潦草马虎的，如果我们以创新的，专业的方式展示产品，那么优秀的形象也会被灌输到客户的思想中。”\n","slug":"jobs","published":1,"updated":"2022-12-10T02:35:47.940Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva900019u19k8c6p8mcv","content":"<p>他看到了一只小牛犊的出生，让他惊讶的是，这只小动物落地几分钟就挣扎着站起来开始走路。“着不是通过学习获得的技能，而是与生俱来的”他回忆说：人类的婴儿就没有这种能力。我觉得着很了不起，虽然别人都不这么想。”就好像是设计好的一样；动物身体里的某些东西和它大脑里的某些东西在他出生后立刻开始协同工作，而不需要去学习。<br>他已经不再掩饰自己对权威的厌恶，他的态度结合了怪异而顽固的激情和超然的叛逆。“他经常一个人在角落里做自己的事情，压根儿不想跟或者班上的其他人有任何交流”<br>我记得他告诉我，工程学是世界上最重要的<br>去念斯坦福的人，他们已经知道自己想要什么了，他说：“他们一点儿艺术细胞都没有，我想要上的是更富有艺术性的，更有趣的学校”<br>就如果过去所有我们在其中寻找神性的伟大宗教一样，那些古老的目标都隐喻着现在。<br>我开始意识到；基于直觉的理解和意识，比抽象思维和逻辑分析更为重要。他后来说到<br>Turn on,turn in,drop out<br>擅长人文又能驾驭科学的人的重要性<br>一个具有强烈个性的人身上集合了人文和科学的天赋后所能产生的那种创造力，我相信这种创造力也是在21世纪创立创新型经济的关键因素<br>要么伤害过，遗弃过，抑或他人以其他方式记录过<br>集中了一群极富想象力的设计师和大胆创新的工程师，他们能将他的设想发扬光大。<br>将创造力与科技结合起来<br>他们所做的并非是针对目标人群的普通产品改进，而是消费者还没有意识到需求的时候，就为其提供全新的设备和服务。<br>他就像被恶魔驱使一样，可以让身边的人狂怒和绝望<br>被遗弃，被选择，很特别。 我们是专门挑选你的<br>把柜子和栅栏的背面制作好也十分重要，尽管这些地方人们看不到。“他喜欢最求完美，即使别人看不到的地方会很关心”<br>我喜欢把很棒的设计和简便的功能融入产品中，而且不会太贵<br>“我遭遇的是自己从未遇到过的另一种形式的权威，而且我不喜欢它。他们几乎都要制服我了，差一点而他们就要把我身上所有好奇心都赶走了”<br>如果你提不起他的兴趣，那是你的错<br>开始展现出性格多面性，敏感又偶尔迟钝，易怒而又超然，这也是他以后的生活状态<br>让我感到震撼的是他的激情。他只要对一样东西感兴趣，就会把这种兴趣发挥到非理性的极致状态<br>乔布斯熟练掌握了利用凝视和沉默来征服别的技巧<br>他的招数之一就是死死盯着正在和他讲话的人。他会一直注视着对方的眼睛，然后问一个问题，要对方在不回避目光的情况下回答<br>他极富魅力，他会骗人，可以让事态屈从于他的超强意志，他很机智，充满自信，还有一点儿独断专行。<br>怎样让自己成为焦点，怎样销售产品，怎样与别人交往，怎样展现自我，怎样控制局面<br>在一些碰巧跟人交流的场合，他会肆无忌惮地称别为“蠢货”，我那么耀眼的唯一原因就是，其他人都太糟糕了<br>现实扭曲力场，如果你相信他，你就能做成事情，诺兰是不允许别对他说不的<br>如果你表现得好像你能做某件事，那就能起作用，我告诉他，你装得好像自己掌控了一切，别人就会以为你真的掌控了一切。<br>追求完美：即便是别看不到的地方，对其工艺也必须尽心尽力<br>他的观念与我也十分一致，他强调说，你永远不该怀揣赚钱的目的去创办一家公司。你的目标应该是做出让你自己深信不疑的产品，创办一家生命很强的公司<br>意志的力量可以改变现实<br>我们运用我们运用思维，而他们运用直觉<br>科特基说弗里德兰极富魅力，很会骗人，可以让事态屈从于他的超强意志，“他很机智，充满自信，还有一点儿独断专行”。科特基观察到，乔布斯跟弗里德兰在一起时间久了后，也变成了弗里德兰的样子。 “罗伯特教会了他怎样销售产品，怎样与别人交往，怎样展现自我，怎样控制局面。跟罗伯特相处一段时间后，乔布斯身上的羞涩开始逐渐褪去。”<br>如果你把每一天都当作生命中最后一天去过，总有一天你会如愿以偿。<br>你们的时间是有限的，所以不要浪费时间在活成别人的生命上。不要被教条主义所困，教条主义是仅仅活在别人的思考结果的人。不要让别人的意见淹没掉你自己内心的声音。要有勇气追随你自己的本心和直觉。他们已经知道你真正想成为什么样的人，其他事情都是次要的。<br>时间有限，不要按照别人的意愿来活，这是浪费时间。<br>不要囤于成见，那是为别人的设想而活。不要让他人的聒噪声淹没自己的心声。<br>最重要的是，鼓起勇气，跟着自己的心和直觉前行。不管怎样，感觉和直觉早就知道你想成为什么样的人，其它都是次要的。<br>我坚信唯一使我一直坚持下去的就是我对所做事情的无比热爱。所以你一定要清楚自己喜欢什么，选择爱人时如此，找寻工作时亦如此。<br>唯一的不同就是处处不同<br>正应为这种精神有人宁愿当诗人也不愿做银行家，<br>有些时候，生活会拿起一块砖头猛拍向你的脑袋。不要失去信心。我很清楚唯一使我一直走下去的，就是我无比钟爱我做的事情。你得去找到你所爱的东西。<br>我觉得优秀的同事都不是为了计算机而工作，而是因为计算机是传达某种情感的最佳媒介<br>如果今天是我生命中的最后一天，你会不会完成你今天将要做的事情呢？”<br>商业观点创新决定了你是领袖还是跟随者乔布斯的苹果禅乔布斯认为创新是无极限的，有限的是想象力。他认为，如果是一个成长性行业，创新就是要让产品使人更有效率，更容易使用，更容易用来工作。如果是一个萎缩的行业，创新就是要快速的从原有模式退出来，在产品及服务变得过时，不好用之前迅速改变自己。和最优秀的人一起工作乔布斯认为，一个创业公司的前十个员工决定了这个公司的水平，因为每个人都要能负担公司十分之一的工作。他也常用甲壳虫乐队做比喻团队的力量：没有一项主要工作可以由单独的一个，或者两个、三个、四个人来完成。为了把事请办好，工作不能仅仅由一个人完成，必须找到能力非凡的人来合作。最终把个体互动产生的力量汇总，这样整体的力量就会远远大于个体的力量的总和。注重质量乔布斯早期照片(23张)乔布斯是个完美主义者。他认为，完美的质量没有捷径，必须将优秀的质量定位给自己的承诺，并坚定不移的坚持下去。当对自己要求更高，并关注所有的细节后，产品就会和别人不一样。 [22]在产品中置入美学因素乔布斯深知美学的重要性。1998年，乔布斯意识到苹果产品看上去已经过时，乔布斯召开了苹果的一个会议，并提出了这样的问题——苹果产品的问题就是出在没有美学因素。了解消费者需求而不掌握消费者反馈意见乔布斯没有使用关注焦点人群的方案，相反，他告诉消费者，让消费者说出他们的需求。对此，市场研究机构Yankee Group的消费者研究部门负责人卡尔·霍威（Carl Howe）表示：苹果在了解用户需求方面表现很好连接关联事物苹果发布了自主创新的产品，但也整合了自己的理念。iPod与iTunes进行了完美的融合，iPad和iPhone也与应用商店进行很好地融合。乔布斯表示：创造力就是把所有相关的事物连接起来。 [23]不招聘俗套的员工苹果发布会上的乔布斯(32张)常春藤联盟的毕业生并非能够运营公司的唯一人选。乔布斯曾经宣称：能够让Macintosh成为伟大产品的部分因素就得益于从事此产品相关的工作人员都是音乐家、诗人以及艺术家等，甚至还有动物学家和历史学家，巧合的是，他们又是世界上最优秀的电脑科学家。鼓励其他人另类思考苹果“另类思考”广告活动开始于20世纪90年代末，此活动也一直是最有效的活动之一。而且这一活动还拉动了创新与创造，而这正是苹果的一切所在。不追求复杂简单就是快乐。苹果的设计师乔纳森·艾维（Jonathan Ives）对此战略证实称：苹果绝对是努力研发简单的应用方案，因为人们喜欢简单明了。出售梦想而非产品乔布斯让人们对苹果公司产生了这样的印象，即苹果打动消费者的不是其生产的产品本身，而是这些产品所代表的具体涵义。 [24]<br>三要素共鸣：就是要紧密结合顾客的感受。“我们要比其他任何公司都要更好理解使用者的需求”专注：为了做好我们的决定做的事情，我们必须拒绝所有不重要的机会。第三点也是同样重要的一点原则，有一个让人困惑的措辞灌输：这涉及人们是佮根据一家公司或一个产品传达的信号，来形成对它的判断。“人们确实会以貌取人”，他写道“我们也许有最好的产品，最高的质量，最实用的软件等，如果我们用一中潦草马虎的方式来展示，顾客就会认为我们的产品也是潦草马虎的，如果我们以创新的，专业的方式展示产品，那么优秀的形象也会被灌输到客户的思想中。”</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<p>他看到了一只小牛犊的出生，让他惊讶的是，这只小动物落地几分钟就挣扎着站起来开始走路。“着不是通过学习获得的技能，而是与生俱来的”他回忆说：人类的婴儿就没有这种能力。我觉得着很了不起，虽然别人都不这么想。”就好像是设计好的一样；动物身体里的某些东西和它大脑里的某些东西在他出生后立刻开始协同工作，而不需要去学习。<br>他已经不再掩饰自己对权威的厌恶，他的态度结合了怪异而顽固的激情和超然的叛逆。“他经常一个人在角落里做自己的事情，压根儿不想跟或者班上的其他人有任何交流”<br>我记得他告诉我，工程学是世界上最重要的<br>去念斯坦福的人，他们已经知道自己想要什么了，他说：“他们一点儿艺术细胞都没有，我想要上的是更富有艺术性的，更有趣的学校”<br>就如果过去所有我们在其中寻找神性的伟大宗教一样，那些古老的目标都隐喻着现在。<br>我开始意识到；基于直觉的理解和意识，比抽象思维和逻辑分析更为重要。他后来说到<br>Turn on,turn in,drop out<br>擅长人文又能驾驭科学的人的重要性<br>一个具有强烈个性的人身上集合了人文和科学的天赋后所能产生的那种创造力，我相信这种创造力也是在21世纪创立创新型经济的关键因素<br>要么伤害过，遗弃过，抑或他人以其他方式记录过<br>集中了一群极富想象力的设计师和大胆创新的工程师，他们能将他的设想发扬光大。<br>将创造力与科技结合起来<br>他们所做的并非是针对目标人群的普通产品改进，而是消费者还没有意识到需求的时候，就为其提供全新的设备和服务。<br>他就像被恶魔驱使一样，可以让身边的人狂怒和绝望<br>被遗弃，被选择，很特别。 我们是专门挑选你的<br>把柜子和栅栏的背面制作好也十分重要，尽管这些地方人们看不到。“他喜欢最求完美，即使别人看不到的地方会很关心”<br>我喜欢把很棒的设计和简便的功能融入产品中，而且不会太贵<br>“我遭遇的是自己从未遇到过的另一种形式的权威，而且我不喜欢它。他们几乎都要制服我了，差一点而他们就要把我身上所有好奇心都赶走了”<br>如果你提不起他的兴趣，那是你的错<br>开始展现出性格多面性，敏感又偶尔迟钝，易怒而又超然，这也是他以后的生活状态<br>让我感到震撼的是他的激情。他只要对一样东西感兴趣，就会把这种兴趣发挥到非理性的极致状态<br>乔布斯熟练掌握了利用凝视和沉默来征服别的技巧<br>他的招数之一就是死死盯着正在和他讲话的人。他会一直注视着对方的眼睛，然后问一个问题，要对方在不回避目光的情况下回答<br>他极富魅力，他会骗人，可以让事态屈从于他的超强意志，他很机智，充满自信，还有一点儿独断专行。<br>怎样让自己成为焦点，怎样销售产品，怎样与别人交往，怎样展现自我，怎样控制局面<br>在一些碰巧跟人交流的场合，他会肆无忌惮地称别为“蠢货”，我那么耀眼的唯一原因就是，其他人都太糟糕了<br>现实扭曲力场，如果你相信他，你就能做成事情，诺兰是不允许别对他说不的<br>如果你表现得好像你能做某件事，那就能起作用，我告诉他，你装得好像自己掌控了一切，别人就会以为你真的掌控了一切。<br>追求完美：即便是别看不到的地方，对其工艺也必须尽心尽力<br>他的观念与我也十分一致，他强调说，你永远不该怀揣赚钱的目的去创办一家公司。你的目标应该是做出让你自己深信不疑的产品，创办一家生命很强的公司<br>意志的力量可以改变现实<br>我们运用我们运用思维，而他们运用直觉<br>科特基说弗里德兰极富魅力，很会骗人，可以让事态屈从于他的超强意志，“他很机智，充满自信，还有一点儿独断专行”。科特基观察到，乔布斯跟弗里德兰在一起时间久了后，也变成了弗里德兰的样子。 “罗伯特教会了他怎样销售产品，怎样与别人交往，怎样展现自我，怎样控制局面。跟罗伯特相处一段时间后，乔布斯身上的羞涩开始逐渐褪去。”<br>如果你把每一天都当作生命中最后一天去过，总有一天你会如愿以偿。<br>你们的时间是有限的，所以不要浪费时间在活成别人的生命上。不要被教条主义所困，教条主义是仅仅活在别人的思考结果的人。不要让别人的意见淹没掉你自己内心的声音。要有勇气追随你自己的本心和直觉。他们已经知道你真正想成为什么样的人，其他事情都是次要的。<br>时间有限，不要按照别人的意愿来活，这是浪费时间。<br>不要囤于成见，那是为别人的设想而活。不要让他人的聒噪声淹没自己的心声。<br>最重要的是，鼓起勇气，跟着自己的心和直觉前行。不管怎样，感觉和直觉早就知道你想成为什么样的人，其它都是次要的。<br>我坚信唯一使我一直坚持下去的就是我对所做事情的无比热爱。所以你一定要清楚自己喜欢什么，选择爱人时如此，找寻工作时亦如此。<br>唯一的不同就是处处不同<br>正应为这种精神有人宁愿当诗人也不愿做银行家，<br>有些时候，生活会拿起一块砖头猛拍向你的脑袋。不要失去信心。我很清楚唯一使我一直走下去的，就是我无比钟爱我做的事情。你得去找到你所爱的东西。<br>我觉得优秀的同事都不是为了计算机而工作，而是因为计算机是传达某种情感的最佳媒介<br>如果今天是我生命中的最后一天，你会不会完成你今天将要做的事情呢？”<br>商业观点创新决定了你是领袖还是跟随者乔布斯的苹果禅乔布斯认为创新是无极限的，有限的是想象力。他认为，如果是一个成长性行业，创新就是要让产品使人更有效率，更容易使用，更容易用来工作。如果是一个萎缩的行业，创新就是要快速的从原有模式退出来，在产品及服务变得过时，不好用之前迅速改变自己。和最优秀的人一起工作乔布斯认为，一个创业公司的前十个员工决定了这个公司的水平，因为每个人都要能负担公司十分之一的工作。他也常用甲壳虫乐队做比喻团队的力量：没有一项主要工作可以由单独的一个，或者两个、三个、四个人来完成。为了把事请办好，工作不能仅仅由一个人完成，必须找到能力非凡的人来合作。最终把个体互动产生的力量汇总，这样整体的力量就会远远大于个体的力量的总和。注重质量乔布斯早期照片(23张)乔布斯是个完美主义者。他认为，完美的质量没有捷径，必须将优秀的质量定位给自己的承诺，并坚定不移的坚持下去。当对自己要求更高，并关注所有的细节后，产品就会和别人不一样。 [22]在产品中置入美学因素乔布斯深知美学的重要性。1998年，乔布斯意识到苹果产品看上去已经过时，乔布斯召开了苹果的一个会议，并提出了这样的问题——苹果产品的问题就是出在没有美学因素。了解消费者需求而不掌握消费者反馈意见乔布斯没有使用关注焦点人群的方案，相反，他告诉消费者，让消费者说出他们的需求。对此，市场研究机构Yankee Group的消费者研究部门负责人卡尔·霍威（Carl Howe）表示：苹果在了解用户需求方面表现很好连接关联事物苹果发布了自主创新的产品，但也整合了自己的理念。iPod与iTunes进行了完美的融合，iPad和iPhone也与应用商店进行很好地融合。乔布斯表示：创造力就是把所有相关的事物连接起来。 [23]不招聘俗套的员工苹果发布会上的乔布斯(32张)常春藤联盟的毕业生并非能够运营公司的唯一人选。乔布斯曾经宣称：能够让Macintosh成为伟大产品的部分因素就得益于从事此产品相关的工作人员都是音乐家、诗人以及艺术家等，甚至还有动物学家和历史学家，巧合的是，他们又是世界上最优秀的电脑科学家。鼓励其他人另类思考苹果“另类思考”广告活动开始于20世纪90年代末，此活动也一直是最有效的活动之一。而且这一活动还拉动了创新与创造，而这正是苹果的一切所在。不追求复杂简单就是快乐。苹果的设计师乔纳森·艾维（Jonathan Ives）对此战略证实称：苹果绝对是努力研发简单的应用方案，因为人们喜欢简单明了。出售梦想而非产品乔布斯让人们对苹果公司产生了这样的印象，即苹果打动消费者的不是其生产的产品本身，而是这些产品所代表的具体涵义。 [24]<br>三要素共鸣：就是要紧密结合顾客的感受。“我们要比其他任何公司都要更好理解使用者的需求”专注：为了做好我们的决定做的事情，我们必须拒绝所有不重要的机会。第三点也是同样重要的一点原则，有一个让人困惑的措辞灌输：这涉及人们是佮根据一家公司或一个产品传达的信号，来形成对它的判断。“人们确实会以貌取人”，他写道“我们也许有最好的产品，最高的质量，最实用的软件等，如果我们用一中潦草马虎的方式来展示，顾客就会认为我们的产品也是潦草马虎的，如果我们以创新的，专业的方式展示产品，那么优秀的形象也会被灌输到客户的思想中。”</p>\n"},{"title":"活在当下摘录","date":"2022-12-10T02:29:32.000Z","_content":"花从不问自己的意义：为什么要开，花就是花，他的目的就是快乐的绽放\n灵性的人生首先就是要无所畏惧。\n你是瘫痪的恐惧？久违久违。进来喝杯茶吧?\n唯物主义：指只相信感官所能感觉到的东西。凡是看不见、听不到、摸不着，或是实验室里检测不到，唯物主义就判定这不存在\n用科学的放大镜来寻找智能管理，就像黑夜里丢了钥匙的醉汉围着路灯柱子转，因为那里是他唯一能看得见的地方。\n你能证明，我才信\n盲人摸大象来比喻文化间的差异。摸了大象的不同部位后，几位盲人争执了起来。”象就是像棵大树！“抱着象腿的盲人说。”你说什么呀，它更像堵墙“摸了大象身子的盲人说。”它像更绳子！“以为盲人拽这象鼻说。几位盲人吵个没完，然而它们摸得确实同一头大象。\n一个人能包容死亡，包容死亡带来的一切，胸怀死志，继续生活，是妙不可言的\n","source":"_posts/lifenow.md","raw":"---\ntitle: 活在当下摘录\ndate: 2022/12/10 010:29:32\ntags: [摘录]\n---\n花从不问自己的意义：为什么要开，花就是花，他的目的就是快乐的绽放\n灵性的人生首先就是要无所畏惧。\n你是瘫痪的恐惧？久违久违。进来喝杯茶吧?\n唯物主义：指只相信感官所能感觉到的东西。凡是看不见、听不到、摸不着，或是实验室里检测不到，唯物主义就判定这不存在\n用科学的放大镜来寻找智能管理，就像黑夜里丢了钥匙的醉汉围着路灯柱子转，因为那里是他唯一能看得见的地方。\n你能证明，我才信\n盲人摸大象来比喻文化间的差异。摸了大象的不同部位后，几位盲人争执了起来。”象就是像棵大树！“抱着象腿的盲人说。”你说什么呀，它更像堵墙“摸了大象身子的盲人说。”它像更绳子！“以为盲人拽这象鼻说。几位盲人吵个没完，然而它们摸得确实同一头大象。\n一个人能包容死亡，包容死亡带来的一切，胸怀死志，继续生活，是妙不可言的\n","slug":"lifenow","published":1,"updated":"2022-12-10T02:35:39.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva90001cu19kbb4ngrc6","content":"<p>花从不问自己的意义：为什么要开，花就是花，他的目的就是快乐的绽放<br>灵性的人生首先就是要无所畏惧。<br>你是瘫痪的恐惧？久违久违。进来喝杯茶吧?<br>唯物主义：指只相信感官所能感觉到的东西。凡是看不见、听不到、摸不着，或是实验室里检测不到，唯物主义就判定这不存在<br>用科学的放大镜来寻找智能管理，就像黑夜里丢了钥匙的醉汉围着路灯柱子转，因为那里是他唯一能看得见的地方。<br>你能证明，我才信<br>盲人摸大象来比喻文化间的差异。摸了大象的不同部位后，几位盲人争执了起来。”象就是像棵大树！“抱着象腿的盲人说。”你说什么呀，它更像堵墙“摸了大象身子的盲人说。”它像更绳子！“以为盲人拽这象鼻说。几位盲人吵个没完，然而它们摸得确实同一头大象。<br>一个人能包容死亡，包容死亡带来的一切，胸怀死志，继续生活，是妙不可言的</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<p>花从不问自己的意义：为什么要开，花就是花，他的目的就是快乐的绽放<br>灵性的人生首先就是要无所畏惧。<br>你是瘫痪的恐惧？久违久违。进来喝杯茶吧?<br>唯物主义：指只相信感官所能感觉到的东西。凡是看不见、听不到、摸不着，或是实验室里检测不到，唯物主义就判定这不存在<br>用科学的放大镜来寻找智能管理，就像黑夜里丢了钥匙的醉汉围着路灯柱子转，因为那里是他唯一能看得见的地方。<br>你能证明，我才信<br>盲人摸大象来比喻文化间的差异。摸了大象的不同部位后，几位盲人争执了起来。”象就是像棵大树！“抱着象腿的盲人说。”你说什么呀，它更像堵墙“摸了大象身子的盲人说。”它像更绳子！“以为盲人拽这象鼻说。几位盲人吵个没完，然而它们摸得确实同一头大象。<br>一个人能包容死亡，包容死亡带来的一切，胸怀死志，继续生活，是妙不可言的</p>\n"},{"title":"铃木俊隆禅师","date":"2022-12-10T03:08:11.000Z","_content":"禅并不是什么令人兴奋的东西，\n而只是对日常生活的专注。\n“Zen is not some kind of excitement,\nbut concentration on \nour usual everyday routine.”\n——（Shunryu Suzuki）\n \n铃木俊隆禅师，是将佛教与禅修带入西方世界的先驱之一。藏传佛教大师邱阳·创巴仁波切尊敬地称铃木俊隆为自己“精神上的父亲”。\n \n他亲身经历两次世界大战等世间诸种悲惨情景，亦经历过二度丧妻之痛——第一任妻子，因肺结核而必须离开他（在20世纪40年代，那等同于绝症）；第二任妻子，惨遭疯狂寺僧的砍杀而身亡（他的小女儿，因母亲的意外而精神失常）。\n \n对他而言，“万事总是变迁流转，所以没有你可以拥有的事物。”人生寿命的长短，或如逾千年的日面佛，抑或一日夜的月面佛，那都已经不是问题。他只是踏实地活在当下、此处，做他自己的主人，与万物为一。\n![](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/lmcs.jpeg)\n￼\n铃木俊隆禅师\n\n《禅者的初心》，是铃木俊隆的美国弟子整理他坐禅时的演讲辑录。这本书告诉人们：“禅修的心，应该始终是一颗初心，必须归复自己无边的初学者的心，不受各种习性的羁绊，只有这样，才能忠于自己，同情众生，并且切实修行。”这本书正是乔布斯学禅的入门书籍，从学禅中得来的生活与工作的启示，影响了乔布斯一生。\n \n今天和大家再次分享铃木俊隆禅师自己的12条生活禅修准则，愿将静心带入带入生活中的每个当下。\n \n12条生活禅修准则\n铃木俊隆（日）\n￼\n\n\n## 01. 一次只专注于一件事情\nDo one thing at a time\n\n这一规则（还有其他一些后面的规则）为长期阅读禅僧习惯的读者所熟知。这也是我哲学的一部分，也是一个禅僧生活的一部分：单任务而不一次进行多项任务。当你在倒水的时候就只倒水就可以了。而当你吃饭的时候就只吃饭好了。当你洗澡的时候，就专注于洗澡。不要试着停下一些工作去吃饭或洗澡。\n\n禅僧格言：当你行走的时候，专心行走。当你吃饭的时候，专心吃饭。\n\n## 02. 慢慢地并谨慎地做事\nDo it slowly and deliberately \n \n你可以一次完成一个任务，但也可能会急匆匆的完成它。相反，你不能急，要慢慢来。谨慎地注意你的行动，不要太急忙和随意了。这需要练习，但他有助于你专注于你的任务。\n\n￼\n\n## 03. 彻底地完成它\nDo it completely\n \n全心全意关注你的任务。不完成目前的任务不要进行下一个。如果因为某些原因你不得不去做别的事，至少尽量把没有完成的放好并整理一下自己。如果你在做三明治，在吃掉它之前你要先把用来做三明治的东西清理好，清扫一下柜台，洗干净做三明治碟子。这样你就完成了做三明治的工作，你就可以完成专注于下一个任务了。\n\n## 04. 少做\nDo less\n \n一个禅僧不会过一种懒惰的生活：他很早就醒来了而且每天都塞满了工作。然而，他不会有一个无休止的任务清单——今天他要完成特定的事情，不会太多。如果你少做，你就能够更专注地慢慢地、更彻底地做这些事情，如果你把一天用不同的任务填满，你就会急忙地从一件事情到另一件事情，而不会停下来去想你究竟做了些什么。\n \n## 05. 在事情之间留些空间\nPut space between things\n \n跟“少做”原则相关，但这是管理你的日程表保证你总是有时间来完成每项任务的一种方法。不要把事情安排的过于紧密——相反在事情之间留些空间出来。这会让你的日程表更轻松，留出空间也可以防止万一一项任务花费的时间超过了你的计划。\n\n￼\n \n## 06.培养一种仪式\nDevelop rituals\n \n禅僧们对于他们做的很多事情都有仪式，从吃饭到清洁到冥想。仪式给人一种重要的感觉——如果事情重要到需要一种仪式，就需要给予你完成的注意，并且慢慢地正确地来完成。你不必学习禅僧的仪式——你可以建立你自己的仪式，为食物的准备、为吃饭、为清洁、为你开始做的事情、为你醒来后做的事情和你上床之前做的事情、为你在锻炼之前做的事情。是的，为任何你想做的事情建立一种仪式。\n \n\n## 07. 为特定的事情分配好时间\nDesignate time for certain things\n \n在一天中的特定时间内禅僧是用来完成特定的活动的。洗澡的时间、工作的时间、清洁的时间、吃饭的时间。这可以保证这些事情有规律地完成。你可以为你自己的活动分配时间，不管是工作或是清洁或是锻炼或是宁静的沉思。如果它很重要需要有规律地来完成，那就考虑为它分配好时间吧。\n\n￼\n\n## 08. 花些时间在打坐上\nDevote time to sitting\n \n在禅僧的一生中，禅宗打坐是他每天最重要的部分之一。每天，有专门分配用来打坐的时间。这种沉思确实是学习活在当下的练习。你可以花些时间来静坐冥想，或做我所做的：我以跑步做为活在当下的一种锻炼。同样地，你可以采用任何活动，只要你经常地去做并练习活在当下。\n \n## 09.微笑和服务他人\nSmile and serve others\n  \n禅僧把他们每天中的部分时间用来服务他人，不管是寺院里的其他禅僧还是外面世界里的人们。这教会了他们谦逊，确保他们的生活不单单是自私的，也是为了奉献他人的。\n\n如果你是一个家长，可能你已经至少在家庭中为服务别人花了些时间，而不是家长的人们也许也做了这些。类似地，微笑并与人为善是改善你周围人生活的一种很好的方法。也可以考虑志愿参加慈善工作。\n\n￼\n \n## 10. 把清洁和烹饪变成冥想\nMake cleaning and cooking\nbecome meditation\n \n除了上面提到的打坐以外，清洁和烹饪也是禅僧每天最荣耀的部分。他们都是练习专注力的好方式，可以是每天进行的很好的仪式。如果烹饪和清洁对你来说似乎烦琐的杂务，试着用冥想的方式来完成它们。全心全意做这些工作，集中注意、慢慢地、彻底地做这些事情。这会改变你的一天（同时也给你一间干净的房间）。\n \n## 11. 思考什么是必须的\nThink about what is necessary\n\n在禅僧的生活中基本上都是必须的要做的。他没有充满鞋子的衣柜或最新的时尚衣服。他没有冰箱和橱柜来存放垃圾食物。他没有最新的小玩意、汽车、电视或苹果音乐播放器。他有保暖的衣物、有避雨的房屋、必须的器具、不可少的工具和充饥的食物（他们吃的很简单，素餐通常有大米、味噌汤、蔬菜和泡菜组成）。\n \n现在，我的意思不是说你应该完成像禅僧一样生活——我也没有这样做。但这确实提醒我们在我们的生活中有很多事情是没有必要的。思考我们真正需要的是什么，考虑拥那些不必要的东西是否对我们真的重要，这对我们是有用的。\n\n￼\n \n## 12. 简单生活\nLive simply\n \n每11条原则——如果某些事情不是必须的——的推论，那么没有他们你也可以生活。所以简单生活就是尽可能地处理掉那些没有必要的和不重要的东西，为重要的东西留存空间。而什么是重要的是因人而异的。\n\n对我来说，家庭、写作、跑步和阅读是重要的。对其他人来说，也许护理和志愿工作、做礼拜和收集连环画是重要的。没有什么定律来规定对你来说什么应该重要的——但你应该考虑什么是你生命中最为重要的，通过去除不是那么重要的事情为你生命中重要的事情留出空间来","source":"_posts/lmcs.md","raw":"---\ntitle: 铃木俊隆禅师\ndate: 2022/12/10 11:08:11\ntag: [摘录]\n---\n禅并不是什么令人兴奋的东西，\n而只是对日常生活的专注。\n“Zen is not some kind of excitement,\nbut concentration on \nour usual everyday routine.”\n——（Shunryu Suzuki）\n \n铃木俊隆禅师，是将佛教与禅修带入西方世界的先驱之一。藏传佛教大师邱阳·创巴仁波切尊敬地称铃木俊隆为自己“精神上的父亲”。\n \n他亲身经历两次世界大战等世间诸种悲惨情景，亦经历过二度丧妻之痛——第一任妻子，因肺结核而必须离开他（在20世纪40年代，那等同于绝症）；第二任妻子，惨遭疯狂寺僧的砍杀而身亡（他的小女儿，因母亲的意外而精神失常）。\n \n对他而言，“万事总是变迁流转，所以没有你可以拥有的事物。”人生寿命的长短，或如逾千年的日面佛，抑或一日夜的月面佛，那都已经不是问题。他只是踏实地活在当下、此处，做他自己的主人，与万物为一。\n![](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/lmcs.jpeg)\n￼\n铃木俊隆禅师\n\n《禅者的初心》，是铃木俊隆的美国弟子整理他坐禅时的演讲辑录。这本书告诉人们：“禅修的心，应该始终是一颗初心，必须归复自己无边的初学者的心，不受各种习性的羁绊，只有这样，才能忠于自己，同情众生，并且切实修行。”这本书正是乔布斯学禅的入门书籍，从学禅中得来的生活与工作的启示，影响了乔布斯一生。\n \n今天和大家再次分享铃木俊隆禅师自己的12条生活禅修准则，愿将静心带入带入生活中的每个当下。\n \n12条生活禅修准则\n铃木俊隆（日）\n￼\n\n\n## 01. 一次只专注于一件事情\nDo one thing at a time\n\n这一规则（还有其他一些后面的规则）为长期阅读禅僧习惯的读者所熟知。这也是我哲学的一部分，也是一个禅僧生活的一部分：单任务而不一次进行多项任务。当你在倒水的时候就只倒水就可以了。而当你吃饭的时候就只吃饭好了。当你洗澡的时候，就专注于洗澡。不要试着停下一些工作去吃饭或洗澡。\n\n禅僧格言：当你行走的时候，专心行走。当你吃饭的时候，专心吃饭。\n\n## 02. 慢慢地并谨慎地做事\nDo it slowly and deliberately \n \n你可以一次完成一个任务，但也可能会急匆匆的完成它。相反，你不能急，要慢慢来。谨慎地注意你的行动，不要太急忙和随意了。这需要练习，但他有助于你专注于你的任务。\n\n￼\n\n## 03. 彻底地完成它\nDo it completely\n \n全心全意关注你的任务。不完成目前的任务不要进行下一个。如果因为某些原因你不得不去做别的事，至少尽量把没有完成的放好并整理一下自己。如果你在做三明治，在吃掉它之前你要先把用来做三明治的东西清理好，清扫一下柜台，洗干净做三明治碟子。这样你就完成了做三明治的工作，你就可以完成专注于下一个任务了。\n\n## 04. 少做\nDo less\n \n一个禅僧不会过一种懒惰的生活：他很早就醒来了而且每天都塞满了工作。然而，他不会有一个无休止的任务清单——今天他要完成特定的事情，不会太多。如果你少做，你就能够更专注地慢慢地、更彻底地做这些事情，如果你把一天用不同的任务填满，你就会急忙地从一件事情到另一件事情，而不会停下来去想你究竟做了些什么。\n \n## 05. 在事情之间留些空间\nPut space between things\n \n跟“少做”原则相关，但这是管理你的日程表保证你总是有时间来完成每项任务的一种方法。不要把事情安排的过于紧密——相反在事情之间留些空间出来。这会让你的日程表更轻松，留出空间也可以防止万一一项任务花费的时间超过了你的计划。\n\n￼\n \n## 06.培养一种仪式\nDevelop rituals\n \n禅僧们对于他们做的很多事情都有仪式，从吃饭到清洁到冥想。仪式给人一种重要的感觉——如果事情重要到需要一种仪式，就需要给予你完成的注意，并且慢慢地正确地来完成。你不必学习禅僧的仪式——你可以建立你自己的仪式，为食物的准备、为吃饭、为清洁、为你开始做的事情、为你醒来后做的事情和你上床之前做的事情、为你在锻炼之前做的事情。是的，为任何你想做的事情建立一种仪式。\n \n\n## 07. 为特定的事情分配好时间\nDesignate time for certain things\n \n在一天中的特定时间内禅僧是用来完成特定的活动的。洗澡的时间、工作的时间、清洁的时间、吃饭的时间。这可以保证这些事情有规律地完成。你可以为你自己的活动分配时间，不管是工作或是清洁或是锻炼或是宁静的沉思。如果它很重要需要有规律地来完成，那就考虑为它分配好时间吧。\n\n￼\n\n## 08. 花些时间在打坐上\nDevote time to sitting\n \n在禅僧的一生中，禅宗打坐是他每天最重要的部分之一。每天，有专门分配用来打坐的时间。这种沉思确实是学习活在当下的练习。你可以花些时间来静坐冥想，或做我所做的：我以跑步做为活在当下的一种锻炼。同样地，你可以采用任何活动，只要你经常地去做并练习活在当下。\n \n## 09.微笑和服务他人\nSmile and serve others\n  \n禅僧把他们每天中的部分时间用来服务他人，不管是寺院里的其他禅僧还是外面世界里的人们。这教会了他们谦逊，确保他们的生活不单单是自私的，也是为了奉献他人的。\n\n如果你是一个家长，可能你已经至少在家庭中为服务别人花了些时间，而不是家长的人们也许也做了这些。类似地，微笑并与人为善是改善你周围人生活的一种很好的方法。也可以考虑志愿参加慈善工作。\n\n￼\n \n## 10. 把清洁和烹饪变成冥想\nMake cleaning and cooking\nbecome meditation\n \n除了上面提到的打坐以外，清洁和烹饪也是禅僧每天最荣耀的部分。他们都是练习专注力的好方式，可以是每天进行的很好的仪式。如果烹饪和清洁对你来说似乎烦琐的杂务，试着用冥想的方式来完成它们。全心全意做这些工作，集中注意、慢慢地、彻底地做这些事情。这会改变你的一天（同时也给你一间干净的房间）。\n \n## 11. 思考什么是必须的\nThink about what is necessary\n\n在禅僧的生活中基本上都是必须的要做的。他没有充满鞋子的衣柜或最新的时尚衣服。他没有冰箱和橱柜来存放垃圾食物。他没有最新的小玩意、汽车、电视或苹果音乐播放器。他有保暖的衣物、有避雨的房屋、必须的器具、不可少的工具和充饥的食物（他们吃的很简单，素餐通常有大米、味噌汤、蔬菜和泡菜组成）。\n \n现在，我的意思不是说你应该完成像禅僧一样生活——我也没有这样做。但这确实提醒我们在我们的生活中有很多事情是没有必要的。思考我们真正需要的是什么，考虑拥那些不必要的东西是否对我们真的重要，这对我们是有用的。\n\n￼\n \n## 12. 简单生活\nLive simply\n \n每11条原则——如果某些事情不是必须的——的推论，那么没有他们你也可以生活。所以简单生活就是尽可能地处理掉那些没有必要的和不重要的东西，为重要的东西留存空间。而什么是重要的是因人而异的。\n\n对我来说，家庭、写作、跑步和阅读是重要的。对其他人来说，也许护理和志愿工作、做礼拜和收集连环画是重要的。没有什么定律来规定对你来说什么应该重要的——但你应该考虑什么是你生命中最为重要的，通过去除不是那么重要的事情为你生命中重要的事情留出空间来","slug":"lmcs","published":1,"updated":"2022-12-10T02:29:53.840Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva91001gu19k6qj9hxup","content":"<p>禅并不是什么令人兴奋的东西，<br>而只是对日常生活的专注。<br>“Zen is not some kind of excitement,<br>but concentration on <br>our usual everyday routine.”<br>——（Shunryu Suzuki）<br> <br>铃木俊隆禅师，是将佛教与禅修带入西方世界的先驱之一。藏传佛教大师邱阳·创巴仁波切尊敬地称铃木俊隆为自己“精神上的父亲”。<br> <br>他亲身经历两次世界大战等世间诸种悲惨情景，亦经历过二度丧妻之痛——第一任妻子，因肺结核而必须离开他（在20世纪40年代，那等同于绝症）；第二任妻子，惨遭疯狂寺僧的砍杀而身亡（他的小女儿，因母亲的意外而精神失常）。<br> <br>对他而言，“万事总是变迁流转，所以没有你可以拥有的事物。”人生寿命的长短，或如逾千年的日面佛，抑或一日夜的月面佛，那都已经不是问题。他只是踏实地活在当下、此处，做他自己的主人，与万物为一。<br><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/lmcs.jpeg\"><br>￼<br>铃木俊隆禅师</p>\n<p>《禅者的初心》，是铃木俊隆的美国弟子整理他坐禅时的演讲辑录。这本书告诉人们：“禅修的心，应该始终是一颗初心，必须归复自己无边的初学者的心，不受各种习性的羁绊，只有这样，才能忠于自己，同情众生，并且切实修行。”这本书正是乔布斯学禅的入门书籍，从学禅中得来的生活与工作的启示，影响了乔布斯一生。<br> <br>今天和大家再次分享铃木俊隆禅师自己的12条生活禅修准则，愿将静心带入带入生活中的每个当下。<br> <br>12条生活禅修准则<br>铃木俊隆（日）<br>￼</p>\n<h2 id=\"01-一次只专注于一件事情\"><a href=\"#01-一次只专注于一件事情\" class=\"headerlink\" title=\"01. 一次只专注于一件事情\"></a>01. 一次只专注于一件事情</h2><p>Do one thing at a time</p>\n<p>这一规则（还有其他一些后面的规则）为长期阅读禅僧习惯的读者所熟知。这也是我哲学的一部分，也是一个禅僧生活的一部分：单任务而不一次进行多项任务。当你在倒水的时候就只倒水就可以了。而当你吃饭的时候就只吃饭好了。当你洗澡的时候，就专注于洗澡。不要试着停下一些工作去吃饭或洗澡。</p>\n<p>禅僧格言：当你行走的时候，专心行走。当你吃饭的时候，专心吃饭。</p>\n<h2 id=\"02-慢慢地并谨慎地做事\"><a href=\"#02-慢慢地并谨慎地做事\" class=\"headerlink\" title=\"02. 慢慢地并谨慎地做事\"></a>02. 慢慢地并谨慎地做事</h2><p>Do it slowly and deliberately <br> <br>你可以一次完成一个任务，但也可能会急匆匆的完成它。相反，你不能急，要慢慢来。谨慎地注意你的行动，不要太急忙和随意了。这需要练习，但他有助于你专注于你的任务。</p>\n<p>￼</p>\n<h2 id=\"03-彻底地完成它\"><a href=\"#03-彻底地完成它\" class=\"headerlink\" title=\"03. 彻底地完成它\"></a>03. 彻底地完成它</h2><p>Do it completely<br> <br>全心全意关注你的任务。不完成目前的任务不要进行下一个。如果因为某些原因你不得不去做别的事，至少尽量把没有完成的放好并整理一下自己。如果你在做三明治，在吃掉它之前你要先把用来做三明治的东西清理好，清扫一下柜台，洗干净做三明治碟子。这样你就完成了做三明治的工作，你就可以完成专注于下一个任务了。</p>\n<h2 id=\"04-少做\"><a href=\"#04-少做\" class=\"headerlink\" title=\"04. 少做\"></a>04. 少做</h2><p>Do less<br> <br>一个禅僧不会过一种懒惰的生活：他很早就醒来了而且每天都塞满了工作。然而，他不会有一个无休止的任务清单——今天他要完成特定的事情，不会太多。如果你少做，你就能够更专注地慢慢地、更彻底地做这些事情，如果你把一天用不同的任务填满，你就会急忙地从一件事情到另一件事情，而不会停下来去想你究竟做了些什么。\n </p>\n<h2 id=\"05-在事情之间留些空间\"><a href=\"#05-在事情之间留些空间\" class=\"headerlink\" title=\"05. 在事情之间留些空间\"></a>05. 在事情之间留些空间</h2><p>Put space between things<br> <br>跟“少做”原则相关，但这是管理你的日程表保证你总是有时间来完成每项任务的一种方法。不要把事情安排的过于紧密——相反在事情之间留些空间出来。这会让你的日程表更轻松，留出空间也可以防止万一一项任务花费的时间超过了你的计划。</p>\n<p>￼\n </p>\n<h2 id=\"06-培养一种仪式\"><a href=\"#06-培养一种仪式\" class=\"headerlink\" title=\"06.培养一种仪式\"></a>06.培养一种仪式</h2><p>Develop rituals<br> <br>禅僧们对于他们做的很多事情都有仪式，从吃饭到清洁到冥想。仪式给人一种重要的感觉——如果事情重要到需要一种仪式，就需要给予你完成的注意，并且慢慢地正确地来完成。你不必学习禅僧的仪式——你可以建立你自己的仪式，为食物的准备、为吃饭、为清洁、为你开始做的事情、为你醒来后做的事情和你上床之前做的事情、为你在锻炼之前做的事情。是的，为任何你想做的事情建立一种仪式。\n </p>\n<h2 id=\"07-为特定的事情分配好时间\"><a href=\"#07-为特定的事情分配好时间\" class=\"headerlink\" title=\"07. 为特定的事情分配好时间\"></a>07. 为特定的事情分配好时间</h2><p>Designate time for certain things<br> <br>在一天中的特定时间内禅僧是用来完成特定的活动的。洗澡的时间、工作的时间、清洁的时间、吃饭的时间。这可以保证这些事情有规律地完成。你可以为你自己的活动分配时间，不管是工作或是清洁或是锻炼或是宁静的沉思。如果它很重要需要有规律地来完成，那就考虑为它分配好时间吧。</p>\n<p>￼</p>\n<h2 id=\"08-花些时间在打坐上\"><a href=\"#08-花些时间在打坐上\" class=\"headerlink\" title=\"08. 花些时间在打坐上\"></a>08. 花些时间在打坐上</h2><p>Devote time to sitting<br> <br>在禅僧的一生中，禅宗打坐是他每天最重要的部分之一。每天，有专门分配用来打坐的时间。这种沉思确实是学习活在当下的练习。你可以花些时间来静坐冥想，或做我所做的：我以跑步做为活在当下的一种锻炼。同样地，你可以采用任何活动，只要你经常地去做并练习活在当下。\n </p>\n<h2 id=\"09-微笑和服务他人\"><a href=\"#09-微笑和服务他人\" class=\"headerlink\" title=\"09.微笑和服务他人\"></a>09.微笑和服务他人</h2><p>Smile and serve others<br>  <br>禅僧把他们每天中的部分时间用来服务他人，不管是寺院里的其他禅僧还是外面世界里的人们。这教会了他们谦逊，确保他们的生活不单单是自私的，也是为了奉献他人的。</p>\n<p>如果你是一个家长，可能你已经至少在家庭中为服务别人花了些时间，而不是家长的人们也许也做了这些。类似地，微笑并与人为善是改善你周围人生活的一种很好的方法。也可以考虑志愿参加慈善工作。</p>\n<p>￼\n </p>\n<h2 id=\"10-把清洁和烹饪变成冥想\"><a href=\"#10-把清洁和烹饪变成冥想\" class=\"headerlink\" title=\"10. 把清洁和烹饪变成冥想\"></a>10. 把清洁和烹饪变成冥想</h2><p>Make cleaning and cooking<br>become meditation<br> <br>除了上面提到的打坐以外，清洁和烹饪也是禅僧每天最荣耀的部分。他们都是练习专注力的好方式，可以是每天进行的很好的仪式。如果烹饪和清洁对你来说似乎烦琐的杂务，试着用冥想的方式来完成它们。全心全意做这些工作，集中注意、慢慢地、彻底地做这些事情。这会改变你的一天（同时也给你一间干净的房间）。\n </p>\n<h2 id=\"11-思考什么是必须的\"><a href=\"#11-思考什么是必须的\" class=\"headerlink\" title=\"11. 思考什么是必须的\"></a>11. 思考什么是必须的</h2><p>Think about what is necessary</p>\n<p>在禅僧的生活中基本上都是必须的要做的。他没有充满鞋子的衣柜或最新的时尚衣服。他没有冰箱和橱柜来存放垃圾食物。他没有最新的小玩意、汽车、电视或苹果音乐播放器。他有保暖的衣物、有避雨的房屋、必须的器具、不可少的工具和充饥的食物（他们吃的很简单，素餐通常有大米、味噌汤、蔬菜和泡菜组成）。<br> <br>现在，我的意思不是说你应该完成像禅僧一样生活——我也没有这样做。但这确实提醒我们在我们的生活中有很多事情是没有必要的。思考我们真正需要的是什么，考虑拥那些不必要的东西是否对我们真的重要，这对我们是有用的。</p>\n<p>￼\n </p>\n<h2 id=\"12-简单生活\"><a href=\"#12-简单生活\" class=\"headerlink\" title=\"12. 简单生活\"></a>12. 简单生活</h2><p>Live simply<br> <br>每11条原则——如果某些事情不是必须的——的推论，那么没有他们你也可以生活。所以简单生活就是尽可能地处理掉那些没有必要的和不重要的东西，为重要的东西留存空间。而什么是重要的是因人而异的。</p>\n<p>对我来说，家庭、写作、跑步和阅读是重要的。对其他人来说，也许护理和志愿工作、做礼拜和收集连环画是重要的。没有什么定律来规定对你来说什么应该重要的——但你应该考虑什么是你生命中最为重要的，通过去除不是那么重要的事情为你生命中重要的事情留出空间来</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<p>禅并不是什么令人兴奋的东西，<br>而只是对日常生活的专注。<br>“Zen is not some kind of excitement,<br>but concentration on <br>our usual everyday routine.”<br>——（Shunryu Suzuki）<br> <br>铃木俊隆禅师，是将佛教与禅修带入西方世界的先驱之一。藏传佛教大师邱阳·创巴仁波切尊敬地称铃木俊隆为自己“精神上的父亲”。<br> <br>他亲身经历两次世界大战等世间诸种悲惨情景，亦经历过二度丧妻之痛——第一任妻子，因肺结核而必须离开他（在20世纪40年代，那等同于绝症）；第二任妻子，惨遭疯狂寺僧的砍杀而身亡（他的小女儿，因母亲的意外而精神失常）。<br> <br>对他而言，“万事总是变迁流转，所以没有你可以拥有的事物。”人生寿命的长短，或如逾千年的日面佛，抑或一日夜的月面佛，那都已经不是问题。他只是踏实地活在当下、此处，做他自己的主人，与万物为一。<br><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/lmcs.jpeg\"><br>￼<br>铃木俊隆禅师</p>\n<p>《禅者的初心》，是铃木俊隆的美国弟子整理他坐禅时的演讲辑录。这本书告诉人们：“禅修的心，应该始终是一颗初心，必须归复自己无边的初学者的心，不受各种习性的羁绊，只有这样，才能忠于自己，同情众生，并且切实修行。”这本书正是乔布斯学禅的入门书籍，从学禅中得来的生活与工作的启示，影响了乔布斯一生。<br> <br>今天和大家再次分享铃木俊隆禅师自己的12条生活禅修准则，愿将静心带入带入生活中的每个当下。<br> <br>12条生活禅修准则<br>铃木俊隆（日）<br>￼</p>\n<h2 id=\"01-一次只专注于一件事情\"><a href=\"#01-一次只专注于一件事情\" class=\"headerlink\" title=\"01. 一次只专注于一件事情\"></a>01. 一次只专注于一件事情</h2><p>Do one thing at a time</p>\n<p>这一规则（还有其他一些后面的规则）为长期阅读禅僧习惯的读者所熟知。这也是我哲学的一部分，也是一个禅僧生活的一部分：单任务而不一次进行多项任务。当你在倒水的时候就只倒水就可以了。而当你吃饭的时候就只吃饭好了。当你洗澡的时候，就专注于洗澡。不要试着停下一些工作去吃饭或洗澡。</p>\n<p>禅僧格言：当你行走的时候，专心行走。当你吃饭的时候，专心吃饭。</p>\n<h2 id=\"02-慢慢地并谨慎地做事\"><a href=\"#02-慢慢地并谨慎地做事\" class=\"headerlink\" title=\"02. 慢慢地并谨慎地做事\"></a>02. 慢慢地并谨慎地做事</h2><p>Do it slowly and deliberately <br> <br>你可以一次完成一个任务，但也可能会急匆匆的完成它。相反，你不能急，要慢慢来。谨慎地注意你的行动，不要太急忙和随意了。这需要练习，但他有助于你专注于你的任务。</p>\n<p>￼</p>\n<h2 id=\"03-彻底地完成它\"><a href=\"#03-彻底地完成它\" class=\"headerlink\" title=\"03. 彻底地完成它\"></a>03. 彻底地完成它</h2><p>Do it completely<br> <br>全心全意关注你的任务。不完成目前的任务不要进行下一个。如果因为某些原因你不得不去做别的事，至少尽量把没有完成的放好并整理一下自己。如果你在做三明治，在吃掉它之前你要先把用来做三明治的东西清理好，清扫一下柜台，洗干净做三明治碟子。这样你就完成了做三明治的工作，你就可以完成专注于下一个任务了。</p>\n<h2 id=\"04-少做\"><a href=\"#04-少做\" class=\"headerlink\" title=\"04. 少做\"></a>04. 少做</h2><p>Do less<br> <br>一个禅僧不会过一种懒惰的生活：他很早就醒来了而且每天都塞满了工作。然而，他不会有一个无休止的任务清单——今天他要完成特定的事情，不会太多。如果你少做，你就能够更专注地慢慢地、更彻底地做这些事情，如果你把一天用不同的任务填满，你就会急忙地从一件事情到另一件事情，而不会停下来去想你究竟做了些什么。\n </p>\n<h2 id=\"05-在事情之间留些空间\"><a href=\"#05-在事情之间留些空间\" class=\"headerlink\" title=\"05. 在事情之间留些空间\"></a>05. 在事情之间留些空间</h2><p>Put space between things<br> <br>跟“少做”原则相关，但这是管理你的日程表保证你总是有时间来完成每项任务的一种方法。不要把事情安排的过于紧密——相反在事情之间留些空间出来。这会让你的日程表更轻松，留出空间也可以防止万一一项任务花费的时间超过了你的计划。</p>\n<p>￼\n </p>\n<h2 id=\"06-培养一种仪式\"><a href=\"#06-培养一种仪式\" class=\"headerlink\" title=\"06.培养一种仪式\"></a>06.培养一种仪式</h2><p>Develop rituals<br> <br>禅僧们对于他们做的很多事情都有仪式，从吃饭到清洁到冥想。仪式给人一种重要的感觉——如果事情重要到需要一种仪式，就需要给予你完成的注意，并且慢慢地正确地来完成。你不必学习禅僧的仪式——你可以建立你自己的仪式，为食物的准备、为吃饭、为清洁、为你开始做的事情、为你醒来后做的事情和你上床之前做的事情、为你在锻炼之前做的事情。是的，为任何你想做的事情建立一种仪式。\n </p>\n<h2 id=\"07-为特定的事情分配好时间\"><a href=\"#07-为特定的事情分配好时间\" class=\"headerlink\" title=\"07. 为特定的事情分配好时间\"></a>07. 为特定的事情分配好时间</h2><p>Designate time for certain things<br> <br>在一天中的特定时间内禅僧是用来完成特定的活动的。洗澡的时间、工作的时间、清洁的时间、吃饭的时间。这可以保证这些事情有规律地完成。你可以为你自己的活动分配时间，不管是工作或是清洁或是锻炼或是宁静的沉思。如果它很重要需要有规律地来完成，那就考虑为它分配好时间吧。</p>\n<p>￼</p>\n<h2 id=\"08-花些时间在打坐上\"><a href=\"#08-花些时间在打坐上\" class=\"headerlink\" title=\"08. 花些时间在打坐上\"></a>08. 花些时间在打坐上</h2><p>Devote time to sitting<br> <br>在禅僧的一生中，禅宗打坐是他每天最重要的部分之一。每天，有专门分配用来打坐的时间。这种沉思确实是学习活在当下的练习。你可以花些时间来静坐冥想，或做我所做的：我以跑步做为活在当下的一种锻炼。同样地，你可以采用任何活动，只要你经常地去做并练习活在当下。\n </p>\n<h2 id=\"09-微笑和服务他人\"><a href=\"#09-微笑和服务他人\" class=\"headerlink\" title=\"09.微笑和服务他人\"></a>09.微笑和服务他人</h2><p>Smile and serve others<br>  <br>禅僧把他们每天中的部分时间用来服务他人，不管是寺院里的其他禅僧还是外面世界里的人们。这教会了他们谦逊，确保他们的生活不单单是自私的，也是为了奉献他人的。</p>\n<p>如果你是一个家长，可能你已经至少在家庭中为服务别人花了些时间，而不是家长的人们也许也做了这些。类似地，微笑并与人为善是改善你周围人生活的一种很好的方法。也可以考虑志愿参加慈善工作。</p>\n<p>￼\n </p>\n<h2 id=\"10-把清洁和烹饪变成冥想\"><a href=\"#10-把清洁和烹饪变成冥想\" class=\"headerlink\" title=\"10. 把清洁和烹饪变成冥想\"></a>10. 把清洁和烹饪变成冥想</h2><p>Make cleaning and cooking<br>become meditation<br> <br>除了上面提到的打坐以外，清洁和烹饪也是禅僧每天最荣耀的部分。他们都是练习专注力的好方式，可以是每天进行的很好的仪式。如果烹饪和清洁对你来说似乎烦琐的杂务，试着用冥想的方式来完成它们。全心全意做这些工作，集中注意、慢慢地、彻底地做这些事情。这会改变你的一天（同时也给你一间干净的房间）。\n </p>\n<h2 id=\"11-思考什么是必须的\"><a href=\"#11-思考什么是必须的\" class=\"headerlink\" title=\"11. 思考什么是必须的\"></a>11. 思考什么是必须的</h2><p>Think about what is necessary</p>\n<p>在禅僧的生活中基本上都是必须的要做的。他没有充满鞋子的衣柜或最新的时尚衣服。他没有冰箱和橱柜来存放垃圾食物。他没有最新的小玩意、汽车、电视或苹果音乐播放器。他有保暖的衣物、有避雨的房屋、必须的器具、不可少的工具和充饥的食物（他们吃的很简单，素餐通常有大米、味噌汤、蔬菜和泡菜组成）。<br> <br>现在，我的意思不是说你应该完成像禅僧一样生活——我也没有这样做。但这确实提醒我们在我们的生活中有很多事情是没有必要的。思考我们真正需要的是什么，考虑拥那些不必要的东西是否对我们真的重要，这对我们是有用的。</p>\n<p>￼\n </p>\n<h2 id=\"12-简单生活\"><a href=\"#12-简单生活\" class=\"headerlink\" title=\"12. 简单生活\"></a>12. 简单生活</h2><p>Live simply<br> <br>每11条原则——如果某些事情不是必须的——的推论，那么没有他们你也可以生活。所以简单生活就是尽可能地处理掉那些没有必要的和不重要的东西，为重要的东西留存空间。而什么是重要的是因人而异的。</p>\n<p>对我来说，家庭、写作、跑步和阅读是重要的。对其他人来说，也许护理和志愿工作、做礼拜和收集连环画是重要的。没有什么定律来规定对你来说什么应该重要的——但你应该考虑什么是你生命中最为重要的，通过去除不是那么重要的事情为你生命中重要的事情留出空间来</p>\n"},{"title":"python列表实现学生成绩管理系统","date":"2022-11-05T15:33:23.000Z","_content":"## 引言\n因为需要快速上手python，所以用python练了下学生成绩管理系统，现以实现初步增删改查功能，还有一些细节需要处理，源码如下：\n```\nlist=[]\nmax = 100\ndef menu():\n    print(\"===============\")\n    print(\"1、学生成绩录入\")\n    print(\"2、学生成绩删除\")\n    print(\"3、学生成绩修改\")\n    print(\"4、学生成绩查询\")\n    print(\"5、学生成绩打印\")\n    print(\"0、退       出\")\n    print(\"===============\")\ndef add():\n    for i in range(len(list),max):\n        list.append([])\n        print(\"请输入第\", len(list), \"位同学第学号\", end=\"\"), list[i].append(int(input()))\n        print(\"请输入学号为\", list[i][0], \"的学生成绩\", end=\"\"), list[i].append(int(input()))\n        b = str(input(\"还继续么（y/n）：\"))\n        if b == 'y':\n            pass\n        elif b == 'n':\n            break\n        else:\n            print(\"输入错误，即将退出\")\n            break\n\ndef dele():\n\n    i=0\n    a = int(input(\"请输入要删除信息的学号\"))\n    while (a!=list[i][0] and a<=len(list)):\n        i += 1\n    if a == list[i][0]:\n        del list[i]\n        print(\"删除成功\")\n    else:\n        print(\"查无此人\")\ndef alter():\n    i = 0\n    a = int(input(\"请输入要修改信息的学号\"))\n    while (a != list[i][0] and a <= len(list)):\n        i += 1\n    if a == list[i][0]:\n        del list[i][1]\n        print(\"请输入修改后的成绩：\",end=\"\")\n        list[i].append(int(input()))\n        print(\"修改成功\")\n    else:\n        print(\"查无此人\")\n        print(len(list))\n        print(a)\n        print(i)\ndef find():\n    i = 0\n    a = int(input(\"请输入要修改信息的学号\"))\n    while (a != list[i][0] and a <= len(list)):\n        i += 1\n    if a == list[i][0]:\n        print(\"查找到如下信息\")\n        print(list[i][0],list[i][1])\n    else:\n        print(\"查无此人\")\n\ndef printfs():\n    #print(list)\n    for i in range(len(list)):\n        print(list[i][0],list[i][1])\n\n\nmenu()\nwhile(1):\n    a = int(input(\"请输入需要使用的功能：\"))\n    if a==1:\n        add()\n    elif a==2:\n        dele()\n    elif a==3:\n        alter()\n    elif a==4:\n        find()\n    elif a==5:\n        printfs()\n    elif a==0:\n        break\n    else:\n        print(\"输入错误请重新输入\")\n```","source":"_posts/python_student.md","raw":"---\ntitle: python列表实现学生成绩管理系统\ndate: 2022/11/5 23:33:23\ntags: [Python]\n---\n## 引言\n因为需要快速上手python，所以用python练了下学生成绩管理系统，现以实现初步增删改查功能，还有一些细节需要处理，源码如下：\n```\nlist=[]\nmax = 100\ndef menu():\n    print(\"===============\")\n    print(\"1、学生成绩录入\")\n    print(\"2、学生成绩删除\")\n    print(\"3、学生成绩修改\")\n    print(\"4、学生成绩查询\")\n    print(\"5、学生成绩打印\")\n    print(\"0、退       出\")\n    print(\"===============\")\ndef add():\n    for i in range(len(list),max):\n        list.append([])\n        print(\"请输入第\", len(list), \"位同学第学号\", end=\"\"), list[i].append(int(input()))\n        print(\"请输入学号为\", list[i][0], \"的学生成绩\", end=\"\"), list[i].append(int(input()))\n        b = str(input(\"还继续么（y/n）：\"))\n        if b == 'y':\n            pass\n        elif b == 'n':\n            break\n        else:\n            print(\"输入错误，即将退出\")\n            break\n\ndef dele():\n\n    i=0\n    a = int(input(\"请输入要删除信息的学号\"))\n    while (a!=list[i][0] and a<=len(list)):\n        i += 1\n    if a == list[i][0]:\n        del list[i]\n        print(\"删除成功\")\n    else:\n        print(\"查无此人\")\ndef alter():\n    i = 0\n    a = int(input(\"请输入要修改信息的学号\"))\n    while (a != list[i][0] and a <= len(list)):\n        i += 1\n    if a == list[i][0]:\n        del list[i][1]\n        print(\"请输入修改后的成绩：\",end=\"\")\n        list[i].append(int(input()))\n        print(\"修改成功\")\n    else:\n        print(\"查无此人\")\n        print(len(list))\n        print(a)\n        print(i)\ndef find():\n    i = 0\n    a = int(input(\"请输入要修改信息的学号\"))\n    while (a != list[i][0] and a <= len(list)):\n        i += 1\n    if a == list[i][0]:\n        print(\"查找到如下信息\")\n        print(list[i][0],list[i][1])\n    else:\n        print(\"查无此人\")\n\ndef printfs():\n    #print(list)\n    for i in range(len(list)):\n        print(list[i][0],list[i][1])\n\n\nmenu()\nwhile(1):\n    a = int(input(\"请输入需要使用的功能：\"))\n    if a==1:\n        add()\n    elif a==2:\n        dele()\n    elif a==3:\n        alter()\n    elif a==4:\n        find()\n    elif a==5:\n        printfs()\n    elif a==0:\n        break\n    else:\n        print(\"输入错误请重新输入\")\n```","slug":"python_student","published":1,"updated":"2022-12-10T02:21:02.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva92001ju19k83ut3mq8","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>因为需要快速上手python，所以用python练了下学生成绩管理系统，现以实现初步增删改查功能，还有一些细节需要处理，源码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list=[]</span><br><span class=\"line\">max = 100</span><br><span class=\"line\">def menu():</span><br><span class=\"line\">    print(&quot;===============&quot;)</span><br><span class=\"line\">    print(&quot;1、学生成绩录入&quot;)</span><br><span class=\"line\">    print(&quot;2、学生成绩删除&quot;)</span><br><span class=\"line\">    print(&quot;3、学生成绩修改&quot;)</span><br><span class=\"line\">    print(&quot;4、学生成绩查询&quot;)</span><br><span class=\"line\">    print(&quot;5、学生成绩打印&quot;)</span><br><span class=\"line\">    print(&quot;0、退       出&quot;)</span><br><span class=\"line\">    print(&quot;===============&quot;)</span><br><span class=\"line\">def add():</span><br><span class=\"line\">    for i in range(len(list),max):</span><br><span class=\"line\">        list.append([])</span><br><span class=\"line\">        print(&quot;请输入第&quot;, len(list), &quot;位同学第学号&quot;, end=&quot;&quot;), list[i].append(int(input()))</span><br><span class=\"line\">        print(&quot;请输入学号为&quot;, list[i][0], &quot;的学生成绩&quot;, end=&quot;&quot;), list[i].append(int(input()))</span><br><span class=\"line\">        b = str(input(&quot;还继续么（y/n）：&quot;))</span><br><span class=\"line\">        if b == &#x27;y&#x27;:</span><br><span class=\"line\">            pass</span><br><span class=\"line\">        elif b == &#x27;n&#x27;:</span><br><span class=\"line\">            break</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(&quot;输入错误，即将退出&quot;)</span><br><span class=\"line\">            break</span><br><span class=\"line\"></span><br><span class=\"line\">def dele():</span><br><span class=\"line\"></span><br><span class=\"line\">    i=0</span><br><span class=\"line\">    a = int(input(&quot;请输入要删除信息的学号&quot;))</span><br><span class=\"line\">    while (a!=list[i][0] and a&lt;=len(list)):</span><br><span class=\"line\">        i += 1</span><br><span class=\"line\">    if a == list[i][0]:</span><br><span class=\"line\">        del list[i]</span><br><span class=\"line\">        print(&quot;删除成功&quot;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;查无此人&quot;)</span><br><span class=\"line\">def alter():</span><br><span class=\"line\">    i = 0</span><br><span class=\"line\">    a = int(input(&quot;请输入要修改信息的学号&quot;))</span><br><span class=\"line\">    while (a != list[i][0] and a &lt;= len(list)):</span><br><span class=\"line\">        i += 1</span><br><span class=\"line\">    if a == list[i][0]:</span><br><span class=\"line\">        del list[i][1]</span><br><span class=\"line\">        print(&quot;请输入修改后的成绩：&quot;,end=&quot;&quot;)</span><br><span class=\"line\">        list[i].append(int(input()))</span><br><span class=\"line\">        print(&quot;修改成功&quot;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;查无此人&quot;)</span><br><span class=\"line\">        print(len(list))</span><br><span class=\"line\">        print(a)</span><br><span class=\"line\">        print(i)</span><br><span class=\"line\">def find():</span><br><span class=\"line\">    i = 0</span><br><span class=\"line\">    a = int(input(&quot;请输入要修改信息的学号&quot;))</span><br><span class=\"line\">    while (a != list[i][0] and a &lt;= len(list)):</span><br><span class=\"line\">        i += 1</span><br><span class=\"line\">    if a == list[i][0]:</span><br><span class=\"line\">        print(&quot;查找到如下信息&quot;)</span><br><span class=\"line\">        print(list[i][0],list[i][1])</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;查无此人&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">def printfs():</span><br><span class=\"line\">    #print(list)</span><br><span class=\"line\">    for i in range(len(list)):</span><br><span class=\"line\">        print(list[i][0],list[i][1])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">menu()</span><br><span class=\"line\">while(1):</span><br><span class=\"line\">    a = int(input(&quot;请输入需要使用的功能：&quot;))</span><br><span class=\"line\">    if a==1:</span><br><span class=\"line\">        add()</span><br><span class=\"line\">    elif a==2:</span><br><span class=\"line\">        dele()</span><br><span class=\"line\">    elif a==3:</span><br><span class=\"line\">        alter()</span><br><span class=\"line\">    elif a==4:</span><br><span class=\"line\">        find()</span><br><span class=\"line\">    elif a==5:</span><br><span class=\"line\">        printfs()</span><br><span class=\"line\">    elif a==0:</span><br><span class=\"line\">        break</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;输入错误请重新输入&quot;)</span><br></pre></td></tr></table></figure>","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>因为需要快速上手python，所以用python练了下学生成绩管理系统，现以实现初步增删改查功能，还有一些细节需要处理，源码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list=[]</span><br><span class=\"line\">max = 100</span><br><span class=\"line\">def menu():</span><br><span class=\"line\">    print(&quot;===============&quot;)</span><br><span class=\"line\">    print(&quot;1、学生成绩录入&quot;)</span><br><span class=\"line\">    print(&quot;2、学生成绩删除&quot;)</span><br><span class=\"line\">    print(&quot;3、学生成绩修改&quot;)</span><br><span class=\"line\">    print(&quot;4、学生成绩查询&quot;)</span><br><span class=\"line\">    print(&quot;5、学生成绩打印&quot;)</span><br><span class=\"line\">    print(&quot;0、退       出&quot;)</span><br><span class=\"line\">    print(&quot;===============&quot;)</span><br><span class=\"line\">def add():</span><br><span class=\"line\">    for i in range(len(list),max):</span><br><span class=\"line\">        list.append([])</span><br><span class=\"line\">        print(&quot;请输入第&quot;, len(list), &quot;位同学第学号&quot;, end=&quot;&quot;), list[i].append(int(input()))</span><br><span class=\"line\">        print(&quot;请输入学号为&quot;, list[i][0], &quot;的学生成绩&quot;, end=&quot;&quot;), list[i].append(int(input()))</span><br><span class=\"line\">        b = str(input(&quot;还继续么（y/n）：&quot;))</span><br><span class=\"line\">        if b == &#x27;y&#x27;:</span><br><span class=\"line\">            pass</span><br><span class=\"line\">        elif b == &#x27;n&#x27;:</span><br><span class=\"line\">            break</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(&quot;输入错误，即将退出&quot;)</span><br><span class=\"line\">            break</span><br><span class=\"line\"></span><br><span class=\"line\">def dele():</span><br><span class=\"line\"></span><br><span class=\"line\">    i=0</span><br><span class=\"line\">    a = int(input(&quot;请输入要删除信息的学号&quot;))</span><br><span class=\"line\">    while (a!=list[i][0] and a&lt;=len(list)):</span><br><span class=\"line\">        i += 1</span><br><span class=\"line\">    if a == list[i][0]:</span><br><span class=\"line\">        del list[i]</span><br><span class=\"line\">        print(&quot;删除成功&quot;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;查无此人&quot;)</span><br><span class=\"line\">def alter():</span><br><span class=\"line\">    i = 0</span><br><span class=\"line\">    a = int(input(&quot;请输入要修改信息的学号&quot;))</span><br><span class=\"line\">    while (a != list[i][0] and a &lt;= len(list)):</span><br><span class=\"line\">        i += 1</span><br><span class=\"line\">    if a == list[i][0]:</span><br><span class=\"line\">        del list[i][1]</span><br><span class=\"line\">        print(&quot;请输入修改后的成绩：&quot;,end=&quot;&quot;)</span><br><span class=\"line\">        list[i].append(int(input()))</span><br><span class=\"line\">        print(&quot;修改成功&quot;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;查无此人&quot;)</span><br><span class=\"line\">        print(len(list))</span><br><span class=\"line\">        print(a)</span><br><span class=\"line\">        print(i)</span><br><span class=\"line\">def find():</span><br><span class=\"line\">    i = 0</span><br><span class=\"line\">    a = int(input(&quot;请输入要修改信息的学号&quot;))</span><br><span class=\"line\">    while (a != list[i][0] and a &lt;= len(list)):</span><br><span class=\"line\">        i += 1</span><br><span class=\"line\">    if a == list[i][0]:</span><br><span class=\"line\">        print(&quot;查找到如下信息&quot;)</span><br><span class=\"line\">        print(list[i][0],list[i][1])</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;查无此人&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">def printfs():</span><br><span class=\"line\">    #print(list)</span><br><span class=\"line\">    for i in range(len(list)):</span><br><span class=\"line\">        print(list[i][0],list[i][1])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">menu()</span><br><span class=\"line\">while(1):</span><br><span class=\"line\">    a = int(input(&quot;请输入需要使用的功能：&quot;))</span><br><span class=\"line\">    if a==1:</span><br><span class=\"line\">        add()</span><br><span class=\"line\">    elif a==2:</span><br><span class=\"line\">        dele()</span><br><span class=\"line\">    elif a==3:</span><br><span class=\"line\">        alter()</span><br><span class=\"line\">    elif a==4:</span><br><span class=\"line\">        find()</span><br><span class=\"line\">    elif a==5:</span><br><span class=\"line\">        printfs()</span><br><span class=\"line\">    elif a==0:</span><br><span class=\"line\">        break</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;输入错误请重新输入&quot;)</span><br></pre></td></tr></table></figure>"},{"title":"关于scanf函数地址列表的理解","date":"2022-11-05T10:00:00.000Z","_content":"## 引言\n计算机所处理的数据存放在内存\n内存就像个仓库，里面放着各种数据，我们定义的变量也在其中\n在计算机中，我们想找到某一变量，需要依靠地址查找\n就行去朋友家玩一样，先得知道朋友家的地址在哪，才能去到朋友家里\n## C语言变量\n```\nint a;\n```\n这里我们定义了一个变量，也可以说我们申请了一块内存空间用来存放数据，a是这块空间的别名\n\n## Scanf()\n```\nscanf(格式控制,地址表列);\n```\n注意：scanf函数中的格式控制后面应当是变量地址，而不是变量名\n\n## &号\n“&”又称为取址运算符，用于获取某一变量在内存中的地址\n\n## 重点来了\n在scanf()后面填的应该是一个地址，而我们上面所定义的是一块空间的别名，或者说a是用来表明有那么一块空间存在。\n所以我们需要用“&”取址运算符来获取a这块空间的地址，来让scanf知道输入的数据，应该存放在内存的那个位置\n\n因为scanf后面填的是地址，所以有些后面学到的本身就是地址的，就可以直接填到scanf后面用于接收数据\n例如：\n    指针，数组名\n\n这些都是在后面所学，所以不清楚很正常\n简单介绍下，指针定义就和定义普通变量一样，但要多加一个*号，他可以存放其他变量在内存中的地址，也可以说是位置，所以指针存放的是一个地址\n数组名，其实就是数组第一个元素的地址，所以也是一个地址\n\n## 那哪些情况要加&，哪些又不加呢\n小结一下：\n    总的来说只要是地址类的就可以不加，普通变量一类的就要加\n![](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/xin.png)\n\n因为指针是后面所学前期不理解很正常，学到后面知道指针是什么，回头再看scanf后面的地址列表是什么意思就明白了，前期的变量一般都要加&\n## 资料以及举例\n![](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/IMG_0625.JPG)\n以上是书本上的内容\n以下是三种举例，两种是可以不用加&的\n![](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/code.png)\n\n以下是具体代码：\n```\n#include <stdio.h>\nint main() {\n    int a;//a标示在内存中有一块空间名字为a\n    printf(\"a=\");\n    scanf(\"%d\",&a);\n    printf(\"输入的a=%d\\n\",a);\n    char b[4];//定义可以存放4个char类型的数组\n    printf(\"输入字符串:\");\n    scanf(\"%s\",b); //数入4个字符到b数组\n    printf(\"输入的字符串为：%s\\n\",b);  //打印数组b\n    int *p;//定义指针p ,定义指针p，*为定义指针的标示符\n    int c;//定义变量c\n    p=&c;//指针p存放c的地址\n    printf(\"输入一个值存放到p指针：\");\n    scanf(\"%d\",p);//输入一个整型数据到指针所指向的位置,输入数据到指针p,因为p所指向的是c的地址，所以数据具体是存放在c中\n    printf(\"c的值为:%d\\n\",c);//打印c的值\n    printf(\"p的值为:%d\\n\",*p);//打印指针p的值，因为p是指针，所以需要用*取值运行符号\n    printf(\"指针p的地址为:%p\\n\",p);//打印指针地址\n    return 0;\n}\n```\n\n指针学习链接.\n{% copy https://www.bilibili.com/video/BV17s411N78s?p=21&vd_source=d0bb45cb38d00ca4305644ec8d919620 %}\n指针加数组学习链接，为什么数组可以不用加&\n{% copy  https://www.bilibili.com/video/BV17s411N78s?p=23&vd_source=d0bb45cb38d00ca4305644ec8d919620 %}","source":"_posts/scanf.md","raw":"---\ntitle: 关于scanf函数地址列表的理解\ndate: 2022/11/5 18:00:00\ntags: [C]\n---\n## 引言\n计算机所处理的数据存放在内存\n内存就像个仓库，里面放着各种数据，我们定义的变量也在其中\n在计算机中，我们想找到某一变量，需要依靠地址查找\n就行去朋友家玩一样，先得知道朋友家的地址在哪，才能去到朋友家里\n## C语言变量\n```\nint a;\n```\n这里我们定义了一个变量，也可以说我们申请了一块内存空间用来存放数据，a是这块空间的别名\n\n## Scanf()\n```\nscanf(格式控制,地址表列);\n```\n注意：scanf函数中的格式控制后面应当是变量地址，而不是变量名\n\n## &号\n“&”又称为取址运算符，用于获取某一变量在内存中的地址\n\n## 重点来了\n在scanf()后面填的应该是一个地址，而我们上面所定义的是一块空间的别名，或者说a是用来表明有那么一块空间存在。\n所以我们需要用“&”取址运算符来获取a这块空间的地址，来让scanf知道输入的数据，应该存放在内存的那个位置\n\n因为scanf后面填的是地址，所以有些后面学到的本身就是地址的，就可以直接填到scanf后面用于接收数据\n例如：\n    指针，数组名\n\n这些都是在后面所学，所以不清楚很正常\n简单介绍下，指针定义就和定义普通变量一样，但要多加一个*号，他可以存放其他变量在内存中的地址，也可以说是位置，所以指针存放的是一个地址\n数组名，其实就是数组第一个元素的地址，所以也是一个地址\n\n## 那哪些情况要加&，哪些又不加呢\n小结一下：\n    总的来说只要是地址类的就可以不加，普通变量一类的就要加\n![](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/xin.png)\n\n因为指针是后面所学前期不理解很正常，学到后面知道指针是什么，回头再看scanf后面的地址列表是什么意思就明白了，前期的变量一般都要加&\n## 资料以及举例\n![](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/IMG_0625.JPG)\n以上是书本上的内容\n以下是三种举例，两种是可以不用加&的\n![](https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/code.png)\n\n以下是具体代码：\n```\n#include <stdio.h>\nint main() {\n    int a;//a标示在内存中有一块空间名字为a\n    printf(\"a=\");\n    scanf(\"%d\",&a);\n    printf(\"输入的a=%d\\n\",a);\n    char b[4];//定义可以存放4个char类型的数组\n    printf(\"输入字符串:\");\n    scanf(\"%s\",b); //数入4个字符到b数组\n    printf(\"输入的字符串为：%s\\n\",b);  //打印数组b\n    int *p;//定义指针p ,定义指针p，*为定义指针的标示符\n    int c;//定义变量c\n    p=&c;//指针p存放c的地址\n    printf(\"输入一个值存放到p指针：\");\n    scanf(\"%d\",p);//输入一个整型数据到指针所指向的位置,输入数据到指针p,因为p所指向的是c的地址，所以数据具体是存放在c中\n    printf(\"c的值为:%d\\n\",c);//打印c的值\n    printf(\"p的值为:%d\\n\",*p);//打印指针p的值，因为p是指针，所以需要用*取值运行符号\n    printf(\"指针p的地址为:%p\\n\",p);//打印指针地址\n    return 0;\n}\n```\n\n指针学习链接.\n{% copy https://www.bilibili.com/video/BV17s411N78s?p=21&vd_source=d0bb45cb38d00ca4305644ec8d919620 %}\n指针加数组学习链接，为什么数组可以不用加&\n{% copy  https://www.bilibili.com/video/BV17s411N78s?p=23&vd_source=d0bb45cb38d00ca4305644ec8d919620 %}","slug":"scanf","published":1,"updated":"2022-11-16T22:55:45.676Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva93001nu19kepi9c6wr","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>计算机所处理的数据存放在内存<br>内存就像个仓库，里面放着各种数据，我们定义的变量也在其中<br>在计算机中，我们想找到某一变量，需要依靠地址查找<br>就行去朋友家玩一样，先得知道朋友家的地址在哪，才能去到朋友家里</p>\n<h2 id=\"C语言变量\"><a href=\"#C语言变量\" class=\"headerlink\" title=\"C语言变量\"></a>C语言变量</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int a;</span><br></pre></td></tr></table></figure>\n<p>这里我们定义了一个变量，也可以说我们申请了一块内存空间用来存放数据，a是这块空间的别名</p>\n<h2 id=\"Scanf\"><a href=\"#Scanf\" class=\"headerlink\" title=\"Scanf()\"></a>Scanf()</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scanf(格式控制,地址表列);</span><br></pre></td></tr></table></figure>\n<p>注意：scanf函数中的格式控制后面应当是变量地址，而不是变量名</p>\n<h2 id=\"amp-号\"><a href=\"#amp-号\" class=\"headerlink\" title=\"&amp;号\"></a>&amp;号</h2><p>“&amp;”又称为取址运算符，用于获取某一变量在内存中的地址</p>\n<h2 id=\"重点来了\"><a href=\"#重点来了\" class=\"headerlink\" title=\"重点来了\"></a>重点来了</h2><p>在scanf()后面填的应该是一个地址，而我们上面所定义的是一块空间的别名，或者说a是用来表明有那么一块空间存在。<br>所以我们需要用“&amp;”取址运算符来获取a这块空间的地址，来让scanf知道输入的数据，应该存放在内存的那个位置</p>\n<p>因为scanf后面填的是地址，所以有些后面学到的本身就是地址的，就可以直接填到scanf后面用于接收数据<br>例如：<br>    指针，数组名</p>\n<p>这些都是在后面所学，所以不清楚很正常<br>简单介绍下，指针定义就和定义普通变量一样，但要多加一个*号，他可以存放其他变量在内存中的地址，也可以说是位置，所以指针存放的是一个地址<br>数组名，其实就是数组第一个元素的地址，所以也是一个地址</p>\n<h2 id=\"那哪些情况要加-amp-，哪些又不加呢\"><a href=\"#那哪些情况要加-amp-，哪些又不加呢\" class=\"headerlink\" title=\"那哪些情况要加&amp;，哪些又不加呢\"></a>那哪些情况要加&amp;，哪些又不加呢</h2><p>小结一下：<br>    总的来说只要是地址类的就可以不加，普通变量一类的就要加<br><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/xin.png\"></p>\n<p>因为指针是后面所学前期不理解很正常，学到后面知道指针是什么，回头再看scanf后面的地址列表是什么意思就明白了，前期的变量一般都要加&amp;</p>\n<h2 id=\"资料以及举例\"><a href=\"#资料以及举例\" class=\"headerlink\" title=\"资料以及举例\"></a>资料以及举例</h2><p><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/IMG_0625.JPG\"><br>以上是书本上的内容<br>以下是三种举例，两种是可以不用加&amp;的<br><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/code.png\"></p>\n<p>以下是具体代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    int a;//a标示在内存中有一块空间名字为a</span><br><span class=\"line\">    printf(&quot;a=&quot;);</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;a);</span><br><span class=\"line\">    printf(&quot;输入的a=%d\\n&quot;,a);</span><br><span class=\"line\">    char b[4];//定义可以存放4个char类型的数组</span><br><span class=\"line\">    printf(&quot;输入字符串:&quot;);</span><br><span class=\"line\">    scanf(&quot;%s&quot;,b); //数入4个字符到b数组</span><br><span class=\"line\">    printf(&quot;输入的字符串为：%s\\n&quot;,b);  //打印数组b</span><br><span class=\"line\">    int *p;//定义指针p ,定义指针p，*为定义指针的标示符</span><br><span class=\"line\">    int c;//定义变量c</span><br><span class=\"line\">    p=&amp;c;//指针p存放c的地址</span><br><span class=\"line\">    printf(&quot;输入一个值存放到p指针：&quot;);</span><br><span class=\"line\">    scanf(&quot;%d&quot;,p);//输入一个整型数据到指针所指向的位置,输入数据到指针p,因为p所指向的是c的地址，所以数据具体是存放在c中</span><br><span class=\"line\">    printf(&quot;c的值为:%d\\n&quot;,c);//打印c的值</span><br><span class=\"line\">    printf(&quot;p的值为:%d\\n&quot;,*p);//打印指针p的值，因为p是指针，所以需要用*取值运行符号</span><br><span class=\"line\">    printf(&quot;指针p的地址为:%p\\n&quot;,p);//打印指针地址</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>指针学习链接.</p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_3\" value=\"https://www.bilibili.com/video/BV17s411N78s?p=21&vd_source=d0bb45cb38d00ca4305644ec8d919620\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_3&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n<p>指针加数组学习链接，为什么数组可以不用加&amp;</p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_4\" value=\"https://www.bilibili.com/video/BV17s411N78s?p=23&vd_source=d0bb45cb38d00ca4305644ec8d919620\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_4&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>计算机所处理的数据存放在内存<br>内存就像个仓库，里面放着各种数据，我们定义的变量也在其中<br>在计算机中，我们想找到某一变量，需要依靠地址查找<br>就行去朋友家玩一样，先得知道朋友家的地址在哪，才能去到朋友家里</p>\n<h2 id=\"C语言变量\"><a href=\"#C语言变量\" class=\"headerlink\" title=\"C语言变量\"></a>C语言变量</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int a;</span><br></pre></td></tr></table></figure>\n<p>这里我们定义了一个变量，也可以说我们申请了一块内存空间用来存放数据，a是这块空间的别名</p>\n<h2 id=\"Scanf\"><a href=\"#Scanf\" class=\"headerlink\" title=\"Scanf()\"></a>Scanf()</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scanf(格式控制,地址表列);</span><br></pre></td></tr></table></figure>\n<p>注意：scanf函数中的格式控制后面应当是变量地址，而不是变量名</p>\n<h2 id=\"amp-号\"><a href=\"#amp-号\" class=\"headerlink\" title=\"&amp;号\"></a>&amp;号</h2><p>“&amp;”又称为取址运算符，用于获取某一变量在内存中的地址</p>\n<h2 id=\"重点来了\"><a href=\"#重点来了\" class=\"headerlink\" title=\"重点来了\"></a>重点来了</h2><p>在scanf()后面填的应该是一个地址，而我们上面所定义的是一块空间的别名，或者说a是用来表明有那么一块空间存在。<br>所以我们需要用“&amp;”取址运算符来获取a这块空间的地址，来让scanf知道输入的数据，应该存放在内存的那个位置</p>\n<p>因为scanf后面填的是地址，所以有些后面学到的本身就是地址的，就可以直接填到scanf后面用于接收数据<br>例如：<br>    指针，数组名</p>\n<p>这些都是在后面所学，所以不清楚很正常<br>简单介绍下，指针定义就和定义普通变量一样，但要多加一个*号，他可以存放其他变量在内存中的地址，也可以说是位置，所以指针存放的是一个地址<br>数组名，其实就是数组第一个元素的地址，所以也是一个地址</p>\n<h2 id=\"那哪些情况要加-amp-，哪些又不加呢\"><a href=\"#那哪些情况要加-amp-，哪些又不加呢\" class=\"headerlink\" title=\"那哪些情况要加&amp;，哪些又不加呢\"></a>那哪些情况要加&amp;，哪些又不加呢</h2><p>小结一下：<br>    总的来说只要是地址类的就可以不加，普通变量一类的就要加<br><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/xin.png\"></p>\n<p>因为指针是后面所学前期不理解很正常，学到后面知道指针是什么，回头再看scanf后面的地址列表是什么意思就明白了，前期的变量一般都要加&amp;</p>\n<h2 id=\"资料以及举例\"><a href=\"#资料以及举例\" class=\"headerlink\" title=\"资料以及举例\"></a>资料以及举例</h2><p><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/IMG_0625.JPG\"><br>以上是书本上的内容<br>以下是三种举例，两种是可以不用加&amp;的<br><img src=\"https://blog-alan.oss-cn-hangzhou.aliyuncs.com/hexo_blog/C/code.png\"></p>\n<p>以下是具体代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int main() &#123;</span><br><span class=\"line\">    int a;//a标示在内存中有一块空间名字为a</span><br><span class=\"line\">    printf(&quot;a=&quot;);</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;a);</span><br><span class=\"line\">    printf(&quot;输入的a=%d\\n&quot;,a);</span><br><span class=\"line\">    char b[4];//定义可以存放4个char类型的数组</span><br><span class=\"line\">    printf(&quot;输入字符串:&quot;);</span><br><span class=\"line\">    scanf(&quot;%s&quot;,b); //数入4个字符到b数组</span><br><span class=\"line\">    printf(&quot;输入的字符串为：%s\\n&quot;,b);  //打印数组b</span><br><span class=\"line\">    int *p;//定义指针p ,定义指针p，*为定义指针的标示符</span><br><span class=\"line\">    int c;//定义变量c</span><br><span class=\"line\">    p=&amp;c;//指针p存放c的地址</span><br><span class=\"line\">    printf(&quot;输入一个值存放到p指针：&quot;);</span><br><span class=\"line\">    scanf(&quot;%d&quot;,p);//输入一个整型数据到指针所指向的位置,输入数据到指针p,因为p所指向的是c的地址，所以数据具体是存放在c中</span><br><span class=\"line\">    printf(&quot;c的值为:%d\\n&quot;,c);//打印c的值</span><br><span class=\"line\">    printf(&quot;p的值为:%d\\n&quot;,*p);//打印指针p的值，因为p是指针，所以需要用*取值运行符号</span><br><span class=\"line\">    printf(&quot;指针p的地址为:%p\\n&quot;,p);//打印指针地址</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>指针学习链接.</p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_3\" value=\"https://www.bilibili.com/video/BV17s411N78s?p=21&vd_source=d0bb45cb38d00ca4305644ec8d919620\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_3&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n<p>指针加数组学习链接，为什么数组可以不用加&amp;</p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_4\" value=\"https://www.bilibili.com/video/BV17s411N78s?p=23&vd_source=d0bb45cb38d00ca4305644ec8d919620\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_4&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>"},{"title":"二分查找","date":"2022-11-18T13:52:22.000Z","_content":"## 1 . 算法思想：\n\n二分查找又称折半查找，适合对已经排好序的数据集合进行查找，时间复杂度为O(log2n),效率高。对一升序的数据集合，先找出升序数据集合最中间的元素，将数据划分为两个子集，将最中间的元素和关键字进行比较，如果相等则返回，如果大于关键字，则在前一个数据子集中查找，如果想小于反之，直至找到为止\n\n## 2 . 查找步骤：\n\n(1) 首先确定查找区间的中间位置（假定是一个升序的数组），那么mid = left + ( right - left ) / 2 ;\n//为了防止越界\n(2) 用待查找值与中间位置值进行比较，若相等，则找到，输出\n(3) 若大于，则在后半区域中继续进行折半查找\n(4) 若小于，则在前半区域中继续进行折半查找\n(5) 查找成功，则返回数值的数组下标\n\n\n## 3 . 代码实现\n```\ninclude <stdio.h>\nint main()\n{\n\tint arr[10] = { 1,2,3,4,5,6,7,8,9,10 };\n\tint k = 7;\n\tint sz = sizeof(arr) / sizeof(arr[0]);\n\tint left = 0;\n\tint right = sz - 1;\n\n\twhile (left<=right)\n\t{\n\t\t//int mid = (left + right) / 2;\n\t\tint mid = left + (right - left) / 2;//防止数据过大，越界\n\n\t\tif (arr[mid] < k)\n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t\telse if (arr[mid] > k)\n\t\t{\n\t\t\tright = mid - 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"找到了，下标是:%d\\n\", mid);\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (left > right)\n\t\tprintf(\"找不到\\n\");\n\n\treturn 0;\n}\n\n\n\n``` ","source":"_posts/twofind.md","raw":"---\ntitle: 二分查找\ndate: 2022/11/18 21:52:22\ntags: [C]\n---\n## 1 . 算法思想：\n\n二分查找又称折半查找，适合对已经排好序的数据集合进行查找，时间复杂度为O(log2n),效率高。对一升序的数据集合，先找出升序数据集合最中间的元素，将数据划分为两个子集，将最中间的元素和关键字进行比较，如果相等则返回，如果大于关键字，则在前一个数据子集中查找，如果想小于反之，直至找到为止\n\n## 2 . 查找步骤：\n\n(1) 首先确定查找区间的中间位置（假定是一个升序的数组），那么mid = left + ( right - left ) / 2 ;\n//为了防止越界\n(2) 用待查找值与中间位置值进行比较，若相等，则找到，输出\n(3) 若大于，则在后半区域中继续进行折半查找\n(4) 若小于，则在前半区域中继续进行折半查找\n(5) 查找成功，则返回数值的数组下标\n\n\n## 3 . 代码实现\n```\ninclude <stdio.h>\nint main()\n{\n\tint arr[10] = { 1,2,3,4,5,6,7,8,9,10 };\n\tint k = 7;\n\tint sz = sizeof(arr) / sizeof(arr[0]);\n\tint left = 0;\n\tint right = sz - 1;\n\n\twhile (left<=right)\n\t{\n\t\t//int mid = (left + right) / 2;\n\t\tint mid = left + (right - left) / 2;//防止数据过大，越界\n\n\t\tif (arr[mid] < k)\n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t\telse if (arr[mid] > k)\n\t\t{\n\t\t\tright = mid - 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"找到了，下标是:%d\\n\", mid);\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (left > right)\n\t\tprintf(\"找不到\\n\");\n\n\treturn 0;\n}\n\n\n\n``` ","slug":"twofind","published":1,"updated":"2022-11-18T13:53:39.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva93001qu19ka19z69j9","content":"<h2 id=\"1-算法思想：\"><a href=\"#1-算法思想：\" class=\"headerlink\" title=\"1 . 算法思想：\"></a>1 . 算法思想：</h2><p>二分查找又称折半查找，适合对已经排好序的数据集合进行查找，时间复杂度为O(log2n),效率高。对一升序的数据集合，先找出升序数据集合最中间的元素，将数据划分为两个子集，将最中间的元素和关键字进行比较，如果相等则返回，如果大于关键字，则在前一个数据子集中查找，如果想小于反之，直至找到为止</p>\n<h2 id=\"2-查找步骤：\"><a href=\"#2-查找步骤：\" class=\"headerlink\" title=\"2 . 查找步骤：\"></a>2 . 查找步骤：</h2><p>(1) 首先确定查找区间的中间位置（假定是一个升序的数组），那么mid = left + ( right - left ) / 2 ;<br>//为了防止越界<br>(2) 用待查找值与中间位置值进行比较，若相等，则找到，输出<br>(3) 若大于，则在后半区域中继续进行折半查找<br>(4) 若小于，则在前半区域中继续进行折半查找<br>(5) 查找成功，则返回数值的数组下标</p>\n<h2 id=\"3-代码实现\"><a href=\"#3-代码实现\" class=\"headerlink\" title=\"3 . 代码实现\"></a>3 . 代码实现</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint arr[10] = &#123; 1,2,3,4,5,6,7,8,9,10 &#125;;</span><br><span class=\"line\">\tint k = 7;</span><br><span class=\"line\">\tint sz = sizeof(arr) / sizeof(arr[0]);</span><br><span class=\"line\">\tint left = 0;</span><br><span class=\"line\">\tint right = sz - 1;</span><br><span class=\"line\"></span><br><span class=\"line\">\twhile (left&lt;=right)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t//int mid = (left + right) / 2;</span><br><span class=\"line\">\t\tint mid = left + (right - left) / 2;//防止数据过大，越界</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif (arr[mid] &lt; k)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tleft = mid + 1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\telse if (arr[mid] &gt; k)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tright = mid - 1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\telse</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tprintf(&quot;找到了，下标是:%d\\n&quot;, mid);</span><br><span class=\"line\">\t\t\tbreak;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif (left &gt; right)</span><br><span class=\"line\">\t\tprintf(&quot;找不到\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"1-算法思想：\"><a href=\"#1-算法思想：\" class=\"headerlink\" title=\"1 . 算法思想：\"></a>1 . 算法思想：</h2><p>二分查找又称折半查找，适合对已经排好序的数据集合进行查找，时间复杂度为O(log2n),效率高。对一升序的数据集合，先找出升序数据集合最中间的元素，将数据划分为两个子集，将最中间的元素和关键字进行比较，如果相等则返回，如果大于关键字，则在前一个数据子集中查找，如果想小于反之，直至找到为止</p>\n<h2 id=\"2-查找步骤：\"><a href=\"#2-查找步骤：\" class=\"headerlink\" title=\"2 . 查找步骤：\"></a>2 . 查找步骤：</h2><p>(1) 首先确定查找区间的中间位置（假定是一个升序的数组），那么mid = left + ( right - left ) / 2 ;<br>//为了防止越界<br>(2) 用待查找值与中间位置值进行比较，若相等，则找到，输出<br>(3) 若大于，则在后半区域中继续进行折半查找<br>(4) 若小于，则在前半区域中继续进行折半查找<br>(5) 查找成功，则返回数值的数组下标</p>\n<h2 id=\"3-代码实现\"><a href=\"#3-代码实现\" class=\"headerlink\" title=\"3 . 代码实现\"></a>3 . 代码实现</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include &lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint arr[10] = &#123; 1,2,3,4,5,6,7,8,9,10 &#125;;</span><br><span class=\"line\">\tint k = 7;</span><br><span class=\"line\">\tint sz = sizeof(arr) / sizeof(arr[0]);</span><br><span class=\"line\">\tint left = 0;</span><br><span class=\"line\">\tint right = sz - 1;</span><br><span class=\"line\"></span><br><span class=\"line\">\twhile (left&lt;=right)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t//int mid = (left + right) / 2;</span><br><span class=\"line\">\t\tint mid = left + (right - left) / 2;//防止数据过大，越界</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif (arr[mid] &lt; k)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tleft = mid + 1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\telse if (arr[mid] &gt; k)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tright = mid - 1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\telse</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tprintf(&quot;找到了，下标是:%d\\n&quot;, mid);</span><br><span class=\"line\">\t\t\tbreak;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif (left &gt; right)</span><br><span class=\"line\">\t\tprintf(&quot;找不到\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"一个瑜伽行者的自传摘录","date":"2022-12-10T02:30:32.000Z","_content":"\n对于任何新的提议，父亲通常会总是先说“不”。不立即接受，这是典型的法国式心态。\n他从不曾拥有任何奢侈品，鞋子总是穿到不能再穿时才扔掉。\n一个最球心灵平静的日，向来不会为了得到什么而开心，也不会失去为失去什么而忧虑。他知道，世间万物都是生不带来，死不带去的。\n妈妈严肃的告诫我，绝不可用语言的力量伤人，我此后一直都记得她的忠告，并遵守着。\n我们的圣体充满着磁场，会让喜马拉雅山上的野生动物们温驯地靠近我们。\n你是这样爱上帝的吗？难道经不起这样一个小考验吗？\n我将经历那些意识层次并立刻告诉你我所理解的。而有些教师则只会把经典塞进脑袋里，然后复诵出来连他们自己都不懂的东西。\n凡事有定期，万物有定时。\n上帝单纯，其余都是复杂的。不要在相对的世界中寻找绝对的价值。\n现人类心智的一统性，坚定不移只顾自己的利益。搁下你头脑里原来的东西（自私的想法和野心），自在地给予他人你所拥有的，在遭遇逆境打击时永不退缩！这就是修道！\n","source":"_posts/ywyjxz.md","raw":"---\ntitle: 一个瑜伽行者的自传摘录\ndate: 2022/12/10 10:30:32\ntags: [摘录]\n---\n\n对于任何新的提议，父亲通常会总是先说“不”。不立即接受，这是典型的法国式心态。\n他从不曾拥有任何奢侈品，鞋子总是穿到不能再穿时才扔掉。\n一个最球心灵平静的日，向来不会为了得到什么而开心，也不会失去为失去什么而忧虑。他知道，世间万物都是生不带来，死不带去的。\n妈妈严肃的告诫我，绝不可用语言的力量伤人，我此后一直都记得她的忠告，并遵守着。\n我们的圣体充满着磁场，会让喜马拉雅山上的野生动物们温驯地靠近我们。\n你是这样爱上帝的吗？难道经不起这样一个小考验吗？\n我将经历那些意识层次并立刻告诉你我所理解的。而有些教师则只会把经典塞进脑袋里，然后复诵出来连他们自己都不懂的东西。\n凡事有定期，万物有定时。\n上帝单纯，其余都是复杂的。不要在相对的世界中寻找绝对的价值。\n现人类心智的一统性，坚定不移只顾自己的利益。搁下你头脑里原来的东西（自私的想法和野心），自在地给予他人你所拥有的，在遭遇逆境打击时永不退缩！这就是修道！\n","slug":"ywyjxz","published":1,"updated":"2022-12-10T02:35:21.262Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva94001uu19khic16zrj","content":"<p>对于任何新的提议，父亲通常会总是先说“不”。不立即接受，这是典型的法国式心态。<br>他从不曾拥有任何奢侈品，鞋子总是穿到不能再穿时才扔掉。<br>一个最球心灵平静的日，向来不会为了得到什么而开心，也不会失去为失去什么而忧虑。他知道，世间万物都是生不带来，死不带去的。<br>妈妈严肃的告诫我，绝不可用语言的力量伤人，我此后一直都记得她的忠告，并遵守着。<br>我们的圣体充满着磁场，会让喜马拉雅山上的野生动物们温驯地靠近我们。<br>你是这样爱上帝的吗？难道经不起这样一个小考验吗？<br>我将经历那些意识层次并立刻告诉你我所理解的。而有些教师则只会把经典塞进脑袋里，然后复诵出来连他们自己都不懂的东西。<br>凡事有定期，万物有定时。<br>上帝单纯，其余都是复杂的。不要在相对的世界中寻找绝对的价值。<br>现人类心智的一统性，坚定不移只顾自己的利益。搁下你头脑里原来的东西（自私的想法和野心），自在地给予他人你所拥有的，在遭遇逆境打击时永不退缩！这就是修道！</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<p>对于任何新的提议，父亲通常会总是先说“不”。不立即接受，这是典型的法国式心态。<br>他从不曾拥有任何奢侈品，鞋子总是穿到不能再穿时才扔掉。<br>一个最球心灵平静的日，向来不会为了得到什么而开心，也不会失去为失去什么而忧虑。他知道，世间万物都是生不带来，死不带去的。<br>妈妈严肃的告诫我，绝不可用语言的力量伤人，我此后一直都记得她的忠告，并遵守着。<br>我们的圣体充满着磁场，会让喜马拉雅山上的野生动物们温驯地靠近我们。<br>你是这样爱上帝的吗？难道经不起这样一个小考验吗？<br>我将经历那些意识层次并立刻告诉你我所理解的。而有些教师则只会把经典塞进脑袋里，然后复诵出来连他们自己都不懂的东西。<br>凡事有定期，万物有定时。<br>上帝单纯，其余都是复杂的。不要在相对的世界中寻找绝对的价值。<br>现人类心智的一统性，坚定不移只顾自己的利益。搁下你头脑里原来的东西（自私的想法和野心），自在地给予他人你所拥有的，在遭遇逆境打击时永不退缩！这就是修道！</p>\n"},{"title":"学生成绩管理系统——二叉树","date":"2022-12-09T02:39:00.000Z","_content":"## 源代码下载\n代码放到了github上，下面是下载地址与源码\n{% copy https://github.com/Alanosy/git_study/blob/master/c/student_3.c %}\n\n## 代码\n```\n//头文件\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n//#include <unistd.h> //mac调用命令的头文件\n//#include <windows.h>  //windows调用命令的头文件\n//宏定义\n#define max_sub_num 30\n//枚举类型\nenum gender {male,female};\n//生日结构题\ntypedef struct birthday\n{\n    int year;\n    int month;\n    int day;\n}birthday;\n//科目结构体\ntypedef struct subject\n{\n    char s[20];\n    float score;\n}subject;\n//树存储结构\ntypedef struct tree\n{\n    int num;\n//    char num[15];\n    char name[10];\n    char major[20];\n    int grade;\n    birthday birt;\n    enum gender g;\n    subject sub[max_sub_num];\n    struct tree *rchild,*lchild;\n}tr,*tree;\n//目录\nvoid menu()\n{\n    printf(\"………………欢迎使用学籍管理系统……………………\\n\");\n    printf(\"………………     1.添加信息     ……………………\\n\");\n    printf(\"………………     2.删除信息     ……………………\\n\");\n    printf(\"………………     3.修改信息     ……………………\\n\");\n    printf(\"………………     4.显示信息     ……………………\\n\");\n    printf(\"………………     0.退出系统     ……………………\\n\");\n\n}\n//录入菜单\nvoid input_menu()\n{\n    printf(\"姓名 专业 年级 年 月 日 性别（男：M，女：F）：\\n\");\n\n}\n//打印菜单\nvoid print_menu()\n{\n    printf(\"学号 姓名 专业 年级 年 月 日 性别（男：M，女：F）：\\n\");\n}\n//查找存储位置\nint find(tree T,int a,tree f,tree *p)\n{\n    if(!T)\n    {\n        (*p)=f;\n        return 0;\n    }\n    else if((T->num)==a)\n    {\n        (*p)=T;\n        return 1;\n    }\n    else if((T->num)<a)\n    {\n        return find(T->rchild,a,T,p);\n    }\n    else\n    {\n        return find(T->lchild,a,T,p);\n    }\n}\n//录入数据\nint add(tree *T)\n{\n    int b,i,n,a;\n    char c;\n    tree s;\n    tree f,p;\n    f=p=NULL;\n    while(1)\n    {\n        printf(\"请输入学号：\");\n        scanf(\"%d\",&a);\n        if(!find((*T),a,f,&p))\n        {\n            s=(tree) malloc(sizeof (tr));\n            s->num=a;\n            input_menu();\n            scanf(\"%s %s %d %d %d %d %c\",s->name,s->major,&s->grade,&s->birt.year,&s->birt.month,&s->birt.day,&c);\n            if(c=='M')\n            {\n                s->g=male;\n            }\n            else\n                s->g=female;\n            printf(\"请输入科目数量：\");\n            scanf(\"%d\",&n);\n            printf(\"输入科目-成绩：\\n\");\n            for(i=0;i<n;i++)\n            {\n                scanf(\"%s %f\",s->sub[i].s,&s->sub[i].score);\n            }\n            s->rchild=s->lchild=NULL;\n            if(!p)\n            {\n                (*T)=s;\n                (*T)->rchild=(*T)->lchild=NULL;\n            }\n            else if((p->num)<(s->num))\n            {\n                p->rchild=s;\n            }\n            else\n            {\n                p->lchild=s;\n            }\n        }\n        getchar();\n        printf(\"还要继续么(Y/N)？：\");\n        char s=getchar();\n        switch (s) {\n            case 'n': return 1;\n            case 'N': return 1;\n            case 'y': break;\n            case 'Y': break;\n            default: break;\n        }\n    }\n}\n//显示所有信息\nvoid output(tree T)\n{\n    if(T!=NULL) {\n        if(T->num!=0)\n        {\n            printf(\"%d    %s     %s    %d    %d    %d    %d    \",T->num,T->name, T->major, T->grade, T->birt.year, T->birt.month, T->birt.day);\n            if (T->g == 0)\n            {\n                printf(\"male \\n\");\n            }\n            else\n            {\n                printf(\"female \\n\");\n            }\n            output(T->lchild);\n            output(T->rchild);\n        }\n    }\n}\n//删除信息\nint deletes(tree *p)\n{\n    tree temp,s;\n    temp=s=NULL;\n    if(((*p)->rchild==NULL)&&((*p)->lchild==NULL))\n    {\n        free(*p);\n        return 0;\n    }\n    else if((*p)->lchild)\n    {\n        for(temp=(*p)->lchild;temp->rchild!=NULL;temp=temp->rchild);\n        (*p)->num=temp->num;\n        deletes(&((*p)->lchild));\n        (*p)->lchild=NULL;\n    }\n    else\n    {\n        for(temp=(*p)->rchild;temp->lchild!=NULL;temp=temp->lchild);\n        (*p)->num=temp->num;\n        deletes(&((*p)->rchild));\n        (*p)->rchild=NULL;\n    }\n\n    return 1;\n}\n//删除查找\nint delete(tree *T,int a)\n{\n    if(!(*T))\n    {\n        printf(\"当前无信息\\n\");\n        return 0;\n    }\n    else\n    {\n        if((*T)->num==a)\n        {\n            return deletes(&(*T));\n        }\n        else if((*T)->num<a)\n        {\n            return delete((*T)->rchild,a);\n        }\n        else\n        {\n            return delete((*T)->lchild,a);\n        }\n\n    }\n}\n//修改信息\nint alters(tree *p)\n{\n    char c;\n    int i,n;\n    input_menu();\n    scanf(\"%s %s %d %d %d %d %c\",(*p)->name,(*p)->major,&(*p)->grade,&(*p)->birt.year,&(*p)->birt.month,&(*p)->birt.day,&c);\n    if(c=='M')\n    {\n        (*p)->g=male;\n    }\n    else\n        (*p)->g=female;\n    printf(\"请输入科目数量：\");\n    scanf(\"%d\",&n);\n    printf(\"输入科目-成绩：\\n\");\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s %f\",(*p)->sub[i].s,&(*p)->sub[i].score);\n    }\n    return 1;\n}\n//修改判断\nint alter(tree *T,int a)\n{\n    if(!(*T))\n    {\n        printf(\"当前无信息\\n\");\n        return 0;\n    }\n    else\n    {\n        if((*T)->num==a)\n        {\n            return alters(&(*T));\n        }\n        else if((*T)->num<a)\n        {\n            return alter((*T)->rchild,a);\n        }\n        else\n        {\n            return alter((*T)->lchild,a);\n        }\n\n    }\n}\n//程序入口\nint main()\n{\n    tree T=NULL;\n    int choose,a;\n    while (1)\n    {\n        menu();\n        printf(\"请输入你的选择：\");\n        scanf(\"%d\",&choose);\n        switch (choose) {\n            case 0:\n            {\n                exit(0);\n            }\n            case 1:\n            {\n                add(&T);\n                printf(\"插入成功\\n\");\n//                system(\"pause\");\n                break;\n            }\n            case 2:\n            {\n                printf(\"请输入学号：\\n\");\n                scanf(\"%d\",&a);\n                delete(&T,a);\n                printf(\"删除成功\\n\");\n//                system(\"pause\");\n                break;\n            }\n            case 3:\n            {\n                printf(\"请输入学号：\\n\");\n                scanf(\"%d\",&a);\n                alter(&T,a);\n                printf(\"修改成功\\n\");\n//                system(\"pause\");\n                break;\n            }\n            case 4:\n            {\n                print_menu();\n                output(T);\n                printf(\"显示成功\\n\");\n//                system(\"pause\");\n                break;\n            }\n            default:\n                break;\n        }\n    }\n}\n```","source":"_posts/two_tree.md","raw":"---\ntitle: 学生成绩管理系统——二叉树\ndate: 2022/12/9 10:39:00\ntag: [C]\n---\n## 源代码下载\n代码放到了github上，下面是下载地址与源码\n{% copy https://github.com/Alanosy/git_study/blob/master/c/student_3.c %}\n\n## 代码\n```\n//头文件\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n//#include <unistd.h> //mac调用命令的头文件\n//#include <windows.h>  //windows调用命令的头文件\n//宏定义\n#define max_sub_num 30\n//枚举类型\nenum gender {male,female};\n//生日结构题\ntypedef struct birthday\n{\n    int year;\n    int month;\n    int day;\n}birthday;\n//科目结构体\ntypedef struct subject\n{\n    char s[20];\n    float score;\n}subject;\n//树存储结构\ntypedef struct tree\n{\n    int num;\n//    char num[15];\n    char name[10];\n    char major[20];\n    int grade;\n    birthday birt;\n    enum gender g;\n    subject sub[max_sub_num];\n    struct tree *rchild,*lchild;\n}tr,*tree;\n//目录\nvoid menu()\n{\n    printf(\"………………欢迎使用学籍管理系统……………………\\n\");\n    printf(\"………………     1.添加信息     ……………………\\n\");\n    printf(\"………………     2.删除信息     ……………………\\n\");\n    printf(\"………………     3.修改信息     ……………………\\n\");\n    printf(\"………………     4.显示信息     ……………………\\n\");\n    printf(\"………………     0.退出系统     ……………………\\n\");\n\n}\n//录入菜单\nvoid input_menu()\n{\n    printf(\"姓名 专业 年级 年 月 日 性别（男：M，女：F）：\\n\");\n\n}\n//打印菜单\nvoid print_menu()\n{\n    printf(\"学号 姓名 专业 年级 年 月 日 性别（男：M，女：F）：\\n\");\n}\n//查找存储位置\nint find(tree T,int a,tree f,tree *p)\n{\n    if(!T)\n    {\n        (*p)=f;\n        return 0;\n    }\n    else if((T->num)==a)\n    {\n        (*p)=T;\n        return 1;\n    }\n    else if((T->num)<a)\n    {\n        return find(T->rchild,a,T,p);\n    }\n    else\n    {\n        return find(T->lchild,a,T,p);\n    }\n}\n//录入数据\nint add(tree *T)\n{\n    int b,i,n,a;\n    char c;\n    tree s;\n    tree f,p;\n    f=p=NULL;\n    while(1)\n    {\n        printf(\"请输入学号：\");\n        scanf(\"%d\",&a);\n        if(!find((*T),a,f,&p))\n        {\n            s=(tree) malloc(sizeof (tr));\n            s->num=a;\n            input_menu();\n            scanf(\"%s %s %d %d %d %d %c\",s->name,s->major,&s->grade,&s->birt.year,&s->birt.month,&s->birt.day,&c);\n            if(c=='M')\n            {\n                s->g=male;\n            }\n            else\n                s->g=female;\n            printf(\"请输入科目数量：\");\n            scanf(\"%d\",&n);\n            printf(\"输入科目-成绩：\\n\");\n            for(i=0;i<n;i++)\n            {\n                scanf(\"%s %f\",s->sub[i].s,&s->sub[i].score);\n            }\n            s->rchild=s->lchild=NULL;\n            if(!p)\n            {\n                (*T)=s;\n                (*T)->rchild=(*T)->lchild=NULL;\n            }\n            else if((p->num)<(s->num))\n            {\n                p->rchild=s;\n            }\n            else\n            {\n                p->lchild=s;\n            }\n        }\n        getchar();\n        printf(\"还要继续么(Y/N)？：\");\n        char s=getchar();\n        switch (s) {\n            case 'n': return 1;\n            case 'N': return 1;\n            case 'y': break;\n            case 'Y': break;\n            default: break;\n        }\n    }\n}\n//显示所有信息\nvoid output(tree T)\n{\n    if(T!=NULL) {\n        if(T->num!=0)\n        {\n            printf(\"%d    %s     %s    %d    %d    %d    %d    \",T->num,T->name, T->major, T->grade, T->birt.year, T->birt.month, T->birt.day);\n            if (T->g == 0)\n            {\n                printf(\"male \\n\");\n            }\n            else\n            {\n                printf(\"female \\n\");\n            }\n            output(T->lchild);\n            output(T->rchild);\n        }\n    }\n}\n//删除信息\nint deletes(tree *p)\n{\n    tree temp,s;\n    temp=s=NULL;\n    if(((*p)->rchild==NULL)&&((*p)->lchild==NULL))\n    {\n        free(*p);\n        return 0;\n    }\n    else if((*p)->lchild)\n    {\n        for(temp=(*p)->lchild;temp->rchild!=NULL;temp=temp->rchild);\n        (*p)->num=temp->num;\n        deletes(&((*p)->lchild));\n        (*p)->lchild=NULL;\n    }\n    else\n    {\n        for(temp=(*p)->rchild;temp->lchild!=NULL;temp=temp->lchild);\n        (*p)->num=temp->num;\n        deletes(&((*p)->rchild));\n        (*p)->rchild=NULL;\n    }\n\n    return 1;\n}\n//删除查找\nint delete(tree *T,int a)\n{\n    if(!(*T))\n    {\n        printf(\"当前无信息\\n\");\n        return 0;\n    }\n    else\n    {\n        if((*T)->num==a)\n        {\n            return deletes(&(*T));\n        }\n        else if((*T)->num<a)\n        {\n            return delete((*T)->rchild,a);\n        }\n        else\n        {\n            return delete((*T)->lchild,a);\n        }\n\n    }\n}\n//修改信息\nint alters(tree *p)\n{\n    char c;\n    int i,n;\n    input_menu();\n    scanf(\"%s %s %d %d %d %d %c\",(*p)->name,(*p)->major,&(*p)->grade,&(*p)->birt.year,&(*p)->birt.month,&(*p)->birt.day,&c);\n    if(c=='M')\n    {\n        (*p)->g=male;\n    }\n    else\n        (*p)->g=female;\n    printf(\"请输入科目数量：\");\n    scanf(\"%d\",&n);\n    printf(\"输入科目-成绩：\\n\");\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s %f\",(*p)->sub[i].s,&(*p)->sub[i].score);\n    }\n    return 1;\n}\n//修改判断\nint alter(tree *T,int a)\n{\n    if(!(*T))\n    {\n        printf(\"当前无信息\\n\");\n        return 0;\n    }\n    else\n    {\n        if((*T)->num==a)\n        {\n            return alters(&(*T));\n        }\n        else if((*T)->num<a)\n        {\n            return alter((*T)->rchild,a);\n        }\n        else\n        {\n            return alter((*T)->lchild,a);\n        }\n\n    }\n}\n//程序入口\nint main()\n{\n    tree T=NULL;\n    int choose,a;\n    while (1)\n    {\n        menu();\n        printf(\"请输入你的选择：\");\n        scanf(\"%d\",&choose);\n        switch (choose) {\n            case 0:\n            {\n                exit(0);\n            }\n            case 1:\n            {\n                add(&T);\n                printf(\"插入成功\\n\");\n//                system(\"pause\");\n                break;\n            }\n            case 2:\n            {\n                printf(\"请输入学号：\\n\");\n                scanf(\"%d\",&a);\n                delete(&T,a);\n                printf(\"删除成功\\n\");\n//                system(\"pause\");\n                break;\n            }\n            case 3:\n            {\n                printf(\"请输入学号：\\n\");\n                scanf(\"%d\",&a);\n                alter(&T,a);\n                printf(\"修改成功\\n\");\n//                system(\"pause\");\n                break;\n            }\n            case 4:\n            {\n                print_menu();\n                output(T);\n                printf(\"显示成功\\n\");\n//                system(\"pause\");\n                break;\n            }\n            default:\n                break;\n        }\n    }\n}\n```","slug":"two_tree","published":1,"updated":"2022-12-09T02:44:14.394Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva95001yu19kgi933hja","content":"<h2 id=\"源代码下载\"><a href=\"#源代码下载\" class=\"headerlink\" title=\"源代码下载\"></a>源代码下载</h2><p>代码放到了github上，下面是下载地址与源码</p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_5\" value=\"https://github.com/Alanosy/git_study/blob/master/c/student_3.c\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_5&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//头文件</span><br><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">//#include &lt;unistd.h&gt; //mac调用命令的头文件</span><br><span class=\"line\">//#include &lt;windows.h&gt;  //windows调用命令的头文件</span><br><span class=\"line\">//宏定义</span><br><span class=\"line\">#define max_sub_num 30</span><br><span class=\"line\">//枚举类型</span><br><span class=\"line\">enum gender &#123;male,female&#125;;</span><br><span class=\"line\">//生日结构题</span><br><span class=\"line\">typedef struct birthday</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int year;</span><br><span class=\"line\">    int month;</span><br><span class=\"line\">    int day;</span><br><span class=\"line\">&#125;birthday;</span><br><span class=\"line\">//科目结构体</span><br><span class=\"line\">typedef struct subject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char s[20];</span><br><span class=\"line\">    float score;</span><br><span class=\"line\">&#125;subject;</span><br><span class=\"line\">//树存储结构</span><br><span class=\"line\">typedef struct tree</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int num;</span><br><span class=\"line\">//    char num[15];</span><br><span class=\"line\">    char name[10];</span><br><span class=\"line\">    char major[20];</span><br><span class=\"line\">    int grade;</span><br><span class=\"line\">    birthday birt;</span><br><span class=\"line\">    enum gender g;</span><br><span class=\"line\">    subject sub[max_sub_num];</span><br><span class=\"line\">    struct tree *rchild,*lchild;</span><br><span class=\"line\">&#125;tr,*tree;</span><br><span class=\"line\">//目录</span><br><span class=\"line\">void menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;………………欢迎使用学籍管理系统……………………\\n&quot;);</span><br><span class=\"line\">    printf(&quot;………………     1.添加信息     ……………………\\n&quot;);</span><br><span class=\"line\">    printf(&quot;………………     2.删除信息     ……………………\\n&quot;);</span><br><span class=\"line\">    printf(&quot;………………     3.修改信息     ……………………\\n&quot;);</span><br><span class=\"line\">    printf(&quot;………………     4.显示信息     ……………………\\n&quot;);</span><br><span class=\"line\">    printf(&quot;………………     0.退出系统     ……………………\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//录入菜单</span><br><span class=\"line\">void input_menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;姓名 专业 年级 年 月 日 性别（男：M，女：F）：\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//打印菜单</span><br><span class=\"line\">void print_menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;学号 姓名 专业 年级 年 月 日 性别（男：M，女：F）：\\n&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//查找存储位置</span><br><span class=\"line\">int find(tree T,int a,tree f,tree *p)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(!T)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        (*p)=f;</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else if((T-&gt;num)==a)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        (*p)=T;</span><br><span class=\"line\">        return 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else if((T-&gt;num)&lt;a)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return find(T-&gt;rchild,a,T,p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return find(T-&gt;lchild,a,T,p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//录入数据</span><br><span class=\"line\">int add(tree *T)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int b,i,n,a;</span><br><span class=\"line\">    char c;</span><br><span class=\"line\">    tree s;</span><br><span class=\"line\">    tree f,p;</span><br><span class=\"line\">    f=p=NULL;</span><br><span class=\"line\">    while(1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;请输入学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;a);</span><br><span class=\"line\">        if(!find((*T),a,f,&amp;p))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            s=(tree) malloc(sizeof (tr));</span><br><span class=\"line\">            s-&gt;num=a;</span><br><span class=\"line\">            input_menu();</span><br><span class=\"line\">            scanf(&quot;%s %s %d %d %d %d %c&quot;,s-&gt;name,s-&gt;major,&amp;s-&gt;grade,&amp;s-&gt;birt.year,&amp;s-&gt;birt.month,&amp;s-&gt;birt.day,&amp;c);</span><br><span class=\"line\">            if(c==&#x27;M&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                s-&gt;g=male;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">                s-&gt;g=female;</span><br><span class=\"line\">            printf(&quot;请输入科目数量：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">            printf(&quot;输入科目-成绩：\\n&quot;);</span><br><span class=\"line\">            for(i=0;i&lt;n;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                scanf(&quot;%s %f&quot;,s-&gt;sub[i].s,&amp;s-&gt;sub[i].score);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            s-&gt;rchild=s-&gt;lchild=NULL;</span><br><span class=\"line\">            if(!p)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                (*T)=s;</span><br><span class=\"line\">                (*T)-&gt;rchild=(*T)-&gt;lchild=NULL;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if((p-&gt;num)&lt;(s-&gt;num))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                p-&gt;rchild=s;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                p-&gt;lchild=s;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还要继续么(Y/N)？：&quot;);</span><br><span class=\"line\">        char s=getchar();</span><br><span class=\"line\">        switch (s) &#123;</span><br><span class=\"line\">            case &#x27;n&#x27;: return 1;</span><br><span class=\"line\">            case &#x27;N&#x27;: return 1;</span><br><span class=\"line\">            case &#x27;y&#x27;: break;</span><br><span class=\"line\">            case &#x27;Y&#x27;: break;</span><br><span class=\"line\">            default: break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//显示所有信息</span><br><span class=\"line\">void output(tree T)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(T!=NULL) &#123;</span><br><span class=\"line\">        if(T-&gt;num!=0)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%d    %s     %s    %d    %d    %d    %d    &quot;,T-&gt;num,T-&gt;name, T-&gt;major, T-&gt;grade, T-&gt;birt.year, T-&gt;birt.month, T-&gt;birt.day);</span><br><span class=\"line\">            if (T-&gt;g == 0)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;male \\n&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;female \\n&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            output(T-&gt;lchild);</span><br><span class=\"line\">            output(T-&gt;rchild);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//删除信息</span><br><span class=\"line\">int deletes(tree *p)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    tree temp,s;</span><br><span class=\"line\">    temp=s=NULL;</span><br><span class=\"line\">    if(((*p)-&gt;rchild==NULL)&amp;&amp;((*p)-&gt;lchild==NULL))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        free(*p);</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else if((*p)-&gt;lchild)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(temp=(*p)-&gt;lchild;temp-&gt;rchild!=NULL;temp=temp-&gt;rchild);</span><br><span class=\"line\">        (*p)-&gt;num=temp-&gt;num;</span><br><span class=\"line\">        deletes(&amp;((*p)-&gt;lchild));</span><br><span class=\"line\">        (*p)-&gt;lchild=NULL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(temp=(*p)-&gt;rchild;temp-&gt;lchild!=NULL;temp=temp-&gt;lchild);</span><br><span class=\"line\">        (*p)-&gt;num=temp-&gt;num;</span><br><span class=\"line\">        deletes(&amp;((*p)-&gt;rchild));</span><br><span class=\"line\">        (*p)-&gt;rchild=NULL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//删除查找</span><br><span class=\"line\">int delete(tree *T,int a)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(!(*T))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;当前无信息\\n&quot;);</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if((*T)-&gt;num==a)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return deletes(&amp;(*T));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if((*T)-&gt;num&lt;a)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return delete((*T)-&gt;rchild,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return delete((*T)-&gt;lchild,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//修改信息</span><br><span class=\"line\">int alters(tree *p)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char c;</span><br><span class=\"line\">    int i,n;</span><br><span class=\"line\">    input_menu();</span><br><span class=\"line\">    scanf(&quot;%s %s %d %d %d %d %c&quot;,(*p)-&gt;name,(*p)-&gt;major,&amp;(*p)-&gt;grade,&amp;(*p)-&gt;birt.year,&amp;(*p)-&gt;birt.month,&amp;(*p)-&gt;birt.day,&amp;c);</span><br><span class=\"line\">    if(c==&#x27;M&#x27;)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        (*p)-&gt;g=male;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">        (*p)-&gt;g=female;</span><br><span class=\"line\">    printf(&quot;请输入科目数量：&quot;);</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">    printf(&quot;输入科目-成绩：\\n&quot;);</span><br><span class=\"line\">    for(i=0;i&lt;n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        scanf(&quot;%s %f&quot;,(*p)-&gt;sub[i].s,&amp;(*p)-&gt;sub[i].score);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//修改判断</span><br><span class=\"line\">int alter(tree *T,int a)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(!(*T))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;当前无信息\\n&quot;);</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if((*T)-&gt;num==a)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return alters(&amp;(*T));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if((*T)-&gt;num&lt;a)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return alter((*T)-&gt;rchild,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return alter((*T)-&gt;lchild,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//程序入口</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    tree T=NULL;</span><br><span class=\"line\">    int choose,a;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        printf(&quot;请输入你的选择：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;choose);</span><br><span class=\"line\">        switch (choose) &#123;</span><br><span class=\"line\">            case 0:</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                exit(0);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            case 1:</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                add(&amp;T);</span><br><span class=\"line\">                printf(&quot;插入成功\\n&quot;);</span><br><span class=\"line\">//                system(&quot;pause&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            case 2:</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;请输入学号：\\n&quot;);</span><br><span class=\"line\">                scanf(&quot;%d&quot;,&amp;a);</span><br><span class=\"line\">                delete(&amp;T,a);</span><br><span class=\"line\">                printf(&quot;删除成功\\n&quot;);</span><br><span class=\"line\">//                system(&quot;pause&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            case 3:</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;请输入学号：\\n&quot;);</span><br><span class=\"line\">                scanf(&quot;%d&quot;,&amp;a);</span><br><span class=\"line\">                alter(&amp;T,a);</span><br><span class=\"line\">                printf(&quot;修改成功\\n&quot;);</span><br><span class=\"line\">//                system(&quot;pause&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            case 4:</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                print_menu();</span><br><span class=\"line\">                output(T);</span><br><span class=\"line\">                printf(&quot;显示成功\\n&quot;);</span><br><span class=\"line\">//                system(&quot;pause&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            default:</span><br><span class=\"line\">                break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"源代码下载\"><a href=\"#源代码下载\" class=\"headerlink\" title=\"源代码下载\"></a>源代码下载</h2><p>代码放到了github上，下面是下载地址与源码</p>\n<div class=\"tag-plugin copy\"><input class=\"copy-area\" readonly id=\"copy_5\" value=\"https://github.com/Alanosy/git_study/blob/master/c/student_3.c\"><button class=\"copy-btn\" onclick=\"util.copy(&quot;copy_5&quot;,&quot;Copied!&quot;)\"><svg class=\"icon copy-btn\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z\"></path></svg></button></div>\n\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//头文件</span><br><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">//#include &lt;unistd.h&gt; //mac调用命令的头文件</span><br><span class=\"line\">//#include &lt;windows.h&gt;  //windows调用命令的头文件</span><br><span class=\"line\">//宏定义</span><br><span class=\"line\">#define max_sub_num 30</span><br><span class=\"line\">//枚举类型</span><br><span class=\"line\">enum gender &#123;male,female&#125;;</span><br><span class=\"line\">//生日结构题</span><br><span class=\"line\">typedef struct birthday</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int year;</span><br><span class=\"line\">    int month;</span><br><span class=\"line\">    int day;</span><br><span class=\"line\">&#125;birthday;</span><br><span class=\"line\">//科目结构体</span><br><span class=\"line\">typedef struct subject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char s[20];</span><br><span class=\"line\">    float score;</span><br><span class=\"line\">&#125;subject;</span><br><span class=\"line\">//树存储结构</span><br><span class=\"line\">typedef struct tree</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int num;</span><br><span class=\"line\">//    char num[15];</span><br><span class=\"line\">    char name[10];</span><br><span class=\"line\">    char major[20];</span><br><span class=\"line\">    int grade;</span><br><span class=\"line\">    birthday birt;</span><br><span class=\"line\">    enum gender g;</span><br><span class=\"line\">    subject sub[max_sub_num];</span><br><span class=\"line\">    struct tree *rchild,*lchild;</span><br><span class=\"line\">&#125;tr,*tree;</span><br><span class=\"line\">//目录</span><br><span class=\"line\">void menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;………………欢迎使用学籍管理系统……………………\\n&quot;);</span><br><span class=\"line\">    printf(&quot;………………     1.添加信息     ……………………\\n&quot;);</span><br><span class=\"line\">    printf(&quot;………………     2.删除信息     ……………………\\n&quot;);</span><br><span class=\"line\">    printf(&quot;………………     3.修改信息     ……………………\\n&quot;);</span><br><span class=\"line\">    printf(&quot;………………     4.显示信息     ……………………\\n&quot;);</span><br><span class=\"line\">    printf(&quot;………………     0.退出系统     ……………………\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//录入菜单</span><br><span class=\"line\">void input_menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;姓名 专业 年级 年 月 日 性别（男：M，女：F）：\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//打印菜单</span><br><span class=\"line\">void print_menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printf(&quot;学号 姓名 专业 年级 年 月 日 性别（男：M，女：F）：\\n&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//查找存储位置</span><br><span class=\"line\">int find(tree T,int a,tree f,tree *p)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(!T)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        (*p)=f;</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else if((T-&gt;num)==a)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        (*p)=T;</span><br><span class=\"line\">        return 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else if((T-&gt;num)&lt;a)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return find(T-&gt;rchild,a,T,p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return find(T-&gt;lchild,a,T,p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//录入数据</span><br><span class=\"line\">int add(tree *T)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int b,i,n,a;</span><br><span class=\"line\">    char c;</span><br><span class=\"line\">    tree s;</span><br><span class=\"line\">    tree f,p;</span><br><span class=\"line\">    f=p=NULL;</span><br><span class=\"line\">    while(1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;请输入学号：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;a);</span><br><span class=\"line\">        if(!find((*T),a,f,&amp;p))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            s=(tree) malloc(sizeof (tr));</span><br><span class=\"line\">            s-&gt;num=a;</span><br><span class=\"line\">            input_menu();</span><br><span class=\"line\">            scanf(&quot;%s %s %d %d %d %d %c&quot;,s-&gt;name,s-&gt;major,&amp;s-&gt;grade,&amp;s-&gt;birt.year,&amp;s-&gt;birt.month,&amp;s-&gt;birt.day,&amp;c);</span><br><span class=\"line\">            if(c==&#x27;M&#x27;)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                s-&gt;g=male;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">                s-&gt;g=female;</span><br><span class=\"line\">            printf(&quot;请输入科目数量：&quot;);</span><br><span class=\"line\">            scanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">            printf(&quot;输入科目-成绩：\\n&quot;);</span><br><span class=\"line\">            for(i=0;i&lt;n;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                scanf(&quot;%s %f&quot;,s-&gt;sub[i].s,&amp;s-&gt;sub[i].score);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            s-&gt;rchild=s-&gt;lchild=NULL;</span><br><span class=\"line\">            if(!p)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                (*T)=s;</span><br><span class=\"line\">                (*T)-&gt;rchild=(*T)-&gt;lchild=NULL;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if((p-&gt;num)&lt;(s-&gt;num))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                p-&gt;rchild=s;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                p-&gt;lchild=s;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        printf(&quot;还要继续么(Y/N)？：&quot;);</span><br><span class=\"line\">        char s=getchar();</span><br><span class=\"line\">        switch (s) &#123;</span><br><span class=\"line\">            case &#x27;n&#x27;: return 1;</span><br><span class=\"line\">            case &#x27;N&#x27;: return 1;</span><br><span class=\"line\">            case &#x27;y&#x27;: break;</span><br><span class=\"line\">            case &#x27;Y&#x27;: break;</span><br><span class=\"line\">            default: break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//显示所有信息</span><br><span class=\"line\">void output(tree T)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(T!=NULL) &#123;</span><br><span class=\"line\">        if(T-&gt;num!=0)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            printf(&quot;%d    %s     %s    %d    %d    %d    %d    &quot;,T-&gt;num,T-&gt;name, T-&gt;major, T-&gt;grade, T-&gt;birt.year, T-&gt;birt.month, T-&gt;birt.day);</span><br><span class=\"line\">            if (T-&gt;g == 0)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;male \\n&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;female \\n&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            output(T-&gt;lchild);</span><br><span class=\"line\">            output(T-&gt;rchild);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//删除信息</span><br><span class=\"line\">int deletes(tree *p)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    tree temp,s;</span><br><span class=\"line\">    temp=s=NULL;</span><br><span class=\"line\">    if(((*p)-&gt;rchild==NULL)&amp;&amp;((*p)-&gt;lchild==NULL))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        free(*p);</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else if((*p)-&gt;lchild)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(temp=(*p)-&gt;lchild;temp-&gt;rchild!=NULL;temp=temp-&gt;rchild);</span><br><span class=\"line\">        (*p)-&gt;num=temp-&gt;num;</span><br><span class=\"line\">        deletes(&amp;((*p)-&gt;lchild));</span><br><span class=\"line\">        (*p)-&gt;lchild=NULL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(temp=(*p)-&gt;rchild;temp-&gt;lchild!=NULL;temp=temp-&gt;lchild);</span><br><span class=\"line\">        (*p)-&gt;num=temp-&gt;num;</span><br><span class=\"line\">        deletes(&amp;((*p)-&gt;rchild));</span><br><span class=\"line\">        (*p)-&gt;rchild=NULL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//删除查找</span><br><span class=\"line\">int delete(tree *T,int a)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(!(*T))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;当前无信息\\n&quot;);</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if((*T)-&gt;num==a)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return deletes(&amp;(*T));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if((*T)-&gt;num&lt;a)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return delete((*T)-&gt;rchild,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return delete((*T)-&gt;lchild,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//修改信息</span><br><span class=\"line\">int alters(tree *p)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char c;</span><br><span class=\"line\">    int i,n;</span><br><span class=\"line\">    input_menu();</span><br><span class=\"line\">    scanf(&quot;%s %s %d %d %d %d %c&quot;,(*p)-&gt;name,(*p)-&gt;major,&amp;(*p)-&gt;grade,&amp;(*p)-&gt;birt.year,&amp;(*p)-&gt;birt.month,&amp;(*p)-&gt;birt.day,&amp;c);</span><br><span class=\"line\">    if(c==&#x27;M&#x27;)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        (*p)-&gt;g=male;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">        (*p)-&gt;g=female;</span><br><span class=\"line\">    printf(&quot;请输入科目数量：&quot;);</span><br><span class=\"line\">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class=\"line\">    printf(&quot;输入科目-成绩：\\n&quot;);</span><br><span class=\"line\">    for(i=0;i&lt;n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        scanf(&quot;%s %f&quot;,(*p)-&gt;sub[i].s,&amp;(*p)-&gt;sub[i].score);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//修改判断</span><br><span class=\"line\">int alter(tree *T,int a)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(!(*T))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf(&quot;当前无信息\\n&quot;);</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if((*T)-&gt;num==a)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return alters(&amp;(*T));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if((*T)-&gt;num&lt;a)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return alter((*T)-&gt;rchild,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return alter((*T)-&gt;lchild,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//程序入口</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    tree T=NULL;</span><br><span class=\"line\">    int choose,a;</span><br><span class=\"line\">    while (1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        printf(&quot;请输入你的选择：&quot;);</span><br><span class=\"line\">        scanf(&quot;%d&quot;,&amp;choose);</span><br><span class=\"line\">        switch (choose) &#123;</span><br><span class=\"line\">            case 0:</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                exit(0);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            case 1:</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                add(&amp;T);</span><br><span class=\"line\">                printf(&quot;插入成功\\n&quot;);</span><br><span class=\"line\">//                system(&quot;pause&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            case 2:</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;请输入学号：\\n&quot;);</span><br><span class=\"line\">                scanf(&quot;%d&quot;,&amp;a);</span><br><span class=\"line\">                delete(&amp;T,a);</span><br><span class=\"line\">                printf(&quot;删除成功\\n&quot;);</span><br><span class=\"line\">//                system(&quot;pause&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            case 3:</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot;请输入学号：\\n&quot;);</span><br><span class=\"line\">                scanf(&quot;%d&quot;,&amp;a);</span><br><span class=\"line\">                alter(&amp;T,a);</span><br><span class=\"line\">                printf(&quot;修改成功\\n&quot;);</span><br><span class=\"line\">//                system(&quot;pause&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            case 4:</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                print_menu();</span><br><span class=\"line\">                output(T);</span><br><span class=\"line\">                printf(&quot;显示成功\\n&quot;);</span><br><span class=\"line\">//                system(&quot;pause&quot;);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            default:</span><br><span class=\"line\">                break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"摘录","date":"2022-11-17T23:30:32.000Z","_content":"\n## 悠悠岁月\n\nEverything will be in a second. The dictionary of words amassed between cradle and deathbed, eliminated. All there will be is silence and no words to say it. Nothing will come out of the open mouth, neither I nor me. Language will continue to put the world into words. In conversation around a holiday table, we will be nothing but a first name, increasingly faceless, until we vanish into the vast anonymity of a distant generation.\n\n一切都会在一秒钟内被抹去。在摇篮到临终床之间累积成字典的词汇会消失。所有剩下的只有寂静，且无法诉说。张开的嘴什么也说不出，包括自我。语言会继续把世界变为词汇。在节假日餐桌旁的谈话里，我们将只是个名字，面目越来越模糊，直至消失为匿名的，遥远的一代人","source":"_posts/zhailu.md","raw":"---\ntitle: 摘录\ndate: 2022/11/18 07:30:32\ntags: [摘录]\n---\n\n## 悠悠岁月\n\nEverything will be in a second. The dictionary of words amassed between cradle and deathbed, eliminated. All there will be is silence and no words to say it. Nothing will come out of the open mouth, neither I nor me. Language will continue to put the world into words. In conversation around a holiday table, we will be nothing but a first name, increasingly faceless, until we vanish into the vast anonymity of a distant generation.\n\n一切都会在一秒钟内被抹去。在摇篮到临终床之间累积成字典的词汇会消失。所有剩下的只有寂静，且无法诉说。张开的嘴什么也说不出，包括自我。语言会继续把世界变为词汇。在节假日餐桌旁的谈话里，我们将只是个名字，面目越来越模糊，直至消失为匿名的，遥远的一代人","slug":"zhailu","published":1,"updated":"2022-12-10T02:19:26.562Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbhcva9f002nu19k1keuge8n","content":"<h2 id=\"悠悠岁月\"><a href=\"#悠悠岁月\" class=\"headerlink\" title=\"悠悠岁月\"></a>悠悠岁月</h2><p>Everything will be in a second. The dictionary of words amassed between cradle and deathbed, eliminated. All there will be is silence and no words to say it. Nothing will come out of the open mouth, neither I nor me. Language will continue to put the world into words. In conversation around a holiday table, we will be nothing but a first name, increasingly faceless, until we vanish into the vast anonymity of a distant generation.</p>\n<p>一切都会在一秒钟内被抹去。在摇篮到临终床之间累积成字典的词汇会消失。所有剩下的只有寂静，且无法诉说。张开的嘴什么也说不出，包括自我。语言会继续把世界变为词汇。在节假日餐桌旁的谈话里，我们将只是个名字，面目越来越模糊，直至消失为匿名的，遥远的一代人</p>\n","site":{"data":{"widgets":{"recent":{"layout":"recent","rss":null,"limit":5},"welcome":{"layout":"markdown","title":"欢迎","content":"欢迎光临小站，采用Hexo开源主题Stellar，此刚使用不久，有些功能还在研究中，敬请期待......\n"},"toc":{"layout":"toc","list_number":false,"min_depth":2,"max_depth":5,"fallback":"recent"},"widgets":{"recent":{"layout":"recent","rss":"/atom.xml","limit":5}},"tagcloud":{"layout":"tagcloud","title":"标签云","min_font":12,"max_font":24,"amount":100,"orderby":"name","order":1,"color":false,"start_color":null,"end_color":null,"show_count":false},"ghuser":{"layout":"ghuser","api":"https://api.github.com","username":"github","avatar":true,"menu":true},"ghrepo":{"layout":"ghrepo"},"related":{"layout":"related"},"timeline":{"layout":"timeline","title":"近期动态","api":"https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues","user":null,"hide":null}}}},"excerpt":"","more":"<h2 id=\"悠悠岁月\"><a href=\"#悠悠岁月\" class=\"headerlink\" title=\"悠悠岁月\"></a>悠悠岁月</h2><p>Everything will be in a second. The dictionary of words amassed between cradle and deathbed, eliminated. All there will be is silence and no words to say it. Nothing will come out of the open mouth, neither I nor me. Language will continue to put the world into words. In conversation around a holiday table, we will be nothing but a first name, increasingly faceless, until we vanish into the vast anonymity of a distant generation.</p>\n<p>一切都会在一秒钟内被抹去。在摇篮到临终床之间累积成字典的词汇会消失。所有剩下的只有寂静，且无法诉说。张开的嘴什么也说不出，包括自我。语言会继续把世界变为词汇。在节假日餐桌旁的谈话里，我们将只是个名字，面目越来越模糊，直至消失为匿名的，遥远的一代人</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clbhcva8n0009u19khpaf6t4o","category_id":"clbhcva8i0004u19k766lby81","_id":"clbhcva8y000zu19k8zoz6u0j"},{"post_id":"clbhcva8n0009u19khpaf6t4o","category_id":"clbhcva8u000ou19k43cqhggx","_id":"clbhcva8z0014u19kglaj2fym"},{"post_id":"clbhcva8d0001u19k0c816joo","category_id":"clbhcva8i0004u19k766lby81","_id":"clbhcva8z0018u19kf0xi71cy"},{"post_id":"clbhcva8d0001u19k0c816joo","category_id":"clbhcva8w000uu19k5s2jf36n","_id":"clbhcva90001bu19k4bu94wuk"},{"post_id":"clbhcva8o000bu19kcy7rfpmk","category_id":"clbhcva8i0004u19k766lby81","_id":"clbhcva91001eu19k8594fyut"},{"post_id":"clbhcva8o000bu19kcy7rfpmk","category_id":"clbhcva8u000ou19k43cqhggx","_id":"clbhcva92001iu19kcka76vep"},{"post_id":"clbhcva8q000gu19kfgap3h3q","category_id":"clbhcva8i0004u19k766lby81","_id":"clbhcva92001ku19kermfga5a"},{"post_id":"clbhcva8q000gu19kfgap3h3q","category_id":"clbhcva8u000ou19k43cqhggx","_id":"clbhcva93001ou19k7p0d4bxe"},{"post_id":"clbhcva8h0003u19ka7daf7z9","category_id":"clbhcva8i0004u19k766lby81","_id":"clbhcva94001tu19kc2vnfcsg"},{"post_id":"clbhcva8h0003u19ka7daf7z9","category_id":"clbhcva91001du19k24b311ww","_id":"clbhcva95001xu19k8zuo96cs"},{"post_id":"clbhcva8s000iu19kcs1l1606","category_id":"clbhcva8i0004u19k766lby81","_id":"clbhcva960021u19kd36da6fs"},{"post_id":"clbhcva8s000iu19kcs1l1606","category_id":"clbhcva8u000ou19k43cqhggx","_id":"clbhcva970024u19kan248kv0"},{"post_id":"clbhcva8t000mu19k6hj561ys","category_id":"clbhcva8i0004u19k766lby81","_id":"clbhcva970026u19k3lhhg12t"},{"post_id":"clbhcva8t000mu19k6hj561ys","category_id":"clbhcva8u000ou19k43cqhggx","_id":"clbhcva970029u19ke38356vg"},{"post_id":"clbhcva8k0007u19kfl1c4odn","category_id":"clbhcva8i0004u19k766lby81","_id":"clbhcva97002bu19keej51fz2"},{"post_id":"clbhcva8k0007u19kfl1c4odn","category_id":"clbhcva8w000uu19k5s2jf36n","_id":"clbhcva98002eu19k0gt8ffhc"}],"PostTag":[{"post_id":"clbhcva8d0001u19k0c816joo","tag_id":"clbhcva8k0005u19k5ust5nwj","_id":"clbhcva8q000eu19k9h8b4dkc"},{"post_id":"clbhcva8k0007u19kfl1c4odn","tag_id":"clbhcva8k0005u19k5ust5nwj","_id":"clbhcva8t000lu19k3ktkad4f"},{"post_id":"clbhcva8t000mu19k6hj561ys","tag_id":"clbhcva8s000ku19khqjldpsc","_id":"clbhcva8v000qu19kga2xey40"},{"post_id":"clbhcva8n0009u19khpaf6t4o","tag_id":"clbhcva8s000ku19khqjldpsc","_id":"clbhcva8w000su19k9jhwc8pw"},{"post_id":"clbhcva8o000bu19kcy7rfpmk","tag_id":"clbhcva8s000ku19khqjldpsc","_id":"clbhcva8x000xu19k1xu482nh"},{"post_id":"clbhcva8q000gu19kfgap3h3q","tag_id":"clbhcva8s000ku19khqjldpsc","_id":"clbhcva8z0013u19k03fl95ff"},{"post_id":"clbhcva8s000iu19kcs1l1606","tag_id":"clbhcva8s000ku19khqjldpsc","_id":"clbhcva90001au19kg43w2wy3"},{"post_id":"clbhcva8u000nu19kemzo0xfy","tag_id":"clbhcva8z0016u19kbcz6ap49","_id":"clbhcva92001hu19kdvsdcloq"},{"post_id":"clbhcva8v000ru19k6v3j5hs8","tag_id":"clbhcva91001fu19k5hqbboth","_id":"clbhcva93001pu19k7vvygspn"},{"post_id":"clbhcva92001ju19k83ut3mq8","tag_id":"clbhcva8z0016u19kbcz6ap49","_id":"clbhcva94001ru19kc0oy6js3"},{"post_id":"clbhcva93001nu19kepi9c6wr","tag_id":"clbhcva8s000ku19khqjldpsc","_id":"clbhcva95001wu19kcixjchmf"},{"post_id":"clbhcva93001qu19ka19z69j9","tag_id":"clbhcva8s000ku19khqjldpsc","_id":"clbhcva96001zu19kfsfx9t2t"},{"post_id":"clbhcva8w000tu19k3ukfgcju","tag_id":"clbhcva92001mu19k9lrc4xeh","_id":"clbhcva970023u19k248i157y"},{"post_id":"clbhcva94001uu19khic16zrj","tag_id":"clbhcva92001mu19k9lrc4xeh","_id":"clbhcva970025u19k7csz8h29"},{"post_id":"clbhcva95001yu19kgi933hja","tag_id":"clbhcva8s000ku19khqjldpsc","_id":"clbhcva970028u19kbknk9gi0"},{"post_id":"clbhcva8x000wu19k401x8hre","tag_id":"clbhcva91001fu19k5hqbboth","_id":"clbhcva97002au19k21cmervu"},{"post_id":"clbhcva8x000yu19k69zj18xa","tag_id":"clbhcva92001mu19k9lrc4xeh","_id":"clbhcva98002du19k0uhd6xxa"},{"post_id":"clbhcva8y0012u19k05eoe9fc","tag_id":"clbhcva92001mu19k9lrc4xeh","_id":"clbhcva98002fu19khuud3ehb"},{"post_id":"clbhcva8z0015u19kcm21elbh","tag_id":"clbhcva92001mu19k9lrc4xeh","_id":"clbhcva98002hu19kdfpe8d7h"},{"post_id":"clbhcva900019u19k8c6p8mcv","tag_id":"clbhcva92001mu19k9lrc4xeh","_id":"clbhcva98002ju19k1nk7a8k7"},{"post_id":"clbhcva90001cu19kbb4ngrc6","tag_id":"clbhcva92001mu19k9lrc4xeh","_id":"clbhcva99002lu19kc4vz8gbm"},{"post_id":"clbhcva91001gu19k6qj9hxup","tag_id":"clbhcva92001mu19k9lrc4xeh","_id":"clbhcva99002mu19k3bsl8kwx"},{"post_id":"clbhcva9f002nu19k1keuge8n","tag_id":"clbhcva92001mu19k9lrc4xeh","_id":"clbhcva9g002ou19k980a3345"}],"Tag":[{"name":"Linux","_id":"clbhcva8k0005u19k5ust5nwj"},{"name":"C","_id":"clbhcva8s000ku19khqjldpsc"},{"name":"Python","_id":"clbhcva8z0016u19kbcz6ap49"},{"name":"灵感","_id":"clbhcva91001fu19k5hqbboth"},{"name":"摘录","_id":"clbhcva92001mu19k9lrc4xeh"}]}}